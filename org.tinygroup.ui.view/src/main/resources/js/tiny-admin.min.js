/*begin tiny-admin.min.js*/


function Emitter(a) {
    return a ? mixin(a) : void 0
}

(function () {
    String.prototype.endsWith || (String.prototype.endsWith = function (a) {
        return -1 !== this.indexOf(a, this.length - a.length)
    }),
    String.prototype.trim || (String.prototype.trim = function () {
        return this.replace(/^\s+|\s+$/g, "")
    }),
    Array.prototype.indexOf || (Array.prototype.indexOf = function (a, b) {
        var c, d, e;
        if (void 0 === this || null === this) throw new TypeError('"this" is null or not defined');
        for (d = this.length >>> 0, b = +b || 0, 1 / 0 === Math.abs(b) && (b = 0), 0 > b && (b += d, 0 > b && (b = 0)), c = e = b; d >= b ? d > e : e > d; c = d >= b ? ++e : --e)
        if (this[c] === a) return c;
        return -1
    }),
    Function.prototype.bind || (Function.prototype.bind = function (a) {
        var b, c, d, e;
        if ("function" != typeof this) throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
        return b = Array.prototype.slice.call(arguments, 1),
        e = this,
        d = function () {},
        c = function () {
            return e.apply(this instanceof d && a ? this : a, b.concat(Array.prototype.slice.call(arguments)))
        },
        d.prototype = this.prototype,
        c.prototype = new d,
        c
    }),
    Object.keys || (Object.keys = function () {
        "use strict";
        var a, b, c;
        return c = Object.prototype.hasOwnProperty,
        b = {
            "toString": null
        }.propertyIsEnumerable("toString") ? !1 : !0,
        a = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],


        function (d) {
            var e, f, g, h, i, j, k;
            if ("object" != typeof d && ("function" != typeof d || null === d)) throw new TypeError("Object.keys called on non-object");
            for (g = [], h = 0, j = d.length; j > h; h++) f = d[h],
            c.call(d, f) && g.push(f);
            if (b) for (i = 0, k = a.length; k > i; i++) e = a[i],
            c.call(d, e) && g.push(e);
            return g
        }
    }.call(this)),
    window.getScreenSize = function (a, b) {
		if ($.browser.msie && 9 > $.browser.version) return "desktop";
        return a.is(":visible") ? "small" : b.is(":visible") ? "tablet" : "desktop"
    },
    window.elHasClass = function (a, b) {
        return (" " + a.className + " ").indexOf(" " + b + " ") > -1
    },
    window.elRemoveClass = function (a, b) {
        return a.className = (" " + a.className + " ").replace(" " + b + " ", " ").trim()
    }
}).call(this),


function () {
    var a, b;
    b = {
        "is_mobile": !1,
        "resize_delay": 400,
        "stored_values_prefix": "pa_",
        "main_menu": {
            "accordion": !0,
            "animation_speed": 250,
            "store_state": !0,
            "store_state_key": "mmstate",
            "disable_animation_on": [],
            "dropdown_close_delay": 300,
            "detect_active": !0,
            "detect_active_predicate": function (a, b) {
                return a === b
            }
        },
        "consts": {
            "COLORS": ["#71c73e", "#77b7c5", "#d54848", "#6c42e5", "#e8e64e", "#dd56e6", "#ecad3f", "#618b9d", "#b68b68", "#36a766", "#3156be", "#00b3ff", "#646464", "#a946e8", "#9d9d9d"]
        }
    },
    a = function () {
        return this.init = [],
        this.plugins = {},
        this.settings = {},
        this.localStorageSupported = "undefined" != typeof window.Storage ? !0 : !1,
        this
    },
    a.prototype.start = function (a, c) {
        return null == a && (a = []),
        null == c && (c = {}),
        window.onload = function (d) {
            return function () {
                var e, f, g, h;
                for ($("html").addClass("pxajs"), a.length > 0 && $.merge(d.init, a), d.settings = $.extend(!0, {}, b, c || {}), d.settings.is_mobile = /iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase()), d.settings.is_mobile && FastClick && FastClick.attach(document.body), h = d.init, f = 0, g = h.length; g > f; f++) e = h[f],
                $.proxy(e, d)();
                return $(window).trigger("pa.loaded"),
                $(window).resize()
            }
        }(this),
        this
    },
    a.prototype.addInitializer = function (a) {
        return this.init.push(a)
    },
    a.prototype.initPlugin = function (a, b) {
        return this.plugins[a] = b,
        b.init ? b.init() : void 0
    },
    a.prototype.storeValue = function (a, b, c) {
        var d;
        if (null == c && (c = !1), this.localStorageSupported && !c) try {
            return void window.localStorage.setItem(this.settings.stored_values_prefix + a, b)
        } catch (e) {
            d = e
        }
        return document.cookie = this.settings.stored_values_prefix + a + "=" + escape(b)
    },
    a.prototype.storeValues = function (a, b) {
        var c, d, e, f;
        if (null == b && (b = !1), this.localStorageSupported && !b) try {
            for (d in a) e = a[d],
            window.localStorage.setItem(this.settings.stored_values_prefix + d, e);
            return
        } catch (g) {
            c = g
        }
        f = [];
        for (d in a)
        e = a[d],
        f.push(document.cookie = this.settings.stored_values_prefix + d + "=" + escape(e));
        return f
    },
    a.prototype.getStoredValue = function (a, b, c) {
        var d, e, f, g, h, i, j, k, l;
        if (null == b && (b = !1), null == c && (c = null), this.localStorageSupported && !b) try {
            return i = window.localStorage.getItem(this.settings.stored_values_prefix + a),
            i ? i : c
        } catch (m) {
            f = m
        }
        for (e = document.cookie.split(";"), k = 0, l = e.length; l > k; k++) if (d = e[k], h = d.indexOf("="), g = d.substr(0, h).replace(/^\s+|\s+$/g, ""), j = d.substr(h + 1).replace(/^\s+|\s+$/g, ""), g === this.settings.stored_values_prefix + a) return j;
        return c
    },
    a.prototype.getStoredValues = function (a, b, c) {
        var d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;
        for (null == b && (b = !1), null == c && (c = null), k = {}, m = 0, p = a.length; p > m; m++) h = a[m],
        k[h] = c;
        if (this.localStorageSupported && !b) try {
            for (n = 0, q = a.length; q > n; n++) h = a[n],
            j = window.localStorage.getItem(this.settings.stored_values_prefix + h),
            j && (k[h] = j);
            return k
        } catch (s) {
            f = s
        }
        for (e = document.cookie.split(";"), o = 0, r = e.length; r > o; o++) d = e[o],
        i = d.indexOf("="),
        g = d.substr(0, i).replace(/^\s+|\s+$/g, ""),
        l = d.substr(i + 1).replace(/^\s+|\s+$/g, ""),
        g === this.settings.stored_values_prefix + h && (k[h] = l);
        return k
    },
    a.Constructor = a,
    window.TinyAdmin = new a
}.call(this),



FastClick.prototype.deviceIsAndroid = navigator.userAgent.indexOf("Android") > 0,
FastClick.prototype.deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent),
FastClick.prototype.deviceIsIOS4 = FastClick.prototype.deviceIsIOS && /OS 4_\d(_\d)?/.test(navigator.userAgent),
FastClick.prototype.deviceIsIOSWithBadTarget = FastClick.prototype.deviceIsIOS && /OS ([6-9]|\d{2})_\d/.test(navigator.userAgent),
FastClick.prototype.needsClick = function (a) {
    "use strict";
    switch (a.nodeName.toLowerCase()) {
    case "button":
    case "select":
    case "textarea":
        if (a.disabled) return !0;
        break;
    case "input":
        if (this.deviceIsIOS && "file" === a.type || a.disabled) return !0;
        break;
    case "label":
    case "video":
        return !0
    }
    return /\bneedsclick\b/.test(a.className)
},
FastClick.prototype.needsFocus = function (a) {
    "use strict";
    switch (a.nodeName.toLowerCase()) {
    case "textarea":
        return !0;
    case "select":
        return !this.deviceIsAndroid;
    case "input":
        switch (a.type) {
        case "button":
        case "checkbox":
        case "file":
        case "image":
        case "radio":
        case "submit":
            return !1
        }
        return !a.disabled && !a.readOnly;
    default:
        return /\bneedsfocus\b/.test(a.className)
    }
},
FastClick.prototype.sendClick = function (a, b) {
    "use strict";
    var c, d;
    document.activeElement && document.activeElement !== a && document.activeElement.blur(),
    d = b.changedTouches[0],
    c = document.createEvent("MouseEvents"),
    c.initMouseEvent(this.determineEventType(a), !0, !0, window, 1, d.screenX, d.screenY, d.clientX, d.clientY, !1, !1, !1, !1, 0, null),
    c.forwardedTouchEvent = !0,
    a.dispatchEvent(c)
},
FastClick.prototype.determineEventType = function (a) {
    "use strict";
    return this.deviceIsAndroid && "select" === a.tagName.toLowerCase() ? "mousedown" : "click"
},
FastClick.prototype.focus = function (a) {
    "use strict";
    var b;
    this.deviceIsIOS && a.setSelectionRange && 0 !== a.type.indexOf("date") && "time" !== a.type ? (b = a.value.length, a.setSelectionRange(b, b)) : a.focus()
},
FastClick.prototype.updateScrollParent = function (a) {
    "use strict";
    var b, c;
    if (b = a.fastClickScrollParent, !b || !b.contains(a)) {
        c = a;
        do {
            if (c.scrollHeight > c.offsetHeight) {
                b = c,
                a.fastClickScrollParent = c;
                break
            }
            c = c.parentElement
        } while (c)
    }
    b && (b.fastClickLastScrollTop = b.scrollTop)
},
FastClick.prototype.getTargetElementFromEventTarget = function (a) {
    "use strict";
    return a.nodeType === Node.TEXT_NODE ? a.parentNode : a
},
FastClick.prototype.onTouchStart = function (a) {
    "use strict";
    var b, c, d;
    if (a.targetTouches.length > 1) return !0;
    if (b = this.getTargetElementFromEventTarget(a.target), c = a.targetTouches[0], this.deviceIsIOS) {
        if (d = window.getSelection(), d.rangeCount && !d.isCollapsed) return !0;
        if (!this.deviceIsIOS4) {
            if (c.identifier === this.lastTouchIdentifier) return a.preventDefault(),
            !1;
            this.lastTouchIdentifier = c.identifier,
            this.updateScrollParent(b)
        }
    }
    return this.trackingClick = !0,
    this.trackingClickStart = a.timeStamp,
    this.targetElement = b,
    this.touchStartX = c.pageX,
    this.touchStartY = c.pageY,
    a.timeStamp - this.lastClickTime < 200 && a.preventDefault(),
    !0
},
FastClick.prototype.touchHasMoved = function (a) {
    "use strict";
    var b = a.changedTouches[0],
        c = this.touchBoundary;
    return Math.abs(b.pageX - this.touchStartX) > c || Math.abs(b.pageY - this.touchStartY) > c ? !0 : !1
},
FastClick.prototype.onTouchMove = function (a) {
    "use strict";
    return this.trackingClick ? ((this.targetElement !== this.getTargetElementFromEventTarget(a.target) || this.touchHasMoved(a)) && (this.trackingClick = !1, this.targetElement = null), !0) : !0
},
FastClick.prototype.findControl = function (a) {
    "use strict";
    return void 0 !== a.control ? a.control : a.htmlFor ? document.getElementById(a.htmlFor) : a.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")
},
FastClick.prototype.onTouchEnd = function (a) {
    "use strict";
    var b, c, d, e, f, g = this.targetElement;
    if (!this.trackingClick) return !0;
    if (a.timeStamp - this.lastClickTime < 200) return this.cancelNextClick = !0,
    !0;
    if (this.cancelNextClick = !1, this.lastClickTime = a.timeStamp, c = this.trackingClickStart, this.trackingClick = !1, this.trackingClickStart = 0, this.deviceIsIOSWithBadTarget && (f = a.changedTouches[0], g = document.elementFromPoint(f.pageX - window.pageXOffset, f.pageY - window.pageYOffset) || g, g.fastClickScrollParent = this.targetElement.fastClickScrollParent), d = g.tagName.toLowerCase(), "label" === d) {
        if (b = this.findControl(g)) {
            if (this.focus(g), this.deviceIsAndroid) return !1;
            g = b
        }
    } else if (this.needsFocus(g)) return a.timeStamp - c > 100 || this.deviceIsIOS && window.top !== window && "input" === d ? (this.targetElement = null, !1) : (this.focus(g), this.deviceIsIOS4 && "select" === d || (this.targetElement = null, a.preventDefault()), !1);
    return this.deviceIsIOS && !this.deviceIsIOS4 && (e = g.fastClickScrollParent, e && e.fastClickLastScrollTop !== e.scrollTop) ? !0 : (this.needsClick(g) || (a.preventDefault(), this.sendClick(g, a)), !1)
},
FastClick.prototype.onTouchCancel = function () {
    "use strict";
    this.trackingClick = !1,
    this.targetElement = null
},
FastClick.prototype.onMouse = function (a) {
    "use strict";
    return this.targetElement ? a.forwardedTouchEvent ? !0 : a.cancelable && (!this.needsClick(this.targetElement) || this.cancelNextClick) ? (a.stopImmediatePropagation ? a.stopImmediatePropagation() : a.propagationStopped = !0, a.stopPropagation(), a.preventDefault(), !1) : !0 : !0
},
FastClick.prototype.onClick = function (a) {
    "use strict";
    var b;
    return this.trackingClick ? (this.targetElement = null, this.trackingClick = !1, !0) : "submit" === a.target.type && 0 === a.detail ? !0 : (b = this.onMouse(a), b || (this.targetElement = null), b)
},
FastClick.prototype.destroy = function () {
    "use strict";
    var a = this.layer;
    this.deviceIsAndroid && (a.removeEventListener("mouseover", this.onMouse, !0), a.removeEventListener("mousedown", this.onMouse, !0), a.removeEventListener("mouseup", this.onMouse, !0)),
    a.removeEventListener("click", this.onClick, !0),
    a.removeEventListener("touchstart", this.onTouchStart, !1),
    a.removeEventListener("touchmove", this.onTouchMove, !1),
    a.removeEventListener("touchend", this.onTouchEnd, !1),
    a.removeEventListener("touchcancel", this.onTouchCancel, !1)
},
FastClick.notNeeded = function (a) {
    "use strict";
    var b, c;
    if ("undefined" == typeof window.ontouchstart) return !0;
    if (c = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]) {
        if (!FastClick.prototype.deviceIsAndroid) return !0;
        if (b = document.querySelector("meta[name=viewport]")) {
            if (-1 !== b.content.indexOf("user-scalable=no")) return !0;
            if (c > 31 && window.innerWidth <= window.screen.width) return !0
        }
    }
    return "none" === a.style.msTouchAction ? !0 : !1
},
FastClick.attach = function (a) {
    "use strict";
    return new FastClick(a)
},
"undefined" != typeof define && define.amd ? define(function () {
    "use strict";
    return FastClick
}) : "undefined" != typeof module && module.exports ? (module.exports = FastClick.attach, module.exports.FastClick = FastClick) : window.FastClick = FastClick,


function (a, b, c) {
    "use strict";
    var d = {
        "filterId": 0
    },
        e = function (e, f) {
            var g = {
                "intensity": 5,
                "forceSVGUrl": !1
            },
                h = c.extend(g, f);
            this.$elm = e instanceof c ? e : c(e);
            var i = !1,
                j = " -webkit- -moz- -o- -ms- ".split(" "),
                k = {},
                l = function (a) {
                    if (k[a] || "" === k[a]) return k[a] + a;
                    var c = b.createElement("div"),
                        d = ["", "Moz", "Webkit", "O", "ms", "Khtml"];
                    for (var e in d) if ("undefined" != typeof c.style[d[e] + a]) return k[a] = d[e],
                    d[e] + a;
                    return a.toLowerCase()
                },
                m = function () {
                    var a = b.createElement("div");
                    return a.style.cssText = j.join("filter:blur(2px); "),
                    !! a.style.length && (void 0 === b.documentMode || b.documentMode > 9)
                }(),
                n = function () {
                    var a = !1;
                    try {
                        a = void 0 !== typeof SVGFEColorMatrixElement && 2 == SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE
                    } catch (b) {}
                    return a
                }(),
                o = function () {
                    var a = "<svg id='vague-svg-blur' style='position:absolute;' width='0' height='0' ><filter id='blur-effect-id-" + d.filterId + "'><feGaussianBlur stdDeviation='" + h.intensity + "' /></filter></svg>";
                    c("body").append(a)
                };
            return this.init = function () {
                    n && o(),
                    this.$elm.data("vague-filter-id", d.filterId),
                    d.filterId++
                },
            this.blur = function () {
                    var b, c = a.location,
                        d = h.forceSVGUrl ? c.protocol + "//" + c.host + c.pathname : "",
                        e = this.$elm.data("vague-filter-id"),
                        f = {};
                    b = m ? "blur(" + h.intensity + "px)" : n ? "url(" + d + "#blur-effect-id-" + e + ")" : "progid:DXImageTransform.Microsoft.Blur(pixelradius=" + h.intensity + ")",
                    f[l("Filter")] = b,
                    this.$elm.css(f),
                    i = !0
                },
            this.unblur = function () {
                    var a = {};
                    a[l("Filter")] = "none",
                    this.$elm.css(a),
                    i = !1
                },
            this.toggleblur = function () {
                    i ? this.unblur() : this.blur()
                },
            this.destroy = function () {
                    n && c("filter#blur-effect-id-" + this.$elm.data("vague-filter-id")).parent().remove(),
                    this.unblur()
                },
            this.init()
        };
    c.fn.Vague = function (a) {
            return new e(this, a)
        },
    a.Vague = e
}(window, document, jQuery),





function (a, b) {
    "use strict";

    function c(a) {
        var b, c, d, e;
        if (!a || a.length < 1) return a;
        for (b = "", c = 0, d = a.length; d > c; c++) e = a.charAt(c),
        b += N[e] || e;
        return b
    }
    function d(a, b) {
        for (var c = 0, d = b.length; d > c; c += 1) if (f(a, b[c])) return c;
        return -1
    }
    function e() {
        var b = a(M);
        b.appendTo("body");
        var c = {
            "width": b.width() - b[0].clientWidth,
            "height": b.height() - b[0].clientHeight
        };
        return b.remove(),
        c
    }
    function f(a, c) {
        return a === c ? !0 : a === b || c === b ? !1 : null === a || null === c ? !1 : a.constructor === String ? a + "" == c + "" : c.constructor === String ? c + "" == a + "" : !1
    }
    function g(b, c) {
        var d, e, f;
        if (null === b || b.length < 1) return [];
        for (d = b.split(c), e = 0, f = d.length; f > e; e += 1) d[e] = a.trim(d[e]);
        return d
    }
    function h(a) {
        return a.outerWidth(!1) - a.width()
    }
    function i(c) {
        var d = "keyup-change-value";
        c.on("keydown", function () {
            a.data(c, d) === b && a.data(c, d, c.val())
        }),
        c.on("keyup", function () {
            var e = a.data(c, d);
            e !== b && c.val() !== e && (a.removeData(c, d), c.trigger("keyup-change"))
        })
    }
    function j(c) {
        c.on("mousemove", function (c) {
            var d = L;
            (d === b || d.x !== c.pageX || d.y !== c.pageY) && a(c.target).trigger("mousemove-filtered", c)
        })
    }
    function k(a, c, d) {
        d = d || b;
        var e;
        return function () {
            var b = arguments;
            window.clearTimeout(e),
            e = window.setTimeout(function () {
                c.apply(d, b)
            }, a)
        }
    }
    function l(a) {
        var b, c = !1;
        return function () {
            return c === !1 && (b = a(), c = !0),
            b
        }
    }
    function m(a, b) {
        var c = k(a, function (a) {
            b.trigger("scroll-debounced", a)
        });
        b.on("scroll", function (a) {
            d(a.target, b.get()) >= 0 && c(a)
        })
    }
    function n(a) {
        a[0] !== document.activeElement && window.setTimeout(function () {
            var b, c = a[0],
                d = a.val().length;
            a.focus(),
            a.is(":visible") && c === document.activeElement && (c.setSelectionRange ? c.setSelectionRange(d, d) : c.createTextRange && (b = c.createTextRange(), b.collapse(!1), b.select()))
        }, 0)
    }
    function o(b) {
        b = a(b)[0];
        var c = 0,
            d = 0;
        if ("selectionStart" in b) c = b.selectionStart,
        d = b.selectionEnd - c;
        else if ("selection" in document) {
                b.focus();
                var e = document.selection.createRange();
                d = document.selection.createRange().text.length,
                e.moveStart("character", -b.value.length),
                c = e.text.length - d
            }
        return {
                "offset": c,
                "length": d
            }
    }
    function p(a) {
        a.preventDefault(),
        a.stopPropagation()
    }
    function q(a) {
        a.preventDefault(),
        a.stopImmediatePropagation()
    }
    function r(b) {
        if (!I) {
            var c = b[0].currentStyle || window.getComputedStyle(b[0], null);
            I = a(document.createElement("div")).css({
                "position": "absolute",
                "left": "-10000px",
                "top": "-10000px",
                "display": "none",
                "fontSize": c.fontSize,
                "fontFamily": c.fontFamily,
                "fontStyle": c.fontStyle,
                "fontWeight": c.fontWeight,
                "letterSpacing": c.letterSpacing,
                "textTransform": c.textTransform,
                "whiteSpace": "nowrap"
            }),
            I.attr("class", "select2-sizer"),
            a("body").append(I)
        }
        return I.text(b.val()),
        I.width()
    }
    function s(b, c, d) {
        var e, f, g = [];
        e = b.attr("class"),
        e && (e = "" + e, a(e.split(" ")).each2(function () {
            0 === this.indexOf("select2-") && g.push(this)
        })),
        e = c.attr("class"),
        e && (e = "" + e, a(e.split(" ")).each2(function () {
            0 !== this.indexOf("select2-") && (f = d(this), f && g.push(f))
        })),
        b.attr("class", g.join(" "))
    }
    function t(a, b, d, e) {
        var f = c(a.toUpperCase()).indexOf(c(b.toUpperCase())),
            g = b.length;
        return 0 > f ? void d.push(e(a)) : (d.push(e(a.substring(0, f))), d.push("<span class='select2-match'>"), d.push(e(a.substring(f, f + g))), d.push("</span>"), void d.push(e(a.substring(f + g, a.length))))
    }
    function u(a) {
        var b = {
            "\\": "&#92;",
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#47;"
        };
        return String(a).replace(/[&<>"'\/\\]/g, function (a) {
            return b[a]
        })
    }
    function v(c) {
        var d, e = null,
            f = c.quietMillis || 100,
            g = c.url,
            h = this;
        return function (i) {
                window.clearTimeout(d),
                d = window.setTimeout(function () {
                    var d = c.data,
                        f = g,
                        j = c.transport || a.fn.select2.ajaxDefaults.transport,
                        k = {
                            "type": c.type || "GET",
                            "cache": c.cache || !1,
                            "jsonpCallback": c.jsonpCallback || b,
                            "dataType": c.dataType || "json"
                        },
                        l = a.extend({}, a.fn.select2.ajaxDefaults.params, k);
                    d = d ? d.call(h, i.term, i.page, i.context) : null,
                    f = "function" == typeof f ? f.call(h, i.term, i.page, i.context) : f,
                    e && e.abort(),
                    c.params && (a.isFunction(c.params) ? a.extend(l, c.params.call(h)) : a.extend(l, c.params)),
                    a.extend(l, {
                            "url": f,
                            "dataType": c.dataType,
                            "data": d,
                            "success": function (a) {
                                var b = c.results(a, i.page);
                                i.callback(b)
                            }
                        }),
                    e = j.call(h, l)
                }, f)
            }
    }
    function w(b) {
        var c, d, e = b,
            f = function (a) {
                return "" + a.text
            };
        a.isArray(e) && (d = e, e = {
                "results": d
            }),
        a.isFunction(e) === !1 && (d = e, e = function () {
                return d
            });
        var g = e();
        return g.text && (f = g.text, a.isFunction(f) || (c = g.text, f = function (a) {
                return a[c]
            })),


        function (b) {
                var c, d = b.term,
                    g = {
                        "results": []
                    };
                return "" === d ? void b.callback(e()) : (c = function (e, g) {
                        var h, i;
                        if (e = e[0], e.children) {
                            h = {};
                            for (i in e) e.hasOwnProperty(i) && (h[i] = e[i]);
                            h.children = [],
                            a(e.children).each2(function (a, b) {
                                c(b, h.children)
                            }),
                            (h.children.length || b.matcher(d, f(h), e)) && g.push(h)
                        } else b.matcher(d, f(e), e) && g.push(e)
                    }, a(e().results).each2(function (a, b) {
                        c(b, g.results)
                    }), void b.callback(g))
            }
    }
    function x(c) {
        var d = a.isFunction(c);
        return function (e) {
            var f = e.term,
                g = {
                    "results": []
                };
            a(d ? c() : c).each(function () {
                    var a = this.text !== b,
                        c = a ? this.text : this;
                        ("" === f || e.matcher(f, c)) && g.results.push(a ? this : {
                            "id": this,
                            "text": this
                        })
                }),
            e.callback(g)
        }
    }
    function y(b, c) {
        if (a.isFunction(b)) return !0;
        if (!b) return !1;
        throw new Error(c + " must be a function or a falsy value")
    }
    function z(b) {
        return a.isFunction(b) ? b() : b
    }
    function A(b) {
        var c = 0;
        return a.each(b, function (a, b) {
            b.children ? c += A(b.children) : c++
        }),
        c
    }
    function B(a, c, d, e) {
        var g, h, i, j, k, l = a,
            m = !1;
        if (!e.createSearchChoice || !e.tokenSeparators || e.tokenSeparators.length < 1) return b;
        for (;;) {
                for (h = -1, i = 0, j = e.tokenSeparators.length; j > i && (k = e.tokenSeparators[i], h = a.indexOf(k), !(h >= 0)); i++);
                if (0 > h) break;
                if (g = a.substring(0, h), a = a.substring(h + k.length), g.length > 0 && (g = e.createSearchChoice.call(this, g, c), g !== b && null !== g && e.id(g) !== b && null !== e.id(g))) {
                    for (m = !1, i = 0, j = c.length; j > i; i++) if (f(e.id(g), e.id(c[i]))) {
                        m = !0;
                        break
                    }
                    m || d(g)
                }
            }
        return l !== a ? a : void 0
    }
    function C(b, c) {
        var d = function () {};
        return d.prototype = new b,
        d.prototype.constructor = d,
        d.prototype.parent = b.prototype,
        d.prototype = a.extend(d.prototype, c),
        d
    }
    if (window.Select2 === b) {
        var D, E, F, G, H, I, J, K, L = {
            "x": 0,
            "y": 0
        },
            D = {
                "TAB": 9,
                "ENTER": 13,
                "ESC": 27,
                "SPACE": 32,
                "LEFT": 37,
                "UP": 38,
                "RIGHT": 39,
                "DOWN": 40,
                "SHIFT": 16,
                "CTRL": 17,
                "ALT": 18,
                "PAGE_UP": 33,
                "PAGE_DOWN": 34,
                "HOME": 36,
                "END": 35,
                "BACKSPACE": 8,
                "DELETE": 46,
                "isArrow": function (a) {
                    switch (a = a.which ? a.which : a) {
                    case D.LEFT:
                    case D.RIGHT:
                    case D.UP:
                    case D.DOWN:
                        return !0
                    }
                    return !1
                },
                "isControl": function (a) {
                    var b = a.which;
                    switch (b) {
                    case D.SHIFT:
                    case D.CTRL:
                    case D.ALT:
                        return !0
                    }
                    return a.metaKey ? !0 : !1
                },
                "isFunctionKey": function (a) {
                    return a = a.which ? a.which : a,
                    a >= 112 && 123 >= a
                }
            },
            M = "<div class='select2-measure-scrollbar'></div>",
            N = {
                "\u24b6": "A",
                "\uff21": "A",
                "\xc0": "A",
                "\xc1": "A",
                "\xc2": "A",
                "\u1ea6": "A",
                "\u1ea4": "A",
                "\u1eaa": "A",
                "\u1ea8": "A",
                "\xc3": "A",
                "\u0100": "A",
                "\u0102": "A",
                "\u1eb0": "A",
                "\u1eae": "A",
                "\u1eb4": "A",
                "\u1eb2": "A",
                "\u0226": "A",
                "\u01e0": "A",
                "\xc4": "A",
                "\u01de": "A",
                "\u1ea2": "A",
                "\xc5": "A",
                "\u01fa": "A",
                "\u01cd": "A",
                "\u0200": "A",
                "\u0202": "A",
                "\u1ea0": "A",
                "\u1eac": "A",
                "\u1eb6": "A",
                "\u1e00": "A",
                "\u0104": "A",
                "\u023a": "A",
                "\u2c6f": "A",
                "\ua732": "AA",
                "\xc6": "AE",
                "\u01fc": "AE",
                "\u01e2": "AE",
                "\ua734": "AO",
                "\ua736": "AU",
                "\ua738": "AV",
                "\ua73a": "AV",
                "\ua73c": "AY",
                "\u24b7": "B",
                "\uff22": "B",
                "\u1e02": "B",
                "\u1e04": "B",
                "\u1e06": "B",
                "\u0243": "B",
                "\u0182": "B",
                "\u0181": "B",
                "\u24b8": "C",
                "\uff23": "C",
                "\u0106": "C",
                "\u0108": "C",
                "\u010a": "C",
                "\u010c": "C",
                "\xc7": "C",
                "\u1e08": "C",
                "\u0187": "C",
                "\u023b": "C",
                "\ua73e": "C",
                "\u24b9": "D",
                "\uff24": "D",
                "\u1e0a": "D",
                "\u010e": "D",
                "\u1e0c": "D",
                "\u1e10": "D",
                "\u1e12": "D",
                "\u1e0e": "D",
                "\u0110": "D",
                "\u018b": "D",
                "\u018a": "D",
                "\u0189": "D",
                "\ua779": "D",
                "\u01f1": "DZ",
                "\u01c4": "DZ",
                "\u01f2": "Dz",
                "\u01c5": "Dz",
                "\u24ba": "E",
                "\uff25": "E",
                "\xc8": "E",
                "\xc9": "E",
                "\xca": "E",
                "\u1ec0": "E",
                "\u1ebe": "E",
                "\u1ec4": "E",
                "\u1ec2": "E",
                "\u1ebc": "E",
                "\u0112": "E",
                "\u1e14": "E",
                "\u1e16": "E",
                "\u0114": "E",
                "\u0116": "E",
                "\xcb": "E",
                "\u1eba": "E",
                "\u011a": "E",
                "\u0204": "E",
                "\u0206": "E",
                "\u1eb8": "E",
                "\u1ec6": "E",
                "\u0228": "E",
                "\u1e1c": "E",
                "\u0118": "E",
                "\u1e18": "E",
                "\u1e1a": "E",
                "\u0190": "E",
                "\u018e": "E",
                "\u24bb": "F",
                "\uff26": "F",
                "\u1e1e": "F",
                "\u0191": "F",
                "\ua77b": "F",
                "\u24bc": "G",
                "\uff27": "G",
                "\u01f4": "G",
                "\u011c": "G",
                "\u1e20": "G",
                "\u011e": "G",
                "\u0120": "G",
                "\u01e6": "G",
                "\u0122": "G",
                "\u01e4": "G",
                "\u0193": "G",
                "\ua7a0": "G",
                "\ua77d": "G",
                "\ua77e": "G",
                "\u24bd": "H",
                "\uff28": "H",
                "\u0124": "H",
                "\u1e22": "H",
                "\u1e26": "H",
                "\u021e": "H",
                "\u1e24": "H",
                "\u1e28": "H",
                "\u1e2a": "H",
                "\u0126": "H",
                "\u2c67": "H",
                "\u2c75": "H",
                "\ua78d": "H",
                "\u24be": "I",
                "\uff29": "I",
                "\xcc": "I",
                "\xcd": "I",
                "\xce": "I",
                "\u0128": "I",
                "\u012a": "I",
                "\u012c": "I",
                "\u0130": "I",
                "\xcf": "I",
                "\u1e2e": "I",
                "\u1ec8": "I",
                "\u01cf": "I",
                "\u0208": "I",
                "\u020a": "I",
                "\u1eca": "I",
                "\u012e": "I",
                "\u1e2c": "I",
                "\u0197": "I",
                "\u24bf": "J",
                "\uff2a": "J",
                "\u0134": "J",
                "\u0248": "J",
                "\u24c0": "K",
                "\uff2b": "K",
                "\u1e30": "K",
                "\u01e8": "K",
                "\u1e32": "K",
                "\u0136": "K",
                "\u1e34": "K",
                "\u0198": "K",
                "\u2c69": "K",
                "\ua740": "K",
                "\ua742": "K",
                "\ua744": "K",
                "\ua7a2": "K",
                "\u24c1": "L",
                "\uff2c": "L",
                "\u013f": "L",
                "\u0139": "L",
                "\u013d": "L",
                "\u1e36": "L",
                "\u1e38": "L",
                "\u013b": "L",
                "\u1e3c": "L",
                "\u1e3a": "L",
                "\u0141": "L",
                "\u023d": "L",
                "\u2c62": "L",
                "\u2c60": "L",
                "\ua748": "L",
                "\ua746": "L",
                "\ua780": "L",
                "\u01c7": "LJ",
                "\u01c8": "Lj",
                "\u24c2": "M",
                "\uff2d": "M",
                "\u1e3e": "M",
                "\u1e40": "M",
                "\u1e42": "M",
                "\u2c6e": "M",
                "\u019c": "M",
                "\u24c3": "N",
                "\uff2e": "N",
                "\u01f8": "N",
                "\u0143": "N",
                "\xd1": "N",
                "\u1e44": "N",
                "\u0147": "N",
                "\u1e46": "N",
                "\u0145": "N",
                "\u1e4a": "N",
                "\u1e48": "N",
                "\u0220": "N",
                "\u019d": "N",
                "\ua790": "N",
                "\ua7a4": "N",
                "\u01ca": "NJ",
                "\u01cb": "Nj",
                "\u24c4": "O",
                "\uff2f": "O",
                "\xd2": "O",
                "\xd3": "O",
                "\xd4": "O",
                "\u1ed2": "O",
                "\u1ed0": "O",
                "\u1ed6": "O",
                "\u1ed4": "O",
                "\xd5": "O",
                "\u1e4c": "O",
                "\u022c": "O",
                "\u1e4e": "O",
                "\u014c": "O",
                "\u1e50": "O",
                "\u1e52": "O",
                "\u014e": "O",
                "\u022e": "O",
                "\u0230": "O",
                "\xd6": "O",
                "\u022a": "O",
                "\u1ece": "O",
                "\u0150": "O",
                "\u01d1": "O",
                "\u020c": "O",
                "\u020e": "O",
                "\u01a0": "O",
                "\u1edc": "O",
                "\u1eda": "O",
                "\u1ee0": "O",
                "\u1ede": "O",
                "\u1ee2": "O",
                "\u1ecc": "O",
                "\u1ed8": "O",
                "\u01ea": "O",
                "\u01ec": "O",
                "\xd8": "O",
                "\u01fe": "O",
                "\u0186": "O",
                "\u019f": "O",
                "\ua74a": "O",
                "\ua74c": "O",
                "\u01a2": "OI",
                "\ua74e": "OO",
                "\u0222": "OU",
                "\u24c5": "P",
                "\uff30": "P",
                "\u1e54": "P",
                "\u1e56": "P",
                "\u01a4": "P",
                "\u2c63": "P",
                "\ua750": "P",
                "\ua752": "P",
                "\ua754": "P",
                "\u24c6": "Q",
                "\uff31": "Q",
                "\ua756": "Q",
                "\ua758": "Q",
                "\u024a": "Q",
                "\u24c7": "R",
                "\uff32": "R",
                "\u0154": "R",
                "\u1e58": "R",
                "\u0158": "R",
                "\u0210": "R",
                "\u0212": "R",
                "\u1e5a": "R",
                "\u1e5c": "R",
                "\u0156": "R",
                "\u1e5e": "R",
                "\u024c": "R",
                "\u2c64": "R",
                "\ua75a": "R",
                "\ua7a6": "R",
                "\ua782": "R",
                "\u24c8": "S",
                "\uff33": "S",
                "\u1e9e": "S",
                "\u015a": "S",
                "\u1e64": "S",
                "\u015c": "S",
                "\u1e60": "S",
                "\u0160": "S",
                "\u1e66": "S",
                "\u1e62": "S",
                "\u1e68": "S",
                "\u0218": "S",
                "\u015e": "S",
                "\u2c7e": "S",
                "\ua7a8": "S",
                "\ua784": "S",
                "\u24c9": "T",
                "\uff34": "T",
                "\u1e6a": "T",
                "\u0164": "T",
                "\u1e6c": "T",
                "\u021a": "T",
                "\u0162": "T",
                "\u1e70": "T",
                "\u1e6e": "T",
                "\u0166": "T",
                "\u01ac": "T",
                "\u01ae": "T",
                "\u023e": "T",
                "\ua786": "T",
                "\ua728": "TZ",
                "\u24ca": "U",
                "\uff35": "U",
                "\xd9": "U",
                "\xda": "U",
                "\xdb": "U",
                "\u0168": "U",
                "\u1e78": "U",
                "\u016a": "U",
                "\u1e7a": "U",
                "\u016c": "U",
                "\xdc": "U",
                "\u01db": "U",
                "\u01d7": "U",
                "\u01d5": "U",
                "\u01d9": "U",
                "\u1ee6": "U",
                "\u016e": "U",
                "\u0170": "U",
                "\u01d3": "U",
                "\u0214": "U",
                "\u0216": "U",
                "\u01af": "U",
                "\u1eea": "U",
                "\u1ee8": "U",
                "\u1eee": "U",
                "\u1eec": "U",
                "\u1ef0": "U",
                "\u1ee4": "U",
                "\u1e72": "U",
                "\u0172": "U",
                "\u1e76": "U",
                "\u1e74": "U",
                "\u0244": "U",
                "\u24cb": "V",
                "\uff36": "V",
                "\u1e7c": "V",
                "\u1e7e": "V",
                "\u01b2": "V",
                "\ua75e": "V",
                "\u0245": "V",
                "\ua760": "VY",
                "\u24cc": "W",
                "\uff37": "W",
                "\u1e80": "W",
                "\u1e82": "W",
                "\u0174": "W",
                "\u1e86": "W",
                "\u1e84": "W",
                "\u1e88": "W",
                "\u2c72": "W",
                "\u24cd": "X",
                "\uff38": "X",
                "\u1e8a": "X",
                "\u1e8c": "X",
                "\u24ce": "Y",
                "\uff39": "Y",
                "\u1ef2": "Y",
                "\xdd": "Y",
                "\u0176": "Y",
                "\u1ef8": "Y",
                "\u0232": "Y",
                "\u1e8e": "Y",
                "\u0178": "Y",
                "\u1ef6": "Y",
                "\u1ef4": "Y",
                "\u01b3": "Y",
                "\u024e": "Y",
                "\u1efe": "Y",
                "\u24cf": "Z",
                "\uff3a": "Z",
                "\u0179": "Z",
                "\u1e90": "Z",
                "\u017b": "Z",
                "\u017d": "Z",
                "\u1e92": "Z",
                "\u1e94": "Z",
                "\u01b5": "Z",
                "\u0224": "Z",
                "\u2c7f": "Z",
                "\u2c6b": "Z",
                "\ua762": "Z",
                "\u24d0": "a",
                "\uff41": "a",
                "\u1e9a": "a",
                "\xe0": "a",
                "\xe1": "a",
                "\xe2": "a",
                "\u1ea7": "a",
                "\u1ea5": "a",
                "\u1eab": "a",
                "\u1ea9": "a",
                "\xe3": "a",
                "\u0101": "a",
                "\u0103": "a",
                "\u1eb1": "a",
                "\u1eaf": "a",
                "\u1eb5": "a",
                "\u1eb3": "a",
                "\u0227": "a",
                "\u01e1": "a",
                "\xe4": "a",
                "\u01df": "a",
                "\u1ea3": "a",
                "\xe5": "a",
                "\u01fb": "a",
                "\u01ce": "a",
                "\u0201": "a",
                "\u0203": "a",
                "\u1ea1": "a",
                "\u1ead": "a",
                "\u1eb7": "a",
                "\u1e01": "a",
                "\u0105": "a",
                "\u2c65": "a",
                "\u0250": "a",
                "\ua733": "aa",
                "\xe6": "ae",
                "\u01fd": "ae",
                "\u01e3": "ae",
                "\ua735": "ao",
                "\ua737": "au",
                "\ua739": "av",
                "\ua73b": "av",
                "\ua73d": "ay",
                "\u24d1": "b",
                "\uff42": "b",
                "\u1e03": "b",
                "\u1e05": "b",
                "\u1e07": "b",
                "\u0180": "b",
                "\u0183": "b",
                "\u0253": "b",
                "\u24d2": "c",
                "\uff43": "c",
                "\u0107": "c",
                "\u0109": "c",
                "\u010b": "c",
                "\u010d": "c",
                "\xe7": "c",
                "\u1e09": "c",
                "\u0188": "c",
                "\u023c": "c",
                "\ua73f": "c",
                "\u2184": "c",
                "\u24d3": "d",
                "\uff44": "d",
                "\u1e0b": "d",
                "\u010f": "d",
                "\u1e0d": "d",
                "\u1e11": "d",
                "\u1e13": "d",
                "\u1e0f": "d",
                "\u0111": "d",
                "\u018c": "d",
                "\u0256": "d",
                "\u0257": "d",
                "\ua77a": "d",
                "\u01f3": "dz",
                "\u01c6": "dz",
                "\u24d4": "e",
                "\uff45": "e",
                "\xe8": "e",
                "\xe9": "e",
                "\xea": "e",
                "\u1ec1": "e",
                "\u1ebf": "e",
                "\u1ec5": "e",
                "\u1ec3": "e",
                "\u1ebd": "e",
                "\u0113": "e",
                "\u1e15": "e",
                "\u1e17": "e",
                "\u0115": "e",
                "\u0117": "e",
                "\xeb": "e",
                "\u1ebb": "e",
                "\u011b": "e",
                "\u0205": "e",
                "\u0207": "e",
                "\u1eb9": "e",
                "\u1ec7": "e",
                "\u0229": "e",
                "\u1e1d": "e",
                "\u0119": "e",
                "\u1e19": "e",
                "\u1e1b": "e",
                "\u0247": "e",
                "\u025b": "e",
                "\u01dd": "e",
                "\u24d5": "f",
                "\uff46": "f",
                "\u1e1f": "f",
                "\u0192": "f",
                "\ua77c": "f",
                "\u24d6": "g",
                "\uff47": "g",
                "\u01f5": "g",
                "\u011d": "g",
                "\u1e21": "g",
                "\u011f": "g",
                "\u0121": "g",
                "\u01e7": "g",
                "\u0123": "g",
                "\u01e5": "g",
                "\u0260": "g",
                "\ua7a1": "g",
                "\u1d79": "g",
                "\ua77f": "g",
                "\u24d7": "h",
                "\uff48": "h",
                "\u0125": "h",
                "\u1e23": "h",
                "\u1e27": "h",
                "\u021f": "h",
                "\u1e25": "h",
                "\u1e29": "h",
                "\u1e2b": "h",
                "\u1e96": "h",
                "\u0127": "h",
                "\u2c68": "h",
                "\u2c76": "h",
                "\u0265": "h",
                "\u0195": "hv",
                "\u24d8": "i",
                "\uff49": "i",
                "\xec": "i",
                "\xed": "i",
                "\xee": "i",
                "\u0129": "i",
                "\u012b": "i",
                "\u012d": "i",
                "\xef": "i",
                "\u1e2f": "i",
                "\u1ec9": "i",
                "\u01d0": "i",
                "\u0209": "i",
                "\u020b": "i",
                "\u1ecb": "i",
                "\u012f": "i",
                "\u1e2d": "i",
                "\u0268": "i",
                "\u0131": "i",
                "\u24d9": "j",
                "\uff4a": "j",
                "\u0135": "j",
                "\u01f0": "j",
                "\u0249": "j",
                "\u24da": "k",
                "\uff4b": "k",
                "\u1e31": "k",
                "\u01e9": "k",
                "\u1e33": "k",
                "\u0137": "k",
                "\u1e35": "k",
                "\u0199": "k",
                "\u2c6a": "k",
                "\ua741": "k",
                "\ua743": "k",
                "\ua745": "k",
                "\ua7a3": "k",
                "\u24db": "l",
                "\uff4c": "l",
                "\u0140": "l",
                "\u013a": "l",
                "\u013e": "l",
                "\u1e37": "l",
                "\u1e39": "l",
                "\u013c": "l",
                "\u1e3d": "l",
                "\u1e3b": "l",
                "\u017f": "l",
                "\u0142": "l",
                "\u019a": "l",
                "\u026b": "l",
                "\u2c61": "l",
                "\ua749": "l",
                "\ua781": "l",
                "\ua747": "l",
                "\u01c9": "lj",
                "\u24dc": "m",
                "\uff4d": "m",
                "\u1e3f": "m",
                "\u1e41": "m",
                "\u1e43": "m",
                "\u0271": "m",
                "\u026f": "m",
                "\u24dd": "n",
                "\uff4e": "n",
                "\u01f9": "n",
                "\u0144": "n",
                "\xf1": "n",
                "\u1e45": "n",
                "\u0148": "n",
                "\u1e47": "n",
                "\u0146": "n",
                "\u1e4b": "n",
                "\u1e49": "n",
                "\u019e": "n",
                "\u0272": "n",
                "\u0149": "n",
                "\ua791": "n",
                "\ua7a5": "n",
                "\u01cc": "nj",
                "\u24de": "o",
                "\uff4f": "o",
                "\xf2": "o",
                "\xf3": "o",
                "\xf4": "o",
                "\u1ed3": "o",
                "\u1ed1": "o",
                "\u1ed7": "o",
                "\u1ed5": "o",
                "\xf5": "o",
                "\u1e4d": "o",
                "\u022d": "o",
                "\u1e4f": "o",
                "\u014d": "o",
                "\u1e51": "o",
                "\u1e53": "o",
                "\u014f": "o",
                "\u022f": "o",
                "\u0231": "o",
                "\xf6": "o",
                "\u022b": "o",
                "\u1ecf": "o",
                "\u0151": "o",
                "\u01d2": "o",
                "\u020d": "o",
                "\u020f": "o",
                "\u01a1": "o",
                "\u1edd": "o",
                "\u1edb": "o",
                "\u1ee1": "o",
                "\u1edf": "o",
                "\u1ee3": "o",
                "\u1ecd": "o",
                "\u1ed9": "o",
                "\u01eb": "o",
                "\u01ed": "o",
                "\xf8": "o",
                "\u01ff": "o",
                "\u0254": "o",
                "\ua74b": "o",
                "\ua74d": "o",
                "\u0275": "o",
                "\u01a3": "oi",
                "\u0223": "ou",
                "\ua74f": "oo",
                "\u24df": "p",
                "\uff50": "p",
                "\u1e55": "p",
                "\u1e57": "p",
                "\u01a5": "p",
                "\u1d7d": "p",
                "\ua751": "p",
                "\ua753": "p",
                "\ua755": "p",
                "\u24e0": "q",
                "\uff51": "q",
                "\u024b": "q",
                "\ua757": "q",
                "\ua759": "q",
                "\u24e1": "r",
                "\uff52": "r",
                "\u0155": "r",
                "\u1e59": "r",
                "\u0159": "r",
                "\u0211": "r",
                "\u0213": "r",
                "\u1e5b": "r",
                "\u1e5d": "r",
                "\u0157": "r",
                "\u1e5f": "r",
                "\u024d": "r",
                "\u027d": "r",
                "\ua75b": "r",
                "\ua7a7": "r",
                "\ua783": "r",
                "\u24e2": "s",
                "\uff53": "s",
                "\xdf": "s",
                "\u015b": "s",
                "\u1e65": "s",
                "\u015d": "s",
                "\u1e61": "s",
                "\u0161": "s",
                "\u1e67": "s",
                "\u1e63": "s",
                "\u1e69": "s",
                "\u0219": "s",
                "\u015f": "s",
                "\u023f": "s",
                "\ua7a9": "s",
                "\ua785": "s",
                "\u1e9b": "s",
                "\u24e3": "t",
                "\uff54": "t",
                "\u1e6b": "t",
                "\u1e97": "t",
                "\u0165": "t",
                "\u1e6d": "t",
                "\u021b": "t",
                "\u0163": "t",
                "\u1e71": "t",
                "\u1e6f": "t",
                "\u0167": "t",
                "\u01ad": "t",
                "\u0288": "t",
                "\u2c66": "t",
                "\ua787": "t",
                "\ua729": "tz",
                "\u24e4": "u",
                "\uff55": "u",
                "\xf9": "u",
                "\xfa": "u",
                "\xfb": "u",
                "\u0169": "u",
                "\u1e79": "u",
                "\u016b": "u",
                "\u1e7b": "u",
                "\u016d": "u",
                "\xfc": "u",
                "\u01dc": "u",
                "\u01d8": "u",
                "\u01d6": "u",
                "\u01da": "u",
                "\u1ee7": "u",
                "\u016f": "u",
                "\u0171": "u",
                "\u01d4": "u",
                "\u0215": "u",
                "\u0217": "u",
                "\u01b0": "u",
                "\u1eeb": "u",
                "\u1ee9": "u",
                "\u1eef": "u",
                "\u1eed": "u",
                "\u1ef1": "u",
                "\u1ee5": "u",
                "\u1e73": "u",
                "\u0173": "u",
                "\u1e77": "u",
                "\u1e75": "u",
                "\u0289": "u",
                "\u24e5": "v",
                "\uff56": "v",
                "\u1e7d": "v",
                "\u1e7f": "v",
                "\u028b": "v",
                "\ua75f": "v",
                "\u028c": "v",
                "\ua761": "vy",
                "\u24e6": "w",
                "\uff57": "w",
                "\u1e81": "w",
                "\u1e83": "w",
                "\u0175": "w",
                "\u1e87": "w",
                "\u1e85": "w",
                "\u1e98": "w",
                "\u1e89": "w",
                "\u2c73": "w",
                "\u24e7": "x",
                "\uff58": "x",
                "\u1e8b": "x",
                "\u1e8d": "x",
                "\u24e8": "y",
                "\uff59": "y",
                "\u1ef3": "y",
                "\xfd": "y",
                "\u0177": "y",
                "\u1ef9": "y",
                "\u0233": "y",
                "\u1e8f": "y",
                "\xff": "y",
                "\u1ef7": "y",
                "\u1e99": "y",
                "\u1ef5": "y",
                "\u01b4": "y",
                "\u024f": "y",
                "\u1eff": "y",
                "\u24e9": "z",
                "\uff5a": "z",
                "\u017a": "z",
                "\u1e91": "z",
                "\u017c": "z",
                "\u017e": "z",
                "\u1e93": "z",
                "\u1e95": "z",
                "\u01b6": "z",
                "\u0225": "z",
                "\u0240": "z",
                "\u2c6c": "z",
                "\ua763": "z"
            };
        J = a(document),
        H = function () {
                var a = 1;
                return function () {
                    return a++
                }
            }(),
        J.on("mousemove", function (a) {
                L.x = a.pageX,
                L.y = a.pageY
            }),
        E = C(Object, {
                "bind": function (a) {
                    var b = this;
                    return function () {
                        a.apply(b, arguments)
                    }
                },
                "init": function (c) {
                    var d, f, g = ".select2-results";
                    this.opts = c = this.prepareOpts(c),
                    this.id = c.id,
                    c.element.data("select2") !== b && null !== c.element.data("select2") && c.element.data("select2").destroy(),
                    this.container = this.createContainer(),
                    this.containerId = "s2id_" + (c.element.attr("id") || "autogen" + H()),
                    this.containerSelector = "#" + this.containerId.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, "\\$1"),
                    this.container.attr("id", this.containerId),
                    this.body = l(function () {
                        return c.element.closest("body")
                    }),
                    s(this.container, this.opts.element, this.opts.adaptContainerCssClass),
                    this.container.attr("style", c.element.attr("style")),
                    this.container.css(z(c.containerCss)),
                    this.container.addClass(z(c.containerCssClass)),
                    this.elementTabIndex = this.opts.element.attr("tabindex"),
                    this.opts.element.data("select2", this).attr("tabindex", "-1").before(this.container).on("click.select2", p),
                    this.container.data("select2", this),
                    this.dropdown = this.container.find(".select2-drop"),
                    s(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass),
                    this.dropdown.addClass(z(c.dropdownCssClass)),
                    this.dropdown.data("select2", this),
                    this.dropdown.on("click", p),
                    this.results = d = this.container.find(g),
                    this.search = f = this.container.find("input.select2-input"),
                    this.queryCount = 0,
                    this.resultsPage = 0,
                    this.context = null,
                    this.initContainer(),
                    this.container.on("click", p),
                    j(this.results),
                    this.dropdown.on("mousemove-filtered touchstart touchmove touchend", g, this.bind(this.highlightUnderEvent)),
                    m(80, this.results),
                    this.dropdown.on("scroll-debounced", g, this.bind(this.loadMoreIfNeeded)),
                    a(this.container).on("change", ".select2-input", function (a) {
                        a.stopPropagation()
                    }),
                    a(this.dropdown).on("change", ".select2-input", function (a) {
                        a.stopPropagation()
                    }),
                    a.fn.mousewheel && d.mousewheel(function (a, b, c, e) {
                        var f = d.scrollTop();
                        e > 0 && 0 >= f - e ? (d.scrollTop(0), p(a)) : 0 > e && d.get(0).scrollHeight - d.scrollTop() + e <= d.height() && (d.scrollTop(d.get(0).scrollHeight - d.height()), p(a))
                    }),
                    i(f),
                    f.on("keyup-change input paste", this.bind(this.updateResults)),
                    f.on("focus", function () {
                        f.addClass("select2-focused")
                    }),
                    f.on("blur", function () {
                        f.removeClass("select2-focused")
                    }),
                    this.dropdown.on("mouseup", g, this.bind(function (b) {
                        a(b.target).closest(".select2-result-selectable").length > 0 && (this.highlightUnderEvent(b), this.selectHighlighted(b))
                    })),
                    this.dropdown.on("click mouseup mousedown", function (a) {
                        a.stopPropagation()
                    }),
                    a.isFunction(this.opts.initSelection) && (this.initSelection(), this.monitorSource()),
                    null !== c.maximumInputLength && this.search.attr("maxlength", c.maximumInputLength);
                    var h = c.element.prop("disabled");
                    h === b && (h = !1),
                    this.enable(!h);
                    var k = c.element.prop("readonly");
                    k === b && (k = !1),
                    this.readonly(k),
                    K = K || e(),
                    this.autofocus = c.element.prop("autofocus"),
                    c.element.prop("autofocus", !1),
                    this.autofocus && this.focus(),
                    this.nextSearchTerm = b
                },
                "destroy": function () {
                    var a = this.opts.element,
                        c = a.data("select2");
                    this.close(),
                    this.propertyObserver && (delete this.propertyObserver, this.propertyObserver = null),
                    c !== b && (c.container.remove(), c.dropdown.remove(), a.removeClass("select2-offscreen").removeData("select2").off(".select2").prop("autofocus", this.autofocus || !1), this.elementTabIndex ? a.attr({
                            "tabindex": this.elementTabIndex
                        }) : a.removeAttr("tabindex"), a.show())
                },
                "optionToData": function (a) {
                    return a.is("option") ? {
                        "id": a.prop("value"),
                        "text": a.text(),
                        "element": a.get(),
                        "css": a.attr("class"),
                        "disabled": a.prop("disabled"),
                        "locked": f(a.attr("locked"), "locked") || f(a.data("locked"), !0)
                    } : a.is("optgroup") ? {
                        "text": a.attr("label"),
                        "children": [],
                        "element": a.get(),
                        "css": a.attr("class")
                    } : void 0
                },
                "prepareOpts": function (c) {
                    var d, e, h, i, j = this;
                    if (d = c.element, "select" === d.get(0).tagName.toLowerCase() && (this.select = e = c.element), e && a.each(["id", "multiple", "ajax", "query", "createSearchChoice", "initSelection", "data", "tags"], function () {
                        if (this in c) throw new Error("Option '" + this + "' is not allowed for Select2 when attached to a <select> element.")
                    }), c = a.extend({}, {
                        "populateResults": function (d, e, f) {
                            var g, h = this.opts.id;
                            (g = function (d, e, i) {
                                var k, l, m, n, o, p, q, r, s, t;
                                for (d = c.sortResults(d, e, f), k = 0, l = d.length; l > k; k += 1) m = d[k],
                                o = m.disabled === !0,
                                n = !o && h(m) !== b,
                                p = m.children && m.children.length > 0,
                                q = a("<li></li>"),
                                q.addClass("select2-results-dept-" + i),
                                q.addClass("select2-result"),
                                q.addClass(n ? "select2-result-selectable" : "select2-result-unselectable"),
                                o && q.addClass("select2-disabled"),
                                p && q.addClass("select2-result-with-children"),
                                q.addClass(j.opts.formatResultCssClass(m)),
                                r = a(document.createElement("div")),
                                r.addClass("select2-result-label"),
                                t = c.formatResult(m, r, f, j.opts.escapeMarkup),
                                t !== b && r.html(t),
                                q.append(r),
                                p && (s = a("<ul></ul>"), s.addClass("select2-result-sub"), g(m.children, s, i + 1), q.append(s)),
                                q.data("select2-data", m),
                                e.append(q)
                            })(e, d, 0)
                        }
                    }, a.fn.select2.defaults, c), "function" != typeof c.id && (h = c.id, c.id = function (a) {
                        return a[h]
                    }), a.isArray(c.element.data("select2Tags"))) {
                        if ("tags" in c) throw "tags specified as both an attribute 'data-select2-tags' and in options of Select2 " + c.element.attr("id");
                        c.tags = c.element.data("select2Tags")
                    }
                    if (e ? (c.query = this.bind(function (a) {
                        var c, e, f, g = {
                            "results": [],
                            "more": !1
                        },
                            h = a.term;
                        f = function (b, c) {
                                var d;
                                b.is("option") ? a.matcher(h, b.text(), b) && c.push(j.optionToData(b)) : b.is("optgroup") && (d = j.optionToData(b), b.children().each2(function (a, b) {
                                    f(b, d.children)
                                }), d.children.length > 0 && c.push(d))
                            },
                        c = d.children(),
                        this.getPlaceholder() !== b && c.length > 0 && (e = this.getPlaceholderOption(), e && (c = c.not(e))),
                        c.each2(function (a, b) {
                                f(b, g.results)
                            }),
                        a.callback(g)
                    }), c.id = function (a) {
                        return a.id
                    }, c.formatResultCssClass = function (a) {
                        return a.css
                    }) : "query" in c || ("ajax" in c ? (i = c.element.data("ajax-url"), i && i.length > 0 && (c.ajax.url = i), c.query = v.call(c.element, c.ajax)) : "data" in c ? c.query = w(c.data) : "tags" in c && (c.query = x(c.tags), c.createSearchChoice === b && (c.createSearchChoice = function (b) {
                        return {
                            "id": a.trim(b),
                            "text": a.trim(b)
                        }
                    }), c.initSelection === b && (c.initSelection = function (b, d) {
                        var e = [];
                        a(g(b.val(), c.separator)).each(function () {
                            var b = {
                                "id": this,
                                "text": this
                            },
                                d = c.tags;
                            a.isFunction(d) && (d = d()),
                            a(d).each(function () {
                                    return f(this.id, b.id) ? (b = this, !1) : void 0
                                }),
                            e.push(b)
                        }),
                        d(e)
                    }))), "function" != typeof c.query) throw "query function not defined for Select2 " + c.element.attr("id");
                    return c
                },
                "monitorSource": function () {
                    var a, c, d = this.opts.element;
                    d.on("change.select2", this.bind(function () {
                        this.opts.element.data("select2-change-triggered") !== !0 && this.initSelection()
                    })),
                    a = this.bind(function () {
                        var a = d.prop("disabled");
                        a === b && (a = !1),
                        this.enable(!a);
                        var c = d.prop("readonly");
                        c === b && (c = !1),
                        this.readonly(c),
                        s(this.container, this.opts.element, this.opts.adaptContainerCssClass),
                        this.container.addClass(z(this.opts.containerCssClass)),
                        s(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass),
                        this.dropdown.addClass(z(this.opts.dropdownCssClass))
                    }),
                    d.on("propertychange.select2", a),
                    this.mutationCallback === b && (this.mutationCallback = function (b) {
                        b.forEach(a)
                    }),
                    c = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver,
                    c !== b && (this.propertyObserver && (delete this.propertyObserver, this.propertyObserver = null), this.propertyObserver = new c(this.mutationCallback), this.propertyObserver.observe(d.get(0), {
                        "attributes": !0,
                        "subtree": !1
                    }))
                },
                "triggerSelect": function (b) {
                    var c = a.Event("select2-selecting", {
                        "val": this.id(b),
                        "object": b
                    });
                    return this.opts.element.trigger(c),
                    !c.isDefaultPrevented()
                },
                "triggerChange": function (b) {
                    b = b || {},
                    b = a.extend({}, b, {
                        "type": "change",
                        "val": this.val()
                    }),
                    this.opts.element.data("select2-change-triggered", !0),
                    this.opts.element.trigger(b),
                    this.opts.element.data("select2-change-triggered", !1),
                    this.opts.element.click(),
                    this.opts.blurOnChange && this.opts.element.blur()
                },
                "isInterfaceEnabled": function () {
                    return this.enabledInterface === !0
                },
                "enableInterface": function () {
                    var a = this._enabled && !this._readonly,
                        b = !a;
                    return a === this.enabledInterface ? !1 : (this.container.toggleClass("select2-container-disabled", b), this.close(), this.enabledInterface = a, !0)
                },
                "enable": function (a) {
                    a === b && (a = !0),
                    this._enabled !== a && (this._enabled = a, this.opts.element.prop("disabled", !a), this.enableInterface())
                },
                "disable": function () {
                    this.enable(!1)
                },
                "readonly": function (a) {
                    return a === b && (a = !1),
                    this._readonly === a ? !1 : (this._readonly = a, this.opts.element.prop("readonly", a), this.enableInterface(), !0)
                },
                "opened": function () {
                    return this.container.hasClass("select2-dropdown-open")
                },
                "positionDropdown": function () {
                    var b, c, d, e, f, g = this.dropdown,
                        h = this.container.offset(),
                        i = this.container.outerHeight(!1),
                        j = this.container.outerWidth(!1),
                        k = g.outerHeight(!1),
                        l = a(window),
                        m = l.width(),
                        n = l.height(),
                        o = l.scrollLeft() + m,
                        p = l.scrollTop() + n,
                        q = h.top + i,
                        r = h.left,
                        s = p >= q + k,
                        t = h.top - k >= this.body().scrollTop(),
                        u = g.outerWidth(!1),
                        v = o >= r + u,
                        w = g.hasClass("select2-drop-above");
                    w ? (c = !0, !t && s && (d = !0, c = !1)) : (c = !1, !s && t && (d = !0, c = !0)),
                    d && (g.hide(), h = this.container.offset(), i = this.container.outerHeight(!1), j = this.container.outerWidth(!1), k = g.outerHeight(!1), o = l.scrollLeft() + m, p = l.scrollTop() + n, q = h.top + i, r = h.left, u = g.outerWidth(!1), v = o >= r + u, g.show()),
                    this.opts.dropdownAutoWidth ? (f = a(".select2-results", g)[0], g.addClass("select2-drop-auto-width"), g.css("width", ""), u = g.outerWidth(!1) + (f.scrollHeight === f.clientHeight ? 0 : K.width), u > j ? j = u : u = j, v = o >= r + u) : this.container.removeClass("select2-drop-auto-width"),
                    "static" !== this.body().css("position") && (b = this.body().offset(), q -= b.top, r -= b.left),
                    v || (r = h.left + j - u),
                    e = {
                            "left": r,
                            "width": j
                        },
                    c ? (e.bottom = n - h.top, e.top = "auto", this.container.addClass("select2-drop-above"), g.addClass("select2-drop-above")) : (e.top = q, e.bottom = "auto", this.container.removeClass("select2-drop-above"), g.removeClass("select2-drop-above")),
                    e = a.extend(e, z(this.opts.dropdownCss)),
                    g.css(e)
                },
                "shouldOpen": function () {
                    var b;
                    return this.opened() ? !1 : this._enabled === !1 || this._readonly === !0 ? !1 : (b = a.Event("select2-opening"), this.opts.element.trigger(b), !b.isDefaultPrevented())
                },
                "clearDropdownAlignmentPreference": function () {
                    this.container.removeClass("select2-drop-above"),
                    this.dropdown.removeClass("select2-drop-above")
                },
                "open": function () {
                    return this.shouldOpen() ? (this.opening(), !0) : !1
                },
                "opening": function () {
                    var b, c = this.containerId,
                        d = "scroll." + c,
                        e = "resize." + c,
                        f = "orientationchange." + c;
                    this.container.addClass("select2-dropdown-open").addClass("select2-container-active"),
                    this.clearDropdownAlignmentPreference(),
                    this.dropdown[0] !== this.body().children().last()[0] && this.dropdown.detach().appendTo(this.body()),
                    b = a("#select2-drop-mask"),
                    0 == b.length && (b = a(document.createElement("div")), b.attr("id", "select2-drop-mask").attr("class", "select2-drop-mask"), b.hide(), b.appendTo(this.body()), b.on("mousedown touchstart click", function (b) {
                            var c, d = a("#select2-drop");
                            d.length > 0 && (c = d.data("select2"), c.opts.selectOnBlur && c.selectHighlighted({
                                "noFocus": !0
                            }), c.close({
                                "focus": !0
                            }), b.preventDefault(), b.stopPropagation())
                        })),
                    this.dropdown.prev()[0] !== b[0] && this.dropdown.before(b),
                    a("#select2-drop").removeAttr("id"),
                    this.dropdown.attr("id", "select2-drop"),
                    b.show(),
                    this.positionDropdown(),
                    this.dropdown.show(),
                    this.positionDropdown(),
                    this.dropdown.addClass("select2-drop-active");
                    var g = this;
                    this.container.parents().add(window).each(function () {
                            a(this).on(e + " " + d + " " + f, function () {
                                g.positionDropdown()
                            })
                        })
                },
                "close": function () {
                    if (this.opened()) {
                        var b = this.containerId,
                            c = "scroll." + b,
                            d = "resize." + b,
                            e = "orientationchange." + b;
                        this.container.parents().add(window).each(function () {
                                a(this).off(c).off(d).off(e)
                            }),
                        this.clearDropdownAlignmentPreference(),
                        a("#select2-drop-mask").hide(),
                        this.dropdown.removeAttr("id"),
                        this.dropdown.hide(),
                        this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active"),
                        this.results.empty(),
                        this.clearSearch(),
                        this.search.removeClass("select2-active"),
                        this.opts.element.trigger(a.Event("select2-close"))
                    }
                },
                "externalSearch": function (a) {
                    this.open(),
                    this.search.val(a),
                    this.updateResults(!1)
                },
                "clearSearch": function () {},
                "getMaximumSelectionSize": function () {
                    return z(this.opts.maximumSelectionSize)
                },
                "ensureHighlightVisible": function () {
                    var b, c, d, e, f, g, h, i = this.results;
                    if (c = this.highlight(), !(0 > c)) {
                        if (0 == c) return void i.scrollTop(0);
                        b = this.findHighlightableChoices().find(".select2-result-label"),
                        d = a(b[c]),
                        e = d.offset().top + d.outerHeight(!0),
                        c === b.length - 1 && (h = i.find("li.select2-more-results"), h.length > 0 && (e = h.offset().top + h.outerHeight(!0))),
                        f = i.offset().top + i.outerHeight(!0),
                        e > f && i.scrollTop(i.scrollTop() + (e - f)),
                        g = d.offset().top - i.offset().top,
                        0 > g && "none" != d.css("display") && i.scrollTop(i.scrollTop() + g)
                    }
                },
                "findHighlightableChoices": function () {
                    return this.results.find(".select2-result-selectable:not(.select2-disabled, .select2-selected)")
                },
                "moveHighlight": function (b) {
                    for (var c = this.findHighlightableChoices(), d = this.highlight(); d > -1 && d < c.length;) {
                        d += b;
                        var e = a(c[d]);
                        if (e.hasClass("select2-result-selectable") && !e.hasClass("select2-disabled") && !e.hasClass("select2-selected")) {
                            this.highlight(d);
                            break
                        }
                    }
                },
                "highlight": function (b) {
                    var c, e, f = this.findHighlightableChoices();
                    return 0 === arguments.length ? d(f.filter(".select2-highlighted")[0], f.get()) : (b >= f.length && (b = f.length - 1), 0 > b && (b = 0), this.removeHighlight(), c = a(f[b]), c.addClass("select2-highlighted"), this.ensureHighlightVisible(), e = c.data("select2-data"), void(e && this.opts.element.trigger({
                        "type": "select2-highlight",
                        "val": this.id(e),
                        "choice": e
                    })))
                },
                "removeHighlight": function () {
                    this.results.find(".select2-highlighted").removeClass("select2-highlighted")
                },
                "countSelectableResults": function () {
                    return this.findHighlightableChoices().length
                },
                "highlightUnderEvent": function (b) {
                    var c = a(b.target).closest(".select2-result-selectable");
                    if (c.length > 0 && !c.is(".select2-highlighted")) {
                        var d = this.findHighlightableChoices();
                        this.highlight(d.index(c))
                    } else 0 == c.length && this.removeHighlight()
                },
                "loadMoreIfNeeded": function () {
                    var a, b = this.results,
                        c = b.find("li.select2-more-results"),
                        d = this.resultsPage + 1,
                        e = this,
                        f = this.search.val(),
                        g = this.context;
                    0 !== c.length && (a = c.offset().top - b.offset().top - b.height(), a <= this.opts.loadMorePadding && (c.addClass("select2-active"), this.opts.query({
                            "element": this.opts.element,
                            "term": f,
                            "page": d,
                            "context": g,
                            "matcher": this.opts.matcher,
                            "callback": this.bind(function (a) {
                                e.opened() && (e.opts.populateResults.call(this, b, a.results, {
                                    "term": f,
                                    "page": d,
                                    "context": g
                                }), e.postprocessResults(a, !1, !1), a.more === !0 ? (c.detach().appendTo(b).text(e.opts.formatLoadMore(d + 1)), window.setTimeout(function () {
                                    e.loadMoreIfNeeded()
                                }, 10)) : c.remove(), e.positionDropdown(), e.resultsPage = d, e.context = a.context, this.opts.element.trigger({
                                    "type": "select2-loaded",
                                    "items": a
                                }))
                            })
                        })))
                },
                "tokenize": function () {},
                "updateResults": function (c) {
                    function d() {
                        j.removeClass("select2-active"),
                        m.positionDropdown()
                    }
                    function e(a) {
                        k.html(a),
                        d()
                    }
                    var g, h, i, j = this.search,
                        k = this.results,
                        l = this.opts,
                        m = this,
                        n = j.val(),
                        o = a.data(this.container, "select2-last-term");
                    if ((c === !0 || !o || !f(n, o)) && (a.data(this.container, "select2-last-term", n), c === !0 || this.showSearchInput !== !1 && this.opened())) {
                            i = ++this.queryCount;
                            var p = this.getMaximumSelectionSize();
                            if (p >= 1 && (g = this.data(), a.isArray(g) && g.length >= p && y(l.formatSelectionTooBig, "formatSelectionTooBig"))) return void e("<li class='select2-selection-limit'>" + l.formatSelectionTooBig(p) + "</li>");
                            if (j.val().length < l.minimumInputLength) return e(y(l.formatInputTooShort, "formatInputTooShort") ? "<li class='select2-no-results'>" + l.formatInputTooShort(j.val(), l.minimumInputLength) + "</li>" : ""),
                            void(c && this.showSearch && this.showSearch(!0));
                            if (l.maximumInputLength && j.val().length > l.maximumInputLength) return void e(y(l.formatInputTooLong, "formatInputTooLong") ? "<li class='select2-no-results'>" + l.formatInputTooLong(j.val(), l.maximumInputLength) + "</li>" : "");
                            l.formatSearching && 0 === this.findHighlightableChoices().length && e("<li class='select2-searching'>" + l.formatSearching() + "</li>"),
                            j.addClass("select2-active"),
                            this.removeHighlight(),
                            h = this.tokenize(),
                            h != b && null != h && j.val(h),
                            this.resultsPage = 1,
                            l.query({
                                "element": l.element,
                                "term": j.val(),
                                "page": this.resultsPage,
                                "context": null,
                                "matcher": l.matcher,
                                "callback": this.bind(function (g) {
                                    var h;
                                    if (i == this.queryCount) {
                                        if (!this.opened()) return void this.search.removeClass("select2-active");
                                        if (this.context = g.context === b ? null : g.context, this.opts.createSearchChoice && "" !== j.val() && (h = this.opts.createSearchChoice.call(m, j.val(), g.results), h !== b && null !== h && m.id(h) !== b && null !== m.id(h) && 0 === a(g.results).filter(function () {
                                            return f(m.id(this), m.id(h))
                                        }).length && g.results.unshift(h)), 0 === g.results.length && y(l.formatNoMatches, "formatNoMatches")) return void e("<li class='select2-no-results'>" + l.formatNoMatches(j.val()) + "</li>");
                                        k.empty(),
                                        m.opts.populateResults.call(this, k, g.results, {
                                            "term": j.val(),
                                            "page": this.resultsPage,
                                            "context": null
                                        }),
                                        g.more === !0 && y(l.formatLoadMore, "formatLoadMore") && (k.append("<li class='select2-more-results'>" + m.opts.escapeMarkup(l.formatLoadMore(this.resultsPage)) + "</li>"), window.setTimeout(function () {
                                            m.loadMoreIfNeeded()
                                        }, 10)),
                                        this.postprocessResults(g, c),
                                        d(),
                                        this.opts.element.trigger({
                                            "type": "select2-loaded",
                                            "items": g
                                        })
                                    }
                                })
                            })
                        }
                },
                "cancel": function () {
                    this.close()
                },
                "blur": function () {
                    this.opts.selectOnBlur && this.selectHighlighted({
                        "noFocus": !0
                    }),
                    this.close(),
                    this.container.removeClass("select2-container-active"),
                    this.search[0] === document.activeElement && this.search.blur(),
                    this.clearSearch(),
                    this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")
                },
                "focusSearch": function () {
                    n(this.search)
                },
                "selectHighlighted": function (a) {
                    var b = this.highlight(),
                        c = this.results.find(".select2-highlighted"),
                        d = c.closest(".select2-result").data("select2-data");
                    d ? (this.highlight(b), this.onSelect(d, a)) : a && a.noFocus && this.close()
                },
                "getPlaceholder": function () {
                    var a;
                    return this.opts.element.attr("placeholder") || this.opts.element.attr("data-placeholder") || this.opts.element.data("placeholder") || this.opts.placeholder || ((a = this.getPlaceholderOption()) !== b ? a.text() : b)
                },
                "getPlaceholderOption": function () {
                    if (this.select) {
                        var a = this.select.children("option").first();
                        if (this.opts.placeholderOption !== b) return "first" === this.opts.placeholderOption && a || "function" == typeof this.opts.placeholderOption && this.opts.placeholderOption(this.select);
                        if ("" === a.text() && "" === a.val()) return a
                    }
                },
                "initContainerWidth": function () {
                    function c() {
                        var c, d, e, f, g, h;
                        if ("off" === this.opts.width) return null;
                        if ("element" === this.opts.width) return 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px";
                        if ("copy" === this.opts.width || "resolve" === this.opts.width) {
                            if (c = this.opts.element.attr("style"), c !== b) for (d = c.split(";"), f = 0, g = d.length; g > f; f += 1) if (h = d[f].replace(/\s/g, ""), e = h.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i), null !== e && e.length >= 1) return e[1];
                            return "resolve" === this.opts.width ? (c = this.opts.element.css("width"), c.indexOf("%") > 0 ? c : 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px") : null
                        }
                        return a.isFunction(this.opts.width) ? this.opts.width() : this.opts.width
                    }
                    var d = c.call(this);
                    null !== d && this.container.css("width", d)
                }
            }),
        F = C(E, {
                "createContainer": function () {
                    var b = a(document.createElement("div")).attr({
                        "class": "select2-container"
                    }).html(["<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>", "   <span class='select2-chosen'>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>", "   <span class='select2-arrow'><b></b></span>", "</a>", "<input class='select2-focusser select2-offscreen' type='text'/>", "<div class='select2-drop select2-display-none'>", "   <div class='select2-search'>", "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'/>", "   </div>", "   <ul class='select2-results'>", "   </ul>", "</div>"].join(""));
                    return b
                },
                "enableInterface": function () {
                    this.parent.enableInterface.apply(this, arguments) && this.focusser.prop("disabled", !this.isInterfaceEnabled())
                },
                "opening": function () {
                    var c, d, e;
                    this.opts.minimumResultsForSearch >= 0 && this.showSearch(!0),
                    this.parent.opening.apply(this, arguments),
                    this.showSearchInput !== !1 && this.search.val(this.focusser.val()),
                    this.search.focus(),
                    c = this.search.get(0),
                    c.createTextRange ? (d = c.createTextRange(), d.collapse(!1), d.select()) : c.setSelectionRange && (e = this.search.val().length, c.setSelectionRange(e, e)),
                    "" === this.search.val() && this.nextSearchTerm != b && (this.search.val(this.nextSearchTerm), this.search.select()),
                    this.focusser.prop("disabled", !0).val(""),
                    this.updateResults(!0),
                    this.opts.element.trigger(a.Event("select2-open"))
                },
                "close": function (a) {
                    this.opened() && (this.parent.close.apply(this, arguments), a = a || {
                        "focus": !0
                    }, this.focusser.removeAttr("disabled"), a.focus && this.focusser.focus())
                },
                "focus": function () {
                    this.opened() ? this.close() : (this.focusser.removeAttr("disabled"), this.focusser.focus())
                },
                "isFocused": function () {
                    return this.container.hasClass("select2-container-active")
                },
                "cancel": function () {
                    this.parent.cancel.apply(this, arguments),
                    this.focusser.removeAttr("disabled"),
                    this.focusser.focus()
                },
                "destroy": function () {
                    a("label[for='" + this.focusser.attr("id") + "']").attr("for", this.opts.element.attr("id")),
                    this.parent.destroy.apply(this, arguments)
                },
                "initContainer": function () {
                    var b, c = this.container,
                        d = this.dropdown;
                    this.showSearch(this.opts.minimumResultsForSearch < 0 ? !1 : !0),
                    this.selection = b = c.find(".select2-choice"),
                    this.focusser = c.find(".select2-focusser"),
                    this.focusser.attr("id", "s2id_autogen" + H()),
                    a("label[for='" + this.opts.element.attr("id") + "']").attr("for", this.focusser.attr("id")),
                    this.focusser.attr("tabindex", this.elementTabIndex),
                    this.search.on("keydown", this.bind(function (a) {
                            if (this.isInterfaceEnabled()) {
                                if (a.which === D.PAGE_UP || a.which === D.PAGE_DOWN) return void p(a);
                                switch (a.which) {
                                case D.UP:
                                case D.DOWN:
                                    return this.moveHighlight(a.which === D.UP ? -1 : 1),
                                    void p(a);
                                case D.ENTER:
                                    return this.selectHighlighted(),
                                    void p(a);
                                case D.TAB:
                                    return void this.selectHighlighted({
                                        "noFocus": !0
                                    });
                                case D.ESC:
                                    return this.cancel(a),
                                    void p(a)
                                }
                            }
                        })),
                    this.search.on("blur", this.bind(function () {
                            document.activeElement === this.body().get(0) && window.setTimeout(this.bind(function () {
                                this.search.focus()
                            }), 0)
                        })),
                    this.focusser.on("keydown", this.bind(function (a) {
                            if (this.isInterfaceEnabled() && a.which !== D.TAB && !D.isControl(a) && !D.isFunctionKey(a) && a.which !== D.ESC) {
                                if (this.opts.openOnEnter === !1 && a.which === D.ENTER) return void p(a);
                                if (a.which == D.DOWN || a.which == D.UP || a.which == D.ENTER && this.opts.openOnEnter) {
                                    if (a.altKey || a.ctrlKey || a.shiftKey || a.metaKey) return;
                                    return this.open(),
                                    void p(a)
                                }
                                return a.which == D.DELETE || a.which == D.BACKSPACE ? (this.opts.allowClear && this.clear(), void p(a)) : void 0
                            }
                        })),
                    i(this.focusser),
                    this.focusser.on("keyup-change input", this.bind(function (a) {
                            if (this.opts.minimumResultsForSearch >= 0) {
                                if (a.stopPropagation(), this.opened()) return;
                                this.open()
                            }
                        })),
                    b.on("mousedown", "abbr", this.bind(function (a) {
                            this.isInterfaceEnabled() && (this.clear(), q(a), this.close(), this.selection.focus())
                        })),
                    b.on("mousedown", this.bind(function (b) {
                            this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")),
                            this.opened() ? this.close() : this.isInterfaceEnabled() && this.open(),
                            p(b)
                        })),
                    d.on("mousedown", this.bind(function () {
                            this.search.focus()
                        })),
                    b.on("focus", this.bind(function (a) {
                            p(a)
                        })),
                    this.focusser.on("focus", this.bind(function () {
                            this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")),
                            this.container.addClass("select2-container-active")
                        })).on("blur", this.bind(function () {
                            this.opened() || (this.container.removeClass("select2-container-active"), this.opts.element.trigger(a.Event("select2-blur")))
                        })),
                    this.search.on("focus", this.bind(function () {
                            this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")),
                            this.container.addClass("select2-container-active")
                        })),
                    this.initContainerWidth(),
                    this.opts.element.addClass("select2-offscreen"),
                    this.setPlaceholder()
                },
                "clear": function (b) {
                    var c = this.selection.data("select2-data");
                    if (c) {
                        var d = a.Event("select2-clearing");
                        if (this.opts.element.trigger(d), d.isDefaultPrevented()) return;
                        var e = this.getPlaceholderOption();
                        this.opts.element.val(e ? e.val() : ""),
                        this.selection.find(".select2-chosen").empty(),
                        this.selection.removeData("select2-data"),
                        this.setPlaceholder(),
                        b !== !1 && (this.opts.element.trigger({
                            "type": "select2-removed",
                            "val": this.id(c),
                            "choice": c
                        }), this.triggerChange({
                            "removed": c
                        }))
                    }
                },
                "initSelection": function () {
                    if (this.isPlaceholderOptionSelected()) this.updateSelection(null),
                    this.close(),
                    this.setPlaceholder();
                    else {
                        var a = this;
                        this.opts.initSelection.call(null, this.opts.element, function (c) {
                            c !== b && null !== c && (a.updateSelection(c), a.close(), a.setPlaceholder())
                        })
                    }
                },
                "isPlaceholderOptionSelected": function () {
                    var a;
                    return this.getPlaceholder() ? (a = this.getPlaceholderOption()) !== b && a.prop("selected") || "" === this.opts.element.val() || this.opts.element.val() === b || null === this.opts.element.val() : !1
                },
                "prepareOpts": function () {
                    var b = this.parent.prepareOpts.apply(this, arguments),
                        c = this;
                    return "select" === b.element.get(0).tagName.toLowerCase() ? b.initSelection = function (a, b) {
                            var d = a.find("option").filter(function () {
                                return this.selected
                            });
                            b(c.optionToData(d))
                        } : "data" in b && (b.initSelection = b.initSelection ||
                        function (c, d) {
                            var e = c.val(),
                                g = null;
                            b.query({
                                    "matcher": function (a, c, d) {
                                        var h = f(e, b.id(d));
                                        return h && (g = d),
                                        h
                                    },
                                    "callback": a.isFunction(d) ?
                                    function () {
                                        d(g)
                                    } : a.noop
                                })
                        }),
                    b
                },
                "getPlaceholder": function () {
                    return this.select && this.getPlaceholderOption() === b ? b : this.parent.getPlaceholder.apply(this, arguments)
                },
                "setPlaceholder": function () {
                    var a = this.getPlaceholder();
                    if (this.isPlaceholderOptionSelected() && a !== b) {
                        if (this.select && this.getPlaceholderOption() === b) return;
                        this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(a)),
                        this.selection.addClass("select2-default"),
                        this.container.removeClass("select2-allowclear")
                    }
                },
                "postprocessResults": function (a, b, c) {
                    var d = 0,
                        e = this;
                    if (this.findHighlightableChoices().each2(function (a, b) {
                            return f(e.id(b.data("select2-data")), e.opts.element.val()) ? (d = a, !1) : void 0
                        }), c !== !1 && this.highlight(b === !0 && d >= 0 ? d : 0), b === !0) {
                            var g = this.opts.minimumResultsForSearch;
                            g >= 0 && this.showSearch(A(a.results) >= g)
                        }
                },
                "showSearch": function (b) {
                    this.showSearchInput !== b && (this.showSearchInput = b, this.dropdown.find(".select2-search").toggleClass("select2-search-hidden", !b), this.dropdown.find(".select2-search").toggleClass("select2-offscreen", !b), a(this.dropdown, this.container).toggleClass("select2-with-searchbox", b))
                },
                "onSelect": function (a, b) {
                    if (this.triggerSelect(a)) {
                        var c = this.opts.element.val(),
                            d = this.data();
                        this.opts.element.val(this.id(a)),
                        this.updateSelection(a),
                        this.opts.element.trigger({
                                "type": "select2-selected",
                                "val": this.id(a),
                                "choice": a
                            }),
                        this.nextSearchTerm = this.opts.nextSearchTerm(a, this.search.val()),
                        this.close(),
                        b && b.noFocus || this.focusser.focus(),
                        f(c, this.id(a)) || this.triggerChange({
                                "added": a,
                                "removed": d
                            })
                    }
                },
                "updateSelection": function (a) {
                    var c, d, e = this.selection.find(".select2-chosen");
                    this.selection.data("select2-data", a),
                    e.empty(),
                    null !== a && (c = this.opts.formatSelection(a, e, this.opts.escapeMarkup)),
                    c !== b && e.append(c),
                    d = this.opts.formatSelectionCssClass(a, e),
                    d !== b && e.addClass(d),
                    this.selection.removeClass("select2-default"),
                    this.opts.allowClear && this.getPlaceholder() !== b && this.container.addClass("select2-allowclear")
                },
                "val": function () {
                    var a, c = !1,
                        d = null,
                        e = this,
                        f = this.data();
                    if (0 === arguments.length) return this.opts.element.val();
                    if (a = arguments[0], arguments.length > 1 && (c = arguments[1]), this.select) this.select.val(a).find("option").filter(function () {
                            return this.selected
                        }).each2(function (a, b) {
                            return d = e.optionToData(b),
                            !1
                        }),
                    this.updateSelection(d),
                    this.setPlaceholder(),
                    c && this.triggerChange({
                            "added": d,
                            "removed": f
                        });
                    else {
                            if (!a && 0 !== a) return void this.clear(c);
                            if (this.opts.initSelection === b) throw new Error("cannot call val() if initSelection() is not defined");
                            this.opts.element.val(a),
                            this.opts.initSelection(this.opts.element, function (a) {
                                e.opts.element.val(a ? e.id(a) : ""),
                                e.updateSelection(a),
                                e.setPlaceholder(),
                                c && e.triggerChange({
                                    "added": a,
                                    "removed": f
                                })
                            })
                        }
                },
                "clearSearch": function () {
                    this.search.val(""),
                    this.focusser.val("")
                },
                "data": function (a) {
                    var c, d = !1;
                    return 0 === arguments.length ? (c = this.selection.data("select2-data"), c == b && (c = null), c) : (arguments.length > 1 && (d = arguments[1]), void(a ? (c = this.data(), this.opts.element.val(a ? this.id(a) : ""), this.updateSelection(a), d && this.triggerChange({
                        "added": a,
                        "removed": c
                    })) : this.clear(d)))
                }
            }),
        G = C(E, {
                "createContainer": function () {
                    var b = a(document.createElement("div")).attr({
                        "class": "select2-container select2-container-multi"
                    }).html(["<ul class='select2-choices'>", "  <li class='select2-search-field'>", "    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>", "  </li>", "</ul>", "<div class='select2-drop select2-drop-multi select2-display-none'>", "   <ul class='select2-results'>", "   </ul>", "</div>"].join(""));
                    return b
                },
                "prepareOpts": function () {
                    var b = this.parent.prepareOpts.apply(this, arguments),
                        c = this;
                    return "select" === b.element.get(0).tagName.toLowerCase() ? b.initSelection = function (a, b) {
                            var d = [];
                            a.find("option").filter(function () {
                                return this.selected
                            }).each2(function (a, b) {
                                d.push(c.optionToData(b))
                            }),
                            b(d)
                        } : "data" in b && (b.initSelection = b.initSelection ||
                        function (c, d) {
                            var e = g(c.val(), b.separator),
                                h = [];
                            b.query({
                                    "matcher": function (c, d, g) {
                                        var i = a.grep(e, function (a) {
                                            return f(a, b.id(g))
                                        }).length;
                                        return i && h.push(g),
                                        i
                                    },
                                    "callback": a.isFunction(d) ?
                                    function () {
                                        for (var a = [], c = 0; c < e.length; c++) for (var g = e[c], i = 0; i < h.length; i++) {
                                            var j = h[i];
                                            if (f(g, b.id(j))) {
                                                a.push(j),
                                                h.splice(i, 1);
                                                break
                                            }
                                        }
                                        d(a)
                                    } : a.noop
                                })
                        }),
                    b
                },
                "selectChoice": function (a) {
                    var b = this.container.find(".select2-search-choice-focus");
                    b.length && a && a[0] == b[0] || (b.length && this.opts.element.trigger("choice-deselected", b), b.removeClass("select2-search-choice-focus"), a && a.length && (this.close(), a.addClass("select2-search-choice-focus"), this.opts.element.trigger("choice-selected", a)))
                },
                "destroy": function () {
                    a("label[for='" + this.search.attr("id") + "']").attr("for", this.opts.element.attr("id")),
                    this.parent.destroy.apply(this, arguments)
                },
                "initContainer": function () {
                    var b, c = ".select2-choices";
                    this.searchContainer = this.container.find(".select2-search-field"),
                    this.selection = b = this.container.find(c);
                    var d = this;
                    this.selection.on("click", ".select2-search-choice:not(.select2-locked)", function () {
                        d.search[0].focus(),
                        d.selectChoice(a(this))
                    }),
                    this.search.attr("id", "s2id_autogen" + H()),
                    a("label[for='" + this.opts.element.attr("id") + "']").attr("for", this.search.attr("id")),
                    this.search.on("input paste", this.bind(function () {
                        this.isInterfaceEnabled() && (this.opened() || this.open())
                    })),
                    this.search.attr("tabindex", this.elementTabIndex),
                    this.keydowns = 0,
                    this.search.on("keydown", this.bind(function (a) {
                        if (this.isInterfaceEnabled()) {
                            ++this.keydowns;
                            var c = b.find(".select2-search-choice-focus"),
                                d = c.prev(".select2-search-choice:not(.select2-locked)"),
                                e = c.next(".select2-search-choice:not(.select2-locked)"),
                                f = o(this.search);
                            if (c.length && (a.which == D.LEFT || a.which == D.RIGHT || a.which == D.BACKSPACE || a.which == D.DELETE || a.which == D.ENTER)) {
                                    var g = c;
                                    return a.which == D.LEFT && d.length ? g = d : a.which == D.RIGHT ? g = e.length ? e : null : a.which === D.BACKSPACE ? (this.unselect(c.first()), this.search.width(10), g = d.length ? d : e) : a.which == D.DELETE ? (this.unselect(c.first()), this.search.width(10), g = e.length ? e : null) : a.which == D.ENTER && (g = null),
                                    this.selectChoice(g),
                                    p(a),
                                    void(g && g.length || this.open())
                                }
                            if ((a.which === D.BACKSPACE && 1 == this.keydowns || a.which == D.LEFT) && 0 == f.offset && !f.length) return this.selectChoice(b.find(".select2-search-choice:not(.select2-locked)").last()),
                            void p(a);
                            if (this.selectChoice(null), this.opened()) switch (a.which) {
                                case D.UP:
                                case D.DOWN:
                                    return this.moveHighlight(a.which === D.UP ? -1 : 1),
                                    void p(a);
                                case D.ENTER:
                                    return this.selectHighlighted(),
                                    void p(a);
                                case D.TAB:
                                    return this.selectHighlighted({
                                        "noFocus": !0
                                    }),
                                    void this.close();
                                case D.ESC:
                                    return this.cancel(a),
                                    void p(a)
                                }
                            if (a.which !== D.TAB && !D.isControl(a) && !D.isFunctionKey(a) && a.which !== D.BACKSPACE && a.which !== D.ESC) {
                                    if (a.which === D.ENTER) {
                                        if (this.opts.openOnEnter === !1) return;
                                        if (a.altKey || a.ctrlKey || a.shiftKey || a.metaKey) return
                                    }
                                    this.open(),
                                    (a.which === D.PAGE_UP || a.which === D.PAGE_DOWN) && p(a),
                                    a.which === D.ENTER && p(a)
                                }
                        }
                    })),
                    this.search.on("keyup", this.bind(function () {
                        this.keydowns = 0,
                        this.resizeSearch()
                    })),
                    this.search.on("blur", this.bind(function (b) {
                        this.container.removeClass("select2-container-active"),
                        this.search.removeClass("select2-focused"),
                        this.selectChoice(null),
                        this.opened() || this.clearSearch(),
                        b.stopImmediatePropagation(),
                        this.opts.element.trigger(a.Event("select2-blur"))
                    })),
                    this.container.on("click", c, this.bind(function (b) {
                        this.isInterfaceEnabled() && (a(b.target).closest(".select2-search-choice").length > 0 || (this.selectChoice(null), this.clearPlaceholder(), this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")), this.open(), this.focusSearch(), b.preventDefault()))
                    })),
                    this.container.on("focus", c, this.bind(function () {
                        this.isInterfaceEnabled() && (this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")), this.container.addClass("select2-container-active"), this.dropdown.addClass("select2-drop-active"), this.clearPlaceholder())
                    })),
                    this.initContainerWidth(),
                    this.opts.element.addClass("select2-offscreen"),
                    this.clearSearch()
                },
                "enableInterface": function () {
                    this.parent.enableInterface.apply(this, arguments) && this.search.prop("disabled", !this.isInterfaceEnabled())
                },
                "initSelection": function () {
                    if ("" === this.opts.element.val() && "" === this.opts.element.text() && (this.updateSelection([]), this.close(), this.clearSearch()), this.select || "" !== this.opts.element.val()) {
                        var a = this;
                        this.opts.initSelection.call(null, this.opts.element, function (c) {
                            c !== b && null !== c && (a.updateSelection(c), a.close(), a.clearSearch())
                        })
                    }
                },
                "clearSearch": function () {
                    var a = this.getPlaceholder(),
                        c = this.getMaxSearchWidth();
                    a !== b && 0 === this.getVal().length && this.search.hasClass("select2-focused") === !1 ? (this.search.val(a).addClass("select2-default"), this.search.width(c > 0 ? c : this.container.css("width"))) : this.search.val("").width(10)
                },
                "clearPlaceholder": function () {
                    this.search.hasClass("select2-default") && this.search.val("").removeClass("select2-default")
                },
                "opening": function () {
                    this.clearPlaceholder(),
                    this.resizeSearch(),
                    this.parent.opening.apply(this, arguments),
                    this.focusSearch(),
                    this.updateResults(!0),
                    this.search.focus(),
                    this.opts.element.trigger(a.Event("select2-open"))
                },
                "close": function () {
                    this.opened() && this.parent.close.apply(this, arguments)
                },
                "focus": function () {
                    this.close(),
                    this.search.focus()
                },
                "isFocused": function () {
                    return this.search.hasClass("select2-focused")
                },
                "updateSelection": function (b) {
                    var c = [],
                        e = [],
                        f = this;
                    a(b).each(function () {
                            d(f.id(this), c) < 0 && (c.push(f.id(this)), e.push(this))
                        }),
                    b = e,
                    this.selection.find(".select2-search-choice").remove(),
                    a(b).each(function () {
                            f.addSelectedChoice(this)
                        }),
                    f.postprocessResults()
                },
                "tokenize": function () {
                    var a = this.search.val();
                    a = this.opts.tokenizer.call(this, a, this.data(), this.bind(this.onSelect), this.opts),
                    null != a && a != b && (this.search.val(a), a.length > 0 && this.open())
                },
                "onSelect": function (a, b) {
                    this.triggerSelect(a) && (this.addSelectedChoice(a), this.opts.element.trigger({
                        "type": "selected",
                        "val": this.id(a),
                        "choice": a
                    }), (this.select || !this.opts.closeOnSelect) && this.postprocessResults(a, !1, this.opts.closeOnSelect === !0), this.opts.closeOnSelect ? (this.close(), this.search.width(10)) : this.countSelectableResults() > 0 ? (this.search.width(10), this.resizeSearch(), this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize() && this.updateResults(!0), this.positionDropdown()) : (this.close(), this.search.width(10)), this.triggerChange({
                        "added": a
                    }), b && b.noFocus || this.focusSearch())
                },
                "cancel": function () {
                    this.close(),
                    this.focusSearch()
                },
                "addSelectedChoice": function (c) {
                    var d, e, f = !c.locked,
                        g = a("<li class='select2-search-choice'>    <div></div>    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a></li>"),
                        h = a("<li class='select2-search-choice select2-locked'><div></div></li>"),
                        i = f ? g : h,
                        j = this.id(c),
                        k = this.getVal();
                    d = this.opts.formatSelection(c, i.find("div"), this.opts.escapeMarkup),
                    d != b && i.find("div").replaceWith("<div>" + d + "</div>"),
                    e = this.opts.formatSelectionCssClass(c, i.find("div")),
                    e != b && i.addClass(e),
                    f && i.find(".select2-search-choice-close").on("mousedown", p).on("click dblclick", this.bind(function (b) {
                            this.isInterfaceEnabled() && (a(b.target).closest(".select2-search-choice").fadeOut("fast", this.bind(function () {
                                this.unselect(a(b.target)),
                                this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus"),
                                this.close(),
                                this.focusSearch()
                            })).dequeue(), p(b))
                        })).on("focus", this.bind(function () {
                            this.isInterfaceEnabled() && (this.container.addClass("select2-container-active"), this.dropdown.addClass("select2-drop-active"))
                        })),
                    i.data("select2-data", c),
                    i.insertBefore(this.searchContainer),
                    k.push(j),
                    this.setVal(k)
                },
                "unselect": function (b) {
                    var c, e, f = this.getVal();
                    if (b = b.closest(".select2-search-choice"), 0 === b.length) throw "Invalid argument: " + b + ". Must be .select2-search-choice";
                    if (c = b.data("select2-data")) {
                        for (;
                        (e = d(this.id(c), f)) >= 0;) f.splice(e, 1),
                        this.setVal(f),
                        this.select && this.postprocessResults();
                        var g = a.Event("select2-removing");
                        g.val = this.id(c),
                        g.choice = c,
                        this.opts.element.trigger(g),
                        g.isDefaultPrevented() || (b.remove(), this.opts.element.trigger({
                            "type": "select2-removed",
                            "val": this.id(c),
                            "choice": c
                        }), this.triggerChange({
                            "removed": c
                        }))
                    }
                },
                "postprocessResults": function (a, b, c) {
                    var e = this.getVal(),
                        f = this.results.find(".select2-result"),
                        g = this.results.find(".select2-result-with-children"),
                        h = this;
                    f.each2(function (a, b) {
                            var c = h.id(b.data("select2-data"));
                            d(c, e) >= 0 && (b.addClass("select2-selected"), b.find(".select2-result-selectable").addClass("select2-selected"))
                        }),
                    g.each2(function (a, b) {
                            b.is(".select2-result-selectable") || 0 !== b.find(".select2-result-selectable:not(.select2-selected)").length || b.addClass("select2-selected")
                        }),
                    -1 == this.highlight() && c !== !1 && h.highlight(0),
                    !this.opts.createSearchChoice && !f.filter(".select2-result:not(.select2-selected)").length > 0 && (!a || a && !a.more && 0 === this.results.find(".select2-no-results").length) && y(h.opts.formatNoMatches, "formatNoMatches") && this.results.append("<li class='select2-no-results'>" + h.opts.formatNoMatches(h.search.val()) + "</li>")
                },
                "getMaxSearchWidth": function () {
                    return this.selection.width() - h(this.search)
                },
                "resizeSearch": function () {
                    var a, b, c, d, e, f = h(this.search);
                    a = r(this.search) + 10,
                    b = this.search.offset().left,
                    c = this.selection.width(),
                    d = this.selection.offset().left,
                    e = c - (b - d) - f,
                    a > e && (e = c - f),
                    40 > e && (e = c - f),
                    0 >= e && (e = a),
                    this.search.width(Math.floor(e))
                },
                "getVal": function () {
                    var a;
                    return this.select ? (a = this.select.val(), null === a ? [] : a) : (a = this.opts.element.val(), g(a, this.opts.separator))
                },
                "setVal": function (b) {
                    var c;
                    this.select ? this.select.val(b) : (c = [], a(b).each(function () {
                        d(this, c) < 0 && c.push(this)
                    }), this.opts.element.val(0 === c.length ? "" : c.join(this.opts.separator)))
                },
                "buildChangeDetails": function (a, b) {
                    for (var b = b.slice(0), a = a.slice(0), c = 0; c < b.length; c++) for (var d = 0; d < a.length; d++) f(this.opts.id(b[c]), this.opts.id(a[d])) && (b.splice(c, 1), c > 0 && c--, a.splice(d, 1), d--);
                    return {
                        "added": b,
                        "removed": a
                    }
                },
                "val": function (c, d) {
                    var e, f = this;
                    if (0 === arguments.length) return this.getVal();
                    if (e = this.data(), e.length || (e = []), !c && 0 !== c) return this.opts.element.val(""),
                    this.updateSelection([]),
                    this.clearSearch(),
                    void(d && this.triggerChange({
                        "added": this.data(),
                        "removed": e
                    }));
                    if (this.setVal(c), this.select) this.opts.initSelection(this.select, this.bind(this.updateSelection)),
                    d && this.triggerChange(this.buildChangeDetails(e, this.data()));
                    else {
                        if (this.opts.initSelection === b) throw new Error("val() cannot be called if initSelection() is not defined");
                        this.opts.initSelection(this.opts.element, function (b) {
                            var c = a.map(b, f.id);
                            f.setVal(c),
                            f.updateSelection(b),
                            f.clearSearch(),
                            d && f.triggerChange(f.buildChangeDetails(e, f.data()))
                        })
                    }
                    this.clearSearch()
                },
                "onSortStart": function () {
                    if (this.select) throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");
                    this.search.width(0),
                    this.searchContainer.hide()
                },
                "onSortEnd": function () {
                    var b = [],
                        c = this;
                    this.searchContainer.show(),
                    this.searchContainer.appendTo(this.searchContainer.parent()),
                    this.resizeSearch(),
                    this.selection.find(".select2-search-choice").each(function () {
                            b.push(c.opts.id(a(this).data("select2-data")))
                        }),
                    this.setVal(b),
                    this.triggerChange()
                },
                "data": function (b, c) {
                    var d, e, f = this;
                    return 0 === arguments.length ? this.selection.find(".select2-search-choice").map(function () {
                        return a(this).data("select2-data")
                    }).get() : (e = this.data(), b || (b = []), d = a.map(b, function (a) {
                        return f.opts.id(a)
                    }), this.setVal(d), this.updateSelection(b), this.clearSearch(), c && this.triggerChange(this.buildChangeDetails(e, this.data())), void 0)
                }
            }),
        a.fn.select2 = function () {
                var c, e, f, g, h, i = Array.prototype.slice.call(arguments, 0),
                    j = ["val", "destroy", "opened", "open", "close", "focus", "isFocused", "container", "dropdown", "onSortStart", "onSortEnd", "enable", "disable", "readonly", "positionDropdown", "data", "search"],
                    k = ["opened", "isFocused", "container", "dropdown"],
                    l = ["val", "data"],
                    m = {
                        "search": "externalSearch"
                    };
                return this.each(function () {
                        if (0 === i.length || "object" == typeof i[0]) c = 0 === i.length ? {} : a.extend({}, i[0]),
                        c.element = a(this),
                        "select" === c.element.get(0).tagName.toLowerCase() ? h = c.element.prop("multiple") : (h = c.multiple || !1, "tags" in c && (c.multiple = h = !0)),
                        e = h ? new G : new F,
                        e.init(c);
                        else {
                            if ("string" != typeof i[0]) throw "Invalid arguments to select2 plugin: " + i;
                            if (d(i[0], j) < 0) throw "Unknown method: " + i[0];
                            if (g = b, e = a(this).data("select2"), e === b) return;
                            if (f = i[0], "container" === f ? g = e.container : "dropdown" === f ? g = e.dropdown : (m[f] && (f = m[f]), g = e[f].apply(e, i.slice(1))), d(i[0], k) >= 0 || d(i[0], l) && 1 == i.length) return !1
                        }
                    }),
                g === b ? this : g
            },
        a.fn.select2.defaults = {
                "width": "copy",
                "loadMorePadding": 0,
                "closeOnSelect": !0,
                "openOnEnter": !0,
                "containerCss": {},
                "dropdownCss": {},
                "containerCssClass": "",
                "dropdownCssClass": "",
                "formatResult": function (a, b, c, d) {
                    var e = [];
                    return t(a.text, c.term, e, d),
                    e.join("")
                },
                "formatSelection": function (a, c, d) {
                    return a ? d(a.text) : b
                },
                "sortResults": function (a) {
                    return a
                },
                "formatResultCssClass": function () {
                    return b
                },
                "formatSelectionCssClass": function () {
                    return b
                },
                "formatNoMatches": function () {
                    return "没有匹配的"
                },
                "formatInputTooShort": function (a, b) {
                    var c = b - a.length;
                    return "请输入至少" + c + "个字符"
                },
                "formatInputTooLong": function (a, b) {
                    var c = a.length - b;
                    return "Please delete " + c + " character" + (1 == c ? "" : "s")
                },
                "formatSelectionTooBig": function (a) {
                    return "You can only select " + a + " item" + (1 == a ? "" : "s")
                },
                "formatLoadMore": function () {
                    return "Loading more results..."
                },
                "formatSearching": function () {
                    return "查找中..."
                },
                "minimumResultsForSearch": 0,
                "minimumInputLength": 0,
                "maximumInputLength": null,
                "maximumSelectionSize": 0,
                "id": function (a) {
                    return a.id
                },
                "matcher": function (a, b) {
                    return c("" + b).toUpperCase().indexOf(c("" + a).toUpperCase()) >= 0
                },
                "separator": ",",
                "tokenSeparators": [],
                "tokenizer": B,
                "escapeMarkup": u,
                "blurOnChange": !1,
                "selectOnBlur": !1,
                "adaptContainerCssClass": function (a) {
                    return a
                },
                "adaptDropdownCssClass": function () {
                    return null
                },
                "nextSearchTerm": function () {
                    return b
                }
            },
        a.fn.select2.ajaxDefaults = {
                "transport": a.ajax,
                "params": {
                    "type": "GET",
                    "cache": !1,
                    "dataType": "json"
                }
            },
        window.Select2 = {
                "query": {
                    "ajax": v,
                    "local": w,
                    "tags": x
                },
                "util": {
                    "debounce": k,
                    "markMatch": t,
                    "escapeMarkup": u,
                    "stripDiacritics": c
                },
                "class": {
                    "abstract": E,
                    "single": F,
                    "multi": G
                }
            }
    }
}(jQuery),





function (a, b) {
    var c = 0,
        d = Array.prototype.slice,
        e = a.cleanData;
    a.cleanData = function (b) {
            for (var c, d = 0; null != (c = b[d]); d++) try {
                a(c).triggerHandler("remove")
            } catch (f) {}
            e(b)
        },
    a.widget = function (b, c, d) {
            var e, f, g, h, i = {},
                j = b.split(".")[0];
            b = b.split(".")[1],
            e = j + "-" + b,
            d || (d = c, c = a.Widget),
            a.expr[":"][e.toLowerCase()] = function (b) {
                    return !!a.data(b, e)
                },
            a[j] = a[j] || {},
            f = a[j][b],
            g = a[j][b] = function (a, b) {
                    return this._createWidget ? void(arguments.length && this._createWidget(a, b)) : new g(a, b)
                },
            a.extend(g, f, {
                    "version": d.version,
                    "_proto": a.extend({}, d),
                    "_childConstructors": []
                }),
            h = new c,
            h.options = a.widget.extend({}, h.options),
            a.each(d, function (b, d) {
                    return a.isFunction(d) ? void(i[b] = function () {
                        var a = function () {
                            return c.prototype[b].apply(this, arguments)
                        },
                            e = function (a) {
                                return c.prototype[b].apply(this, a)
                            };
                        return function () {
                                var b, c = this._super,
                                    f = this._superApply;
                                return this._super = a,
                                this._superApply = e,
                                b = d.apply(this, arguments),
                                this._super = c,
                                this._superApply = f,
                                b
                            }
                    }()) : void(i[b] = d)
                }),
            g.prototype = a.widget.extend(h, {
                    "widgetEventPrefix": f ? h.widgetEventPrefix || b : b
                }, i, {
                    "constructor": g,
                    "namespace": j,
                    "widgetName": b,
                    "widgetFullName": e
                }),
            f ? (a.each(f._childConstructors, function (b, c) {
                    var d = c.prototype;
                    a.widget(d.namespace + "." + d.widgetName, g, c._proto)
                }), delete f._childConstructors) : c._childConstructors.push(g),
            a.widget.bridge(b, g)
        },
    a.widget.extend = function (c) {
            for (var e, f, g = d.call(arguments, 1), h = 0, i = g.length; i > h; h++) for (e in g[h]) f = g[h][e],
            g[h].hasOwnProperty(e) && f !== b && (c[e] = a.isPlainObject(f) ? a.isPlainObject(c[e]) ? a.widget.extend({}, c[e], f) : a.widget.extend({}, f) : f);
            return c
        },
    a.widget.bridge = function (c, e) {
            var f = e.prototype.widgetFullName || c;
            a.fn[c] = function (g) {
                var h = "string" == typeof g,
                    i = d.call(arguments, 1),
                    j = this;
                return g = !h && i.length ? a.widget.extend.apply(null, [g].concat(i)) : g,
                this.each(h ?
                    function () {
                        var d, e = a.data(this, f);
                        return e ? a.isFunction(e[g]) && "_" !== g.charAt(0) ? (d = e[g].apply(e, i), d !== e && d !== b ? (j = d && d.jquery ? j.pushStack(d.get()) : d, !1) : void 0) : a.error("no such method '" + g + "' for " + c + " widget instance") : a.error("cannot call methods on " + c + " prior to initialization; attempted to call method '" + g + "'")
                    } : function () {
                        var b = a.data(this, f);
                        b ? b.option(g || {})._init() : a.data(this, f, new e(g, this))
                    }),
                j
            }
        },
    a.Widget = function () {},
    a.Widget._childConstructors = [],
    a.Widget.prototype = {
            "widgetName": "widget",
            "widgetEventPrefix": "",
            "defaultElement": "<div>",
            "options": {
                "disabled": !1,
                "create": null
            },
            "_createWidget": function (b, d) {
                d = a(d || this.defaultElement || this)[0],
                this.element = a(d),
                this.uuid = c++,
                this.eventNamespace = "." + this.widgetName + this.uuid,
                this.options = a.widget.extend({}, this.options, this._getCreateOptions(), b),
                this.bindings = a(),
                this.hoverable = a(),
                this.focusable = a(),
                d !== this && (a.data(d, this.widgetFullName, this), this._on(!0, this.element, {
                    "remove": function (a) {
                        a.target === d && this.destroy()
                    }
                }), this.document = a(d.style ? d.ownerDocument : d.document || d), this.window = a(this.document[0].defaultView || this.document[0].parentWindow)),
                this._create(),
                this._trigger("create", null, this._getCreateEventData()),
                this._init()
            },
            "_getCreateOptions": a.noop,
            "_getCreateEventData": a.noop,
            "_create": a.noop,
            "_init": a.noop,
            "destroy": function () {
                this._destroy(),
                this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(a.camelCase(this.widgetFullName)),
                this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"),
                this.bindings.unbind(this.eventNamespace),
                this.hoverable.removeClass("ui-state-hover"),
                this.focusable.removeClass("ui-state-focus")
            },
            "_destroy": a.noop,
            "widget": function () {
                return this.element
            },
            "option": function (c, d) {
                var e, f, g, h = c;
                if (0 === arguments.length) return a.widget.extend({}, this.options);
                if ("string" == typeof c) if (h = {}, e = c.split("."), c = e.shift(), e.length) {
                    for (f = h[c] = a.widget.extend({}, this.options[c]), g = 0; g < e.length - 1; g++) f[e[g]] = f[e[g]] || {},
                    f = f[e[g]];
                    if (c = e.pop(), 1 === arguments.length) return f[c] === b ? null : f[c];
                    f[c] = d
                } else {
                    if (1 === arguments.length) return this.options[c] === b ? null : this.options[c];
                    h[c] = d
                }
                return this._setOptions(h),
                this
            },
            "_setOptions": function (a) {
                var b;
                for (b in a) this._setOption(b, a[b]);
                return this
            },
            "_setOption": function (a, b) {
                return this.options[a] = b,
                "disabled" === a && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !! b).attr("aria-disabled", b), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")),
                this
            },
            "enable": function () {
                return this._setOption("disabled", !1)
            },
            "disable": function () {
                return this._setOption("disabled", !0)
            },
            "_on": function (b, c, d) {
                var e, f = this;
                "boolean" != typeof b && (d = c, c = b, b = !1),
                d ? (c = e = a(c), this.bindings = this.bindings.add(c)) : (d = c, c = this.element, e = this.widget()),
                a.each(d, function (d, g) {
                    function h() {
                        return b || f.options.disabled !== !0 && !a(this).hasClass("ui-state-disabled") ? ("string" == typeof g ? f[g] : g).apply(f, arguments) : void 0
                    }
                    "string" != typeof g && (h.guid = g.guid = g.guid || h.guid || a.guid++);
                    var i = d.match(/^(\w+)\s*(.*)$/),
                        j = i[1] + f.eventNamespace,
                        k = i[2];
                    k ? e.delegate(k, j, h) : c.bind(j, h)
                })
            },
            "_off": function (a, b) {
                b = (b || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace,
                a.unbind(b).undelegate(b)
            },
            "_delay": function (a, b) {
                function c() {
                    return ("string" == typeof a ? d[a] : a).apply(d, arguments)
                }
                var d = this;
                return setTimeout(c, b || 0)
            },
            "_hoverable": function (b) {
                this.hoverable = this.hoverable.add(b),
                this._on(b, {
                    "mouseenter": function (b) {
                        a(b.currentTarget).addClass("ui-state-hover")
                    },
                    "mouseleave": function (b) {
                        a(b.currentTarget).removeClass("ui-state-hover")
                    }
                })
            },
            "_focusable": function (b) {
                this.focusable = this.focusable.add(b),
                this._on(b, {
                    "focusin": function (b) {
                        a(b.currentTarget).addClass("ui-state-focus")
                    },
                    "focusout": function (b) {
                        a(b.currentTarget).removeClass("ui-state-focus")
                    }
                })
            },
            "_trigger": function (b, c, d) {
                var e, f, g = this.options[b];
                if (d = d || {}, c = a.Event(c), c.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase(), c.target = this.element[0], f = c.originalEvent) for (e in f) e in c || (c[e] = f[e]);
                return this.element.trigger(c, d),
                !(a.isFunction(g) && g.apply(this.element[0], [c].concat(d)) === !1 || c.isDefaultPrevented())
            }
        },
    a.each({
            "show": "fadeIn",
            "hide": "fadeOut"
        }, function (b, c) {
            a.Widget.prototype["_" + b] = function (d, e, f) {
                "string" == typeof e && (e = {
                    "effect": e
                });
                var g, h = e ? e === !0 || "number" == typeof e ? c : e.effect || c : b;
                e = e || {},
                "number" == typeof e && (e = {
                    "duration": e
                }),
                g = !a.isEmptyObject(e),
                e.complete = f,
                e.delay && d.delay(e.delay),
                g && a.effects && a.effects.effect[h] ? d[b](e) : h !== b && d[h] ? d[h](e.duration, e.easing, f) : d.queue(function (c) {
                    a(this)[b](),
                    f && f.call(d[0]),
                    c()
                })
            }
        })
}(jQuery),





function (a, b) {
    function c(a, b, c) {
        return [parseFloat(a[0]) * (n.test(a[0]) ? b / 100 : 1), parseFloat(a[1]) * (n.test(a[1]) ? c / 100 : 1)]
    }
    function d(b, c) {
        return parseInt(a.css(b, c), 10) || 0
    }
    function e(b) {
        var c = b[0];
        return 9 === c.nodeType ? {
            "width": b.width(),
            "height": b.height(),
            "offset": {
                "top": 0,
                "left": 0
            }
        } : a.isWindow(c) ? {
            "width": b.width(),
            "height": b.height(),
            "offset": {
                "top": b.scrollTop(),
                "left": b.scrollLeft()
            }
        } : c.preventDefault ? {
            "width": 0,
            "height": 0,
            "offset": {
                "top": c.pageY,
                "left": c.pageX
            }
        } : {
            "width": b.outerWidth(),
            "height": b.outerHeight(),
            "offset": b.offset()
        }
    }
    a.ui = a.ui || {};
    var f, g = Math.max,
        h = Math.abs,
        i = Math.round,
        j = /left|center|right/,
        k = /top|center|bottom/,
        l = /[\+\-]\d+(\.[\d]+)?%?/,
        m = /^\w+/,
        n = /%$/,
        o = a.fn.position;
    a.position = {
            "scrollbarWidth": function () {
                if (f !== b) return f;
                var c, d, e = a("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                    g = e.children()[0];
                return a("body").append(e),
                c = g.offsetWidth,
                e.css("overflow", "scroll"),
                d = g.offsetWidth,
                c === d && (d = e[0].clientWidth),
                e.remove(),
                f = c - d
            },
            "getScrollInfo": function (b) {
                var c = b.isWindow || b.isDocument ? "" : b.element.css("overflow-x"),
                    d = b.isWindow || b.isDocument ? "" : b.element.css("overflow-y"),
                    e = "scroll" === c || "auto" === c && b.width < b.element[0].scrollWidth,
                    f = "scroll" === d || "" === d && b.height < b.element[0].scrollHeight;
                return {
                        "width": f ? a.position.scrollbarWidth() : 0,
                        "height": e ? a.position.scrollbarWidth() : 0
                    }
            },
            "getWithinInfo": function (b) {
                var c = a(b || window),
                    d = a.isWindow(c[0]),
                    e = !! c[0] && 9 === c[0].nodeType;
                return {
                        "element": c,
                        "isWindow": d,
                        "isDocument": e,
                        "offset": c.offset() || {
                            "left": 0,
                            "top": 0
                        },
                        "scrollLeft": c.scrollLeft(),
                        "scrollTop": c.scrollTop(),
                        "width": d ? c.width() : c.outerWidth(),
                        "height": d ? c.height() : c.outerHeight()
                    }
            }
        },
    a.fn.position = function (b) {
            if (!b || !b.of) return o.apply(this, arguments);
            b = a.extend({}, b);
            var f, n, p, q, r, s, t = a(b.of),
                u = a.position.getWithinInfo(b.within),
                v = a.position.getScrollInfo(u),
                w = (b.collision || "flip").split(" "),
                x = {};
            return s = e(t),
            t[0].preventDefault && (b.at = "left top"),
            n = s.width,
            p = s.height,
            q = s.offset,
            r = a.extend({}, q),
            a.each(["my", "at"], function () {
                    var a, c, d = (b[this] || "").split(" ");
                    1 === d.length && (d = j.test(d[0]) ? d.concat(["center"]) : k.test(d[0]) ? ["center"].concat(d) : ["center", "center"]),
                    d[0] = j.test(d[0]) ? d[0] : "center",
                    d[1] = k.test(d[1]) ? d[1] : "center",
                    a = l.exec(d[0]),
                    c = l.exec(d[1]),
                    x[this] = [a ? a[0] : 0, c ? c[0] : 0],
                    b[this] = [m.exec(d[0])[0], m.exec(d[1])[0]]
                }),
            1 === w.length && (w[1] = w[0]),
            "right" === b.at[0] ? r.left += n : "center" === b.at[0] && (r.left += n / 2),
            "bottom" === b.at[1] ? r.top += p : "center" === b.at[1] && (r.top += p / 2),
            f = c(x.at, n, p),
            r.left += f[0],
            r.top += f[1],
            this.each(function () {
                    var e, j, k = a(this),
                        l = k.outerWidth(),
                        m = k.outerHeight(),
                        o = d(this, "marginLeft"),
                        s = d(this, "marginTop"),
                        y = l + o + d(this, "marginRight") + v.width,
                        z = m + s + d(this, "marginBottom") + v.height,
                        A = a.extend({}, r),
                        B = c(x.my, k.outerWidth(), k.outerHeight());
                    "right" === b.my[0] ? A.left -= l : "center" === b.my[0] && (A.left -= l / 2),
                    "bottom" === b.my[1] ? A.top -= m : "center" === b.my[1] && (A.top -= m / 2),
                    A.left += B[0],
                    A.top += B[1],
                    a.support.offsetFractions || (A.left = i(A.left), A.top = i(A.top)),
                    e = {
                            "marginLeft": o,
                            "marginTop": s
                        },
                    a.each(["left", "top"], function (c, d) {
                            a.ui.position[w[c]] && a.ui.position[w[c]][d](A, {
                                "targetWidth": n,
                                "targetHeight": p,
                                "elemWidth": l,
                                "elemHeight": m,
                                "collisionPosition": e,
                                "collisionWidth": y,
                                "collisionHeight": z,
                                "offset": [f[0] + B[0], f[1] + B[1]],
                                "my": b.my,
                                "at": b.at,
                                "within": u,
                                "elem": k
                            })
                        }),
                    b.using && (j = function (a) {
                            var c = q.left - A.left,
                                d = c + n - l,
                                e = q.top - A.top,
                                f = e + p - m,
                                i = {
                                    "target": {
                                        "element": t,
                                        "left": q.left,
                                        "top": q.top,
                                        "width": n,
                                        "height": p
                                    },
                                    "element": {
                                        "element": k,
                                        "left": A.left,
                                        "top": A.top,
                                        "width": l,
                                        "height": m
                                    },
                                    "horizontal": 0 > d ? "left" : c > 0 ? "right" : "center",
                                    "vertical": 0 > f ? "top" : e > 0 ? "bottom" : "middle"
                                };
                            l > n && h(c + d) < n && (i.horizontal = "center"),
                            m > p && h(e + f) < p && (i.vertical = "middle"),
                            i.important = g(h(c), h(d)) > g(h(e), h(f)) ? "horizontal" : "vertical",
                            b.using.call(this, a, i)
                        }),
                    k.offset(a.extend(A, {
                            "using": j
                        }))
                })
        },
    a.ui.position = {
            "fit": {
                "left": function (a, b) {
                    var c, d = b.within,
                        e = d.isWindow ? d.scrollLeft : d.offset.left,
                        f = d.width,
                        h = a.left - b.collisionPosition.marginLeft,
                        i = e - h,
                        j = h + b.collisionWidth - f - e;
                    b.collisionWidth > f ? i > 0 && 0 >= j ? (c = a.left + i + b.collisionWidth - f - e, a.left += i - c) : a.left = j > 0 && 0 >= i ? e : i > j ? e + f - b.collisionWidth : e : i > 0 ? a.left += i : j > 0 ? a.left -= j : a.left = g(a.left - h, a.left)
                },
                "top": function (a, b) {
                    var c, d = b.within,
                        e = d.isWindow ? d.scrollTop : d.offset.top,
                        f = b.within.height,
                        h = a.top - b.collisionPosition.marginTop,
                        i = e - h,
                        j = h + b.collisionHeight - f - e;
                    b.collisionHeight > f ? i > 0 && 0 >= j ? (c = a.top + i + b.collisionHeight - f - e, a.top += i - c) : a.top = j > 0 && 0 >= i ? e : i > j ? e + f - b.collisionHeight : e : i > 0 ? a.top += i : j > 0 ? a.top -= j : a.top = g(a.top - h, a.top)
                }
            },
            "flip": {
                "left": function (a, b) {
                    var c, d, e = b.within,
                        f = e.offset.left + e.scrollLeft,
                        g = e.width,
                        i = e.isWindow ? e.scrollLeft : e.offset.left,
                        j = a.left - b.collisionPosition.marginLeft,
                        k = j - i,
                        l = j + b.collisionWidth - g - i,
                        m = "left" === b.my[0] ? -b.elemWidth : "right" === b.my[0] ? b.elemWidth : 0,
                        n = "left" === b.at[0] ? b.targetWidth : "right" === b.at[0] ? -b.targetWidth : 0,
                        o = -2 * b.offset[0];
                    0 > k ? (c = a.left + m + n + o + b.collisionWidth - g - f, (0 > c || c < h(k)) && (a.left += m + n + o)) : l > 0 && (d = a.left - b.collisionPosition.marginLeft + m + n + o - i, (d > 0 || h(d) < l) && (a.left += m + n + o))
                },
                "top": function (a, b) {
                    var c, d, e = b.within,
                        f = e.offset.top + e.scrollTop,
                        g = e.height,
                        i = e.isWindow ? e.scrollTop : e.offset.top,
                        j = a.top - b.collisionPosition.marginTop,
                        k = j - i,
                        l = j + b.collisionHeight - g - i,
                        m = "top" === b.my[1],
                        n = m ? -b.elemHeight : "bottom" === b.my[1] ? b.elemHeight : 0,
                        o = "top" === b.at[1] ? b.targetHeight : "bottom" === b.at[1] ? -b.targetHeight : 0,
                        p = -2 * b.offset[1];
                    0 > k ? (d = a.top + n + o + p + b.collisionHeight - g - f, a.top + n + o + p > k && (0 > d || d < h(k)) && (a.top += n + o + p)) : l > 0 && (c = a.top - b.collisionPosition.marginTop + n + o + p - i, a.top + n + o + p > l && (c > 0 || h(c) < l) && (a.top += n + o + p))
                }
            },
            "flipfit": {
                "left": function () {
                    a.ui.position.flip.left.apply(this, arguments),
                    a.ui.position.fit.left.apply(this, arguments)
                },
                "top": function () {
                    a.ui.position.flip.top.apply(this, arguments),
                    a.ui.position.fit.top.apply(this, arguments)
                }
            }
        },


    function () {
            var b, c, d, e, f, g = document.getElementsByTagName("body")[0],
                h = document.createElement("div");
            b = document.createElement(g ? "div" : "body"),
            d = {
                    "visibility": "hidden",
                    "width": 0,
                    "height": 0,
                    "border": 0,
                    "margin": 0,
                    "background": "none"
                },
            g && a.extend(d, {
                    "position": "absolute",
                    "left": "-1000px",
                    "top": "-1000px"
                });
            for (f in d) b.style[f] = d[f];
            b.appendChild(h),
            c = g || document.documentElement,
            c.insertBefore(b, c.firstChild),
            h.style.cssText = "position: absolute; left: 10.7432222px;",
            e = a(h).offset().left,
            a.support.offsetFractions = e > 10 && 11 > e,
            b.innerHTML = "",
            c.removeChild(b)
        }()
}(jQuery),














function (a) {
    "use strict";
    var b = {},
        c = Math.max,
        d = Math.min;
    b.c = {},
    b.c.d = a(document),
    b.c.t = function (a) {
            return a.originalEvent.touches.length - 1
        },
    b.o = function () {
            var c = this;
            this.o = null,
            this.$ = null,
            this.i = null,
            this.g = null,
            this.v = null,
            this.cv = null,
            this.x = 0,
            this.y = 0,
            this.w = 0,
            this.h = 0,
            this.$c = null,
            this.c = null,
            this.t = 0,
            this.isInit = !1,
            this.fgColor = null,
            this.pColor = null,
            this.dH = null,
            this.cH = null,
            this.eH = null,
            this.rH = null,
            this.scale = 1,
            this.relative = !1,
            this.relativeWidth = !1,
            this.relativeHeight = !1,
            this.$div = null,
            this.run = function () {
                var b = function (a, b) {
                    var d;
                    for (d in b) c.o[d] = b[d];
                    c._carve().init(),
                    c._configure()._draw()
                };
                if (!this.$.data("kontroled")) {
                    if (this.$.data("kontroled", !0), this.extend(), this.o = a.extend({
                        "min": void 0 !== this.$.data("min") ? this.$.data("min") : 0,
                        "max": void 0 !== this.$.data("max") ? this.$.data("max") : 100,
                        "stopper": !0,
                        "readOnly": this.$.data("readonly") || "readonly" === this.$.attr("readonly"),
                        "cursor": this.$.data("cursor") === !0 && 30 || this.$.data("cursor") || 0,
                        "thickness": this.$.data("thickness") && Math.max(Math.min(this.$.data("thickness"), 1), .01) || .35,
                        "lineCap": this.$.data("linecap") || "butt",
                        "width": this.$.data("width") || 200,
                        "height": this.$.data("height") || 200,
                        "displayInput": null == this.$.data("displayinput") || this.$.data("displayinput"),
                        "displayPrevious": this.$.data("displayprevious"),
                        "fgColor": this.$.data("fgcolor") || "#87CEEB",
                        "inputColor": this.$.data("inputcolor"),
                        "font": this.$.data("font") || "Arial",
                        "fontWeight": this.$.data("font-weight") || "bold",
                        "inline": !1,
                        "step": this.$.data("step") || 1,
                        "draw": null,
                        "change": null,
                        "cancel": null,
                        "release": null,
                        "format": function (a) {
                            return a
                        },
                        "parse": function (a) {
                            return parseFloat(a)
                        }
                    }, this.o), this.o.inputColor || (this.o.inputColor = this.o.fgColor), this.$.is("fieldset") ? (this.v = {}, this.i = this.$.find("input"), this.i.each(function (b) {
                        var d = a(this);
                        c.i[b] = d,
                        c.v[b] = c.o.parse(d.val()),
                        d.bind("change blur", function () {
                            var a = {};
                            a[b] = d.val(),
                            c.val(a)
                        })
                    }), this.$.find("legend").remove()) : (this.i = this.$, this.v = this.o.parse(this.$.val()), "" === this.v && (this.v = this.o.min), this.$.bind("change blur", function () {
                        c.val(c._validate(c.o.parse(c.$.val())))
                    })), !this.o.displayInput && this.$.hide(), this.$c = a(document.createElement("canvas")).attr({
                        "width": this.o.width,
                        "height": this.o.height
                    }), this.$div = a('<div style="' + (this.o.inline ? "display:inline;" : "") + "width:" + this.o.width + "px;height:" + this.o.height + 'px;"></div>'), this.$.wrap(this.$div).before(this.$c), this.$div = this.$.parent(), "undefined" != typeof G_vmlCanvasManager && G_vmlCanvasManager.initElement(this.$c[0]), this.c = this.$c[0].getContext ? this.$c[0].getContext("2d") : null, !this.c) throw {
                        "name": "CanvasNotSupportedException",
                        "message": "Canvas not supported. Please use excanvas on IE8.0.",
                        "toString": function () {
                            return this.name + ": " + this.message
                        }
                    };
                    return this.scale = (window.devicePixelRatio || 1) / (this.c.webkitBackingStorePixelRatio || this.c.mozBackingStorePixelRatio || this.c.msBackingStorePixelRatio || this.c.oBackingStorePixelRatio || this.c.backingStorePixelRatio || 1),
                    this.relativeWidth = this.o.width % 1 !== 0 && this.o.width.indexOf("%"),
                    this.relativeHeight = this.o.height % 1 !== 0 && this.o.height.indexOf("%"),
                    this.relative = this.relativeWidth || this.relativeHeight,
                    this._carve(),
                    this.v instanceof Object ? (this.cv = {}, this.copy(this.v, this.cv)) : this.cv = this.v,
                    this.$.bind("configure", b).parent().bind("configure", b),
                    this._listen()._configure()._xy().init(),
                    this.isInit = !0,
                    this.$.val(this.o.format(this.v)),
                    this._draw(),
                    this
                }
            },
            this._carve = function () {
                if (this.relative) {
                    var a = this.relativeWidth ? this.$div.parent().width() * parseInt(this.o.width) / 100 : this.$div.parent().width(),
                        b = this.relativeHeight ? this.$div.parent().height() * parseInt(this.o.height) / 100 : this.$div.parent().height();
                    this.w = this.h = Math.min(a, b)
                } else this.w = this.o.width,
                this.h = this.o.height;
                return this.$div.css({
                    "width": this.w + "px",
                    "height": this.h + "px"
                }),
                this.$c.attr({
                    "width": this.w,
                    "height": this.h
                }),
                1 !== this.scale && (this.$c[0].width = this.$c[0].width * this.scale, this.$c[0].height = this.$c[0].height * this.scale, this.$c.width(this.w), this.$c.height(this.h)),
                this
            },
            this._draw = function () {
                var a = !0;
                c.g = c.c,
                c.clear(),
                c.dH && (a = c.dH()),
                a !== !1 && c.draw()
            },
            this._touch = function (a) {
                var d = function (a) {
                    var b = c.xy2val(a.originalEvent.touches[c.t].pageX, a.originalEvent.touches[c.t].pageY);
                    b != c.cv && (c.cH && c.cH(b) === !1 || (c.change(c._validate(b)), c._draw()))
                };
                return this.t = b.c.t(a),
                d(a),
                b.c.d.bind("touchmove.k", d).bind("touchend.k", function () {
                    b.c.d.unbind("touchmove.k touchend.k"),
                    c.val(c.cv)
                }),
                this
            },
            this._mouse = function (a) {
                var d = function (a) {
                    var b = c.xy2val(a.pageX, a.pageY);
                    b != c.cv && (c.cH && c.cH(b) === !1 || (c.change(c._validate(b)), c._draw()))
                };
                return d(a),
                b.c.d.bind("mousemove.k", d).bind("keyup.k", function (a) {
                    if (27 === a.keyCode) {
                        if (b.c.d.unbind("mouseup.k mousemove.k keyup.k"), c.eH && c.eH() === !1) return;
                        c.cancel()
                    }
                }).bind("mouseup.k", function () {
                    b.c.d.unbind("mousemove.k mouseup.k keyup.k"),
                    c.val(c.cv)
                }),
                this
            },
            this._xy = function () {
                var a = this.$c.offset();
                return this.x = a.left,
                this.y = a.top,
                this
            },
            this._listen = function () {
                return this.o.readOnly ? this.$.attr("readonly", "readonly") : (this.$c.bind("mousedown", function (a) {
                    a.preventDefault(),
                    c._xy()._mouse(a)
                }).bind("touchstart", function (a) {
                    a.preventDefault(),
                    c._xy()._touch(a)
                }), this.listen()),
                this.relative && a(window).resize(function () {
                    c._carve().init(),
                    c._draw()
                }),
                this
            },
            this._configure = function () {
                return this.o.draw && (this.dH = this.o.draw),
                this.o.change && (this.cH = this.o.change),
                this.o.cancel && (this.eH = this.o.cancel),
                this.o.release && (this.rH = this.o.release),
                this.o.displayPrevious ? (this.pColor = this.h2rgba(this.o.fgColor, "0.4"), this.fgColor = this.h2rgba(this.o.fgColor, "0.6")) : this.fgColor = this.o.fgColor,
                this
            },
            this._clear = function () {
                this.$c[0].width = this.$c[0].width
            },
            this._validate = function (a) {
                return~~ ((0 > a ? -.5 : .5) + a / this.o.step) * this.o.step
            },
            this.listen = function () {},
            this.extend = function () {},
            this.init = function () {},
            this.change = function () {},
            this.val = function () {},
            this.xy2val = function () {},
            this.draw = function () {},
            this.clear = function () {
                this._clear()
            },
            this.h2rgba = function (a, b) {
                var c;
                return a = a.substring(1, 7),
                c = [parseInt(a.substring(0, 2), 16), parseInt(a.substring(2, 4), 16), parseInt(a.substring(4, 6), 16)],
                "rgba(" + c[0] + "," + c[1] + "," + c[2] + "," + b + ")"
            },
            this.copy = function (a, b) {
                for (var c in a) b[c] = a[c]
            }
        },
    b.Dial = function () {
            b.o.call(this),
            this.startAngle = null,
            this.xy = null,
            this.radius = null,
            this.lineWidth = null,
            this.cursorExt = null,
            this.w2 = null,
            this.PI2 = 2 * Math.PI,
            this.extend = function () {
                this.o = a.extend({
                    "bgColor": this.$.data("bgcolor") || "#EEEEEE",
                    "angleOffset": this.$.data("angleoffset") || 0,
                    "angleArc": this.$.data("anglearc") || 360,
                    "inline": !0
                }, this.o)
            },
            this.val = function (a, b) {
                return null == a ? this.v : (a = this.o.parse(a), void(b !== !1 && a != this.v && this.rH && this.rH(a) === !1 || (this.cv = this.o.stopper ? c(d(a, this.o.max), this.o.min) : a, this.v = this.cv, this.$.val(this.o.format(this.v)), this._draw())))
            },
            this.xy2val = function (a, b) {
                var e, f;
                return e = Math.atan2(a - (this.x + this.w2), -(b - this.y - this.w2)) - this.angleOffset,
                this.angleArc != this.PI2 && 0 > e && e > -.5 ? e = 0 : 0 > e && (e += this.PI2),
                f = ~~ (.5 + e * (this.o.max - this.o.min) / this.angleArc) + this.o.min,
                this.o.stopper && (f = c(d(f, this.o.max), this.o.min)),
                f
            },
            this.listen = function () {
                var b, e, f, g, h = this,
                    i = function (a) {
                        a.preventDefault();
                        var f = a.originalEvent,
                            g = f.detail || f.wheelDeltaX,
                            i = f.detail || f.wheelDeltaY,
                            j = h._validate(h.o.parse(h.$.val())) + (g > 0 || i > 0 ? h.o.step : 0 > g || 0 > i ? -h.o.step : 0);
                        j = c(d(j, h.o.max), h.o.min),
                        h.val(j, !1),
                        h.rH && (clearTimeout(b), b = setTimeout(function () {
                                h.rH(j),
                                b = null
                            }, 100), e || (e = setTimeout(function () {
                                b && h.rH(j),
                                e = null
                            }, 200)))
                    },
                    j = 1,
                    k = {
                        "37": -h.o.step,
                        "38": h.o.step,
                        "39": h.o.step,
                        "40": -h.o.step
                    };
                this.$.bind("keydown", function (b) {
                        var e = b.keyCode;
                        if (e >= 96 && 105 >= e && (e = b.keyCode = e - 48), f = parseInt(String.fromCharCode(e)), isNaN(f) && (13 !== e && 8 !== e && 9 !== e && 189 !== e && (190 !== e || h.$.val().match(/\./)) && b.preventDefault(), a.inArray(e, [37, 38, 39, 40]) > -1)) {
                            b.preventDefault();
                            var i = h.o.parse(h.$.val()) + k[e] * j;
                            h.o.stopper && (i = c(d(i, h.o.max), h.o.min)),
                            h.change(i),
                            h._draw(),
                            g = window.setTimeout(function () {
                                j *= 2
                            }, 30)
                        }
                    }).bind("keyup", function () {
                        isNaN(f) ? g && (window.clearTimeout(g), g = null, j = 1, h.val(h.$.val())) : h.$.val() > h.o.max && h.$.val(h.o.max) || h.$.val() < h.o.min && h.$.val(h.o.min)
                    }),
                this.$c.bind("mousewheel DOMMouseScroll", i),
                this.$.bind("mousewheel DOMMouseScroll", i)
            },
            this.init = function () {
                (this.v < this.o.min || this.v > this.o.max) && (this.v = this.o.min),
                this.$.val(this.v),
                this.w2 = this.w / 2,
                this.cursorExt = this.o.cursor / 100,
                this.xy = this.w2 * this.scale,
                this.lineWidth = this.xy * this.o.thickness,
                this.lineCap = this.o.lineCap,
                this.radius = this.xy - this.lineWidth / 2,
                this.o.angleOffset && (this.o.angleOffset = isNaN(this.o.angleOffset) ? 0 : this.o.angleOffset),
                this.o.angleArc && (this.o.angleArc = isNaN(this.o.angleArc) ? this.PI2 : this.o.angleArc),
                this.angleOffset = this.o.angleOffset * Math.PI / 180,
                this.angleArc = this.o.angleArc * Math.PI / 180,
                this.startAngle = 1.5 * Math.PI + this.angleOffset,
                this.endAngle = 1.5 * Math.PI + this.angleOffset + this.angleArc;
                var a = c(String(Math.abs(this.o.max)).length, String(Math.abs(this.o.min)).length, 2) + 2;
                this.o.displayInput && this.i.css({
                    "width": (this.w / 2 + 4 >> 0) + "px",
                    "height": (this.w / 3 >> 0) + "px",
                    "position": "absolute",
                    "vertical-align": "middle",
                    "margin-top": (this.w / 3 >> 0) + "px",
                    "margin-left": "-" + (3 * this.w / 4 + 2 >> 0) + "px",
                    "border": 0,
                    "background": "none",
                    "font": this.o.fontWeight + " " + (this.w / a >> 0) + "px " + this.o.font,
                    "text-align": "center",
                    "color": this.o.inputColor || this.o.fgColor,
                    "padding": "0px",
                    "-webkit-appearance": "none"
                }) || this.i.css({
                    "width": "0px",
                    "visibility": "hidden"
                })
            },
            this.change = function (a) {
                this.cv = a,
                this.$.val(this.o.format(a))
            },
            this.angle = function (a) {
                return (a - this.o.min) * this.angleArc / (this.o.max - this.o.min)
            },
            this.draw = function () {
                var a, b, c = this.g,
                    d = this.angle(this.cv),
                    e = this.startAngle,
                    f = e + d,
                    g = 1;
                c.lineWidth = this.lineWidth,
                c.lineCap = this.lineCap,
                this.o.cursor && (e = f - this.cursorExt) && (f += this.cursorExt),
                c.beginPath(),
                c.strokeStyle = this.o.bgColor,
                c.arc(this.xy, this.xy, this.radius, this.endAngle - 1e-5, this.startAngle + 1e-5, !0),
                c.stroke(),
                this.o.displayPrevious && (b = this.startAngle + this.angle(this.v), a = this.startAngle, this.o.cursor && (a = b - this.cursorExt) && (b += this.cursorExt), c.beginPath(), c.strokeStyle = this.pColor, c.arc(this.xy, this.xy, this.radius, a - 1e-5, b + 1e-5, !1), c.stroke(), g = this.cv == this.v),
                c.beginPath(),
                c.strokeStyle = g ? this.o.fgColor : this.fgColor,
                c.arc(this.xy, this.xy, this.radius, e - 1e-5, f + 1e-5, !1),
                c.stroke()
            },
            this.cancel = function () {
                this.val(this.v)
            }
        },
    a.fn.dial = a.fn.knob = function (c) {
            return this.each(function () {
                var d = new b.Dial;
                d.o = c,
                d.$ = a(this),
                d.run()
            }).parent()
        }
}(jQuery),


function (a, b, c) {
    !
    function (a) {
        "function" == typeof define && define.amd ? define(["jquery"], a) : jQuery && !jQuery.fn.sparkline && a(jQuery)
    }(function (d) {
        "use strict";
        var e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K = {},
            L = 0;
        e = function () {
                return {
                    "common": {
                        "type": "line",
                        "lineColor": "#00f",
                        "fillColor": "#cdf",
                        "defaultPixelsPerValue": 3,
                        "width": "auto",
                        "height": "auto",
                        "composite": !1,
                        "tagValuesAttribute": "values",
                        "tagOptionsPrefix": "spark",
                        "enableTagOptions": !1,
                        "enableHighlight": !0,
                        "highlightLighten": 1.4,
                        "tooltipSkipNull": !0,
                        "tooltipPrefix": "",
                        "tooltipSuffix": "",
                        "disableHiddenCheck": !1,
                        "numberFormatter": !1,
                        "numberDigitGroupCount": 3,
                        "numberDigitGroupSep": ",",
                        "numberDecimalMark": ".",
                        "disableTooltips": !1,
                        "disableInteraction": !1
                    },
                    "line": {
                        "spotColor": "#f80",
                        "highlightSpotColor": "#5f5",
                        "highlightLineColor": "#f22",
                        "spotRadius": 1.5,
                        "minSpotColor": "#f80",
                        "maxSpotColor": "#f80",
                        "lineWidth": 1,
                        "normalRangeMin": c,
                        "normalRangeMax": c,
                        "normalRangeColor": "#ccc",
                        "drawNormalOnTop": !1,
                        "chartRangeMin": c,
                        "chartRangeMax": c,
                        "chartRangeMinX": c,
                        "chartRangeMaxX": c,
                        "tooltipFormat": new g('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{y}}{{suffix}}')
                    },
                    "bar": {
                        "barColor": "#3366cc",
                        "negBarColor": "#f44",
                        "stackedBarColor": ["#3366cc", "#dc3912", "#ff9900", "#109618", "#66aa00", "#dd4477", "#0099c6", "#990099"],
                        "zeroColor": c,
                        "nullColor": c,
                        "zeroAxis": !0,
                        "barWidth": 4,
                        "barSpacing": 1,
                        "chartRangeMax": c,
                        "chartRangeMin": c,
                        "chartRangeClip": !1,
                        "colorMap": c,
                        "tooltipFormat": new g('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{value}}{{suffix}}')
                    },
                    "tristate": {
                        "barWidth": 4,
                        "barSpacing": 1,
                        "posBarColor": "#6f6",
                        "negBarColor": "#f44",
                        "zeroBarColor": "#999",
                        "colorMap": {},
                        "tooltipFormat": new g('<span style="color: {{color}}">&#9679;</span> {{value:map}}'),
                        "tooltipValueLookups": {
                            "map": {
                                "-1": "Loss",
                                "0": "Draw",
                                "1": "Win"
                            }
                        }
                    },
                    "discrete": {
                        "lineHeight": "auto",
                        "thresholdColor": c,
                        "thresholdValue": 0,
                        "chartRangeMax": c,
                        "chartRangeMin": c,
                        "chartRangeClip": !1,
                        "tooltipFormat": new g("{{prefix}}{{value}}{{suffix}}")
                    },
                    "bullet": {
                        "targetColor": "#f33",
                        "targetWidth": 3,
                        "performanceColor": "#33f",
                        "rangeColors": ["#d3dafe", "#a8b6ff", "#7f94ff"],
                        "base": c,
                        "tooltipFormat": new g("{{fieldkey:fields}} - {{value}}"),
                        "tooltipValueLookups": {
                            "fields": {
                                "r": "Range",
                                "p": "Performance",
                                "t": "Target"
                            }
                        }
                    },
                    "pie": {
                        "offset": 0,
                        "sliceColors": ["#3366cc", "#dc3912", "#ff9900", "#109618", "#66aa00", "#dd4477", "#0099c6", "#990099"],
                        "borderWidth": 0,
                        "borderColor": "#000",
                        "tooltipFormat": new g('<span style="color: {{color}}">&#9679;</span> {{value}} ({{percent.1}}%)')
                    },
                    "box": {
                        "raw": !1,
                        "boxLineColor": "#000",
                        "boxFillColor": "#cdf",
                        "whiskerColor": "#000",
                        "outlierLineColor": "#333",
                        "outlierFillColor": "#fff",
                        "medianColor": "#f00",
                        "showOutliers": !0,
                        "outlierIQR": 1.5,
                        "spotRadius": 1.5,
                        "target": c,
                        "targetColor": "#4a2",
                        "chartRangeMax": c,
                        "chartRangeMin": c,
                        "tooltipFormat": new g("{{field:fields}}: {{value}}"),
                        "tooltipFormatFieldlistKey": "field",
                        "tooltipValueLookups": {
                            "fields": {
                                "lq": "Lower Quartile",
                                "med": "Median",
                                "uq": "Upper Quartile",
                                "lo": "Left Outlier",
                                "ro": "Right Outlier",
                                "lw": "Left Whisker",
                                "rw": "Right Whisker"
                            }
                        }
                    }
                }
            },
        D = '.jqstooltip { position: absolute;left: 0px;top: 0px;visibility: hidden;background: rgb(0, 0, 0) transparent;background-color: rgba(0,0,0,0.6);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";color: white;font: 10px arial, san serif;text-align: left;white-space: nowrap;padding: 5px;border: 1px solid white;z-index: 10000;}.jqsfield { color: white;font: 10px arial, san serif;text-align: left;}',
        f = function () {
                var a, b;
                return a = function () {
                    this.init.apply(this, arguments)
                },
                arguments.length > 1 ? (arguments[0] ? (a.prototype = d.extend(new arguments[0], arguments[arguments.length - 1]), a._super = arguments[0].prototype) : a.prototype = arguments[arguments.length - 1], arguments.length > 2 && (b = Array.prototype.slice.call(arguments, 1, -1), b.unshift(a.prototype), d.extend.apply(d, b))) : a.prototype = arguments[0],
                a.prototype.cls = a,
                a
            },
        d.SPFormatClass = g = f({
                "fre": /\{\{([\w.]+?)(:(.+?))?\}\}/g,
                "precre": /(\w+)\.(\d+)/,
                "init": function (a, b) {
                    this.format = a,
                    this.fclass = b
                },
                "render": function (a, b, d) {
                    var e, f, g, h, i, j = this,
                        k = a;
                    return this.format.replace(this.fre, function () {
                            var a;
                            return f = arguments[1],
                            g = arguments[3],
                            e = j.precre.exec(f),
                            e ? (i = e[2], f = e[1]) : i = !1,
                            h = k[f],
                            h === c ? "" : g && b && b[g] ? (a = b[g], a.get ? b[g].get(h) || h : b[g][h] || h) : (m(h) && (h = d.get("numberFormatter") ? d.get("numberFormatter")(h) : r(h, i, d.get("numberDigitGroupCount"), d.get("numberDigitGroupSep"), d.get("numberDecimalMark"))), h)
                        })
                }
            }),
        d.spformat = function (a, b) {
                return new g(a, b)
            },
        h = function (a, b, c) {
                return b > a ? b : a > c ? c : a
            },
        i = function (a, c) {
                var d;
                return 2 === c ? (d = b.floor(a.length / 2), a.length % 2 ? a[d] : (a[d - 1] + a[d]) / 2) : a.length % 2 ? (d = (a.length * c + c) / 4, d % 1 ? (a[b.floor(d)] + a[b.floor(d) - 1]) / 2 : a[d - 1]) : (d = (a.length * c + 2) / 4, d % 1 ? (a[b.floor(d)] + a[b.floor(d) - 1]) / 2 : a[d - 1])
            },
        j = function (a) {
                var b;
                switch (a) {
                case "undefined":
                    a = c;
                    break;
                case "null":
                    a = null;
                    break;
                case "true":
                    a = !0;
                    break;
                case "false":
                    a = !1;
                    break;
                default:
                    b = parseFloat(a),
                    a == b && (a = b)
                }
                return a
            },
        k = function (a) {
                var b, c = [];
                for (b = a.length; b--;) c[b] = j(a[b]);
                return c
            },
        l = function (a, b) {
                var c, d, e = [];
                for (c = 0, d = a.length; d > c; c++) a[c] !== b && e.push(a[c]);
                return e
            },
        m = function (a) {
                return !isNaN(parseFloat(a)) && isFinite(a)
            },
        r = function (a, b, c, e, f) {
                var g, h;
                for (a = (b === !1 ? parseFloat(a).toString() : a.toFixed(b)).split(""), g = (g = d.inArray(".", a)) < 0 ? a.length : g, g < a.length && (a[g] = f), h = g - c; h > 0; h -= c) a.splice(h, 0, e);
                return a.join("")
            },
        n = function (a, b, c) {
                var d;
                for (d = b.length; d--;) if ((!c || null !== b[d]) && b[d] !== a) return !1;
                return !0
            },
        o = function (a) {
                var b, c = 0;
                for (b = a.length; b--;) c += "number" == typeof a[b] ? a[b] : 0;
                return c
            },
        q = function (a) {
                return d.isArray(a) ? a : [a]
            },
        p = function (b) {
                var c;
                try{a.createStyleSheet ? a.createStyleSheet().cssText = b : (c = a.createElement("style"), c.type = "text/css", a.getElementsByTagName("head")[0].appendChild(c), c["string" == typeof a.body.style.WebkitAppearance ? "innerText" : "innerHTML"] = b)
				}catch(e){}
            },
        d.fn.simpledraw = function (b, e, f, g) {
                var h, i;
                if (f && (h = this.data("_jqs_vcanvas"))) return h;
                if (d.fn.sparkline.canvas === !1) return !1;
                if (d.fn.sparkline.canvas === c) {
                    var j = a.createElement("canvas");
                    if (j.getContext && j.getContext("2d")) d.fn.sparkline.canvas = function (a, b, c, d) {
                        return new H(a, b, c, d)
                    };
                    else {
                        if (!a.namespaces || a.namespaces.v) return d.fn.sparkline.canvas = !1,
                        !1;
                        a.namespaces.add("v", "urn:schemas-microsoft-com:vml", "#default#VML"),
                        d.fn.sparkline.canvas = function (a, b, c) {
                            return new I(a, b, c)
                        }
                    }
                }
                return b === c && (b = d(this).innerWidth()),
                e === c && (e = d(this).innerHeight()),
                h = d.fn.sparkline.canvas(b, e, this, g),
                i = d(this).data("_jqs_mhandler"),
                i && i.registerCanvas(h),
                h
            },
        d.fn.cleardraw = function () {
                var a = this.data("_jqs_vcanvas");
                a && a.reset()
            },
        d.RangeMapClass = s = f({
                "init": function (a) {
                    var b, c, d = [];
                    for (b in a) a.hasOwnProperty(b) && "string" == typeof b && b.indexOf(":") > -1 && (c = b.split(":"), c[0] = 0 === c[0].length ? -1 / 0 : parseFloat(c[0]), c[1] = 0 === c[1].length ? 1 / 0 : parseFloat(c[1]), c[2] = a[b], d.push(c));
                    this.map = a,
                    this.rangelist = d || !1
                },
                "get": function (a) {
                    var b, d, e, f = this.rangelist;
                    if ((e = this.map[a]) !== c) return e;
                    if (f) for (b = f.length; b--;) if (d = f[b], d[0] <= a && d[1] >= a) return d[2];
                    return c
                }
            }),
        d.range_map = function (a) {
                return new s(a)
            },
        t = f({
                "init": function (a, b) {
                    var c = d(a);
                    this.$el = c,
                    this.options = b,
                    this.currentPageX = 0,
                    this.currentPageY = 0,
                    this.el = a,
                    this.splist = [],
                    this.tooltip = null,
                    this.over = !1,
                    this.displayTooltips = !b.get("disableTooltips"),
                    this.highlightEnabled = !b.get("disableHighlight")
                },
                "registerSparkline": function (a) {
                    this.splist.push(a),
                    this.over && this.updateDisplay()
                },
                "registerCanvas": function (a) {
                    var b = d(a.canvas);
                    this.canvas = a,
                    this.$canvas = b,
                    b.mouseenter(d.proxy(this.mouseenter, this)),
                    b.mouseleave(d.proxy(this.mouseleave, this)),
                    b.click(d.proxy(this.mouseclick, this))
                },
                "reset": function (a) {
                    this.splist = [],
                    this.tooltip && a && (this.tooltip.remove(), this.tooltip = c)
                },
                "mouseclick": function (a) {
                    var b = d.Event("sparklineClick");
                    b.originalEvent = a,
                    b.sparklines = this.splist,
                    this.$el.trigger(b)
                },
                "mouseenter": function (b) {
                    d(a.body).unbind("mousemove.jqs"),
                    d(a.body).bind("mousemove.jqs", d.proxy(this.mousemove, this)),
                    this.over = !0,
                    this.currentPageX = b.pageX,
                    this.currentPageY = b.pageY,
                    this.currentEl = b.target,
                    !this.tooltip && this.displayTooltips && (this.tooltip = new u(this.options), this.tooltip.updatePosition(b.pageX, b.pageY)),
                    this.updateDisplay()
                },
                "mouseleave": function () {
                    d(a.body).unbind("mousemove.jqs");
                    var b, c, e = this.splist,
                        f = e.length,
                        g = !1;
                    for (this.over = !1, this.currentEl = null, this.tooltip && (this.tooltip.remove(), this.tooltip = null), c = 0; f > c; c++) b = e[c],
                    b.clearRegionHighlight() && (g = !0);
                    g && this.canvas.render()
                },
                "mousemove": function (a) {
                    this.currentPageX = a.pageX,
                    this.currentPageY = a.pageY,
                    this.currentEl = a.target,
                    this.tooltip && this.tooltip.updatePosition(a.pageX, a.pageY),
                    this.updateDisplay()
                },
                "updateDisplay": function () {
                    var a, b, c, e, f, g = this.splist,
                        h = g.length,
                        i = !1,
                        j = this.$canvas.offset(),
                        k = this.currentPageX - j.left,
                        l = this.currentPageY - j.top;
                    if (this.over) {
                            for (c = 0; h > c; c++) b = g[c],
                            e = b.setRegionHighlight(this.currentEl, k, l),
                            e && (i = !0);
                            if (i) {
                                if (f = d.Event("sparklineRegionChange"), f.sparklines = this.splist, this.$el.trigger(f), this.tooltip) {
                                    for (a = "", c = 0; h > c; c++) b = g[c],
                                    a += b.getCurrentRegionTooltip();
                                    this.tooltip.setContent(a)
                                }
                                this.disableHighlight || this.canvas.render()
                            }
                            null === e && this.mouseleave()
                        }
                }
            }),
        u = f({
                "sizeStyle": "position: static !important;display: block !important;visibility: hidden !important;float: left !important;",
                "init": function (b) {
                    var c, e = b.get("tooltipClassname", "jqstooltip"),
                        f = this.sizeStyle;
                    this.container = b.get("tooltipContainer") || a.body,
                    this.tooltipOffsetX = b.get("tooltipOffsetX", 10),
                    this.tooltipOffsetY = b.get("tooltipOffsetY", 12),
                    d("#jqssizetip").remove(),
                    d("#jqstooltip").remove(),
                    this.sizetip = d("<div/>", {
                            "id": "jqssizetip",
                            "style": f,
                            "class": e
                        }),
                    this.tooltip = d("<div/>", {
                            "id": "jqstooltip",
                            "class": e
                        }).appendTo(this.container),
                    c = this.tooltip.offset(),
                    this.offsetLeft = c.left,
                    this.offsetTop = c.top,
                    this.hidden = !0,
                    d(window).unbind("resize.jqs scroll.jqs"),
                    d(window).bind("resize.jqs scroll.jqs", d.proxy(this.updateWindowDims, this)),
                    this.updateWindowDims()
                },
                "updateWindowDims": function () {
                    this.scrollTop = d(window).scrollTop(),
                    this.scrollLeft = d(window).scrollLeft(),
                    this.scrollRight = this.scrollLeft + d(window).width(),
                    this.updatePosition()
                },
                "getSize": function (a) {
                    this.sizetip.html(a).appendTo(this.container),
                    this.width = this.sizetip.width() + 1,
                    this.height = this.sizetip.height(),
                    this.sizetip.remove()
                },
                "setContent": function (a) {
                    return a ? (this.getSize(a), this.tooltip.html(a).css({
                        "width": this.width,
                        "height": this.height,
                        "visibility": "visible"
                    }), void(this.hidden && (this.hidden = !1, this.updatePosition()))) : (this.tooltip.css("visibility", "hidden"), void(this.hidden = !0))
                },
                "updatePosition": function (a, b) {
                    if (a === c) {
                        if (this.mousex === c) return;
                        a = this.mousex - this.offsetLeft,
                        b = this.mousey - this.offsetTop
                    } else this.mousex = a -= this.offsetLeft,
                    this.mousey = b -= this.offsetTop;
                    this.height && this.width && !this.hidden && (b -= this.height + this.tooltipOffsetY, a += this.tooltipOffsetX, b < this.scrollTop && (b = this.scrollTop), a < this.scrollLeft ? a = this.scrollLeft : a + this.width > this.scrollRight && (a = this.scrollRight - this.width), this.tooltip.css({
                        "left": a,
                        "top": b
                    }))
                },
                "remove": function () {
                    this.tooltip.remove(),
                    this.sizetip.remove(),
                    this.sizetip = this.tooltip = c,
                    d(window).unbind("resize.jqs scroll.jqs")
                }
            }),
        E = function () {
                p(D)
            },
        d(E),
        J = [],
        d.fn.sparkline = function (b, e) {
                return this.each(function () {
                    var f, g, h = new d.fn.sparkline.options(this, e),
                        i = d(this);
                    if (f = function () {
                            var e, f, g, j, k, l, m;
                            return "html" === b || b === c ? (m = this.getAttribute(h.get("tagValuesAttribute")), (m === c || null === m) && (m = i.html()), e = m.replace(/(^\s*<!--)|(-->\s*$)|\s+/g, "").split(",")) : e = b,
                            f = "auto" === h.get("width") ? e.length * h.get("defaultPixelsPerValue") : h.get("width"),
                            "auto" === h.get("height") ? h.get("composite") && d.data(this, "_jqs_vcanvas") || (j = a.createElement("span"), j.innerHTML = "a", i.html(j), g = d(j).innerHeight() || d(j).height(), d(j).remove(), j = null) : g = h.get("height"),
                            h.get("disableInteraction") ? k = !1 : (k = d.data(this, "_jqs_mhandler"), k ? h.get("composite") || k.reset() : (k = new t(this, h), d.data(this, "_jqs_mhandler", k))),
                            h.get("composite") && !d.data(this, "_jqs_vcanvas") ? void(d.data(this, "_jqs_errnotify") || (alert("Attempted to attach a composite sparkline to an element with no existing sparkline"), d.data(this, "_jqs_errnotify", !0))) : (l = new(d.fn.sparkline[h.get("type")])(this, e, h, f, g), l.render(), void(k && k.registerSparkline(l)))
                        }, d(this).html() && !h.get("disableHiddenCheck") && d(this).is(":hidden") || !d(this).parents("body").length) {
                            if (!h.get("composite") && d.data(this, "_jqs_pending")) for (g = J.length; g; g--) J[g - 1][0] == this && J.splice(g - 1, 1);
                            J.push([this, f]),
                            d.data(this, "_jqs_pending", !0)
                        } else f.call(this)
                })
            },
        d.fn.sparkline.defaults = e(),
        d.sparkline_display_visible = function () {
                var a, b, c, e = [];
                for (b = 0, c = J.length; c > b; b++) a = J[b][0],
                d(a).is(":visible") && !d(a).parents().is(":hidden") ? (J[b][1].call(a), d.data(J[b][0], "_jqs_pending", !1), e.push(b)) : d(a).closest("html").length || d.data(a, "_jqs_pending") || (d.data(J[b][0], "_jqs_pending", !1), e.push(b));
                for (b = e.length; b; b--) J.splice(e[b - 1], 1)
            },
        d.fn.sparkline.options = f({
                "init": function (a, b) {
                    var c, e, f, g;
                    this.userOptions = b = b || {},
                    this.tag = a,
                    this.tagValCache = {},
                    e = d.fn.sparkline.defaults,
                    f = e.common,
                    this.tagOptionsPrefix = b.enableTagOptions && (b.tagOptionsPrefix || f.tagOptionsPrefix),
                    g = this.getTagSetting("type"),
                    c = g === K ? e[b.type || f.type] : e[g],
                    this.mergedOptions = d.extend({}, f, c, b)
                },
                "getTagSetting": function (a) {
                    var b, d, e, f, g = this.tagOptionsPrefix;
                    if (g === !1 || g === c) return K;
                    if (this.tagValCache.hasOwnProperty(a)) b = this.tagValCache.key;
                    else {
                        if (b = this.tag.getAttribute(g + a), b === c || null === b) b = K;
                        else if ("[" === b.substr(0, 1)) for (b = b.substr(1, b.length - 2).split(","), d = b.length; d--;) b[d] = j(b[d].replace(/(^\s*)|(\s*$)/g, ""));
                        else if ("{" === b.substr(0, 1)) for (e = b.substr(1, b.length - 2).split(","), b = {}, d = e.length; d--;) f = e[d].split(":", 2),
                        b[f[0].replace(/(^\s*)|(\s*$)/g, "")] = j(f[1].replace(/(^\s*)|(\s*$)/g, ""));
                        else b = j(b);
                        this.tagValCache.key = b
                    }
                    return b
                },
                "get": function (a, b) {
                    var d, e = this.getTagSetting(a);
                    return e !== K ? e : (d = this.mergedOptions[a]) === c ? b : d
                }
            }),
        d.fn.sparkline._base = f({
                "disabled": !1,
                "init": function (a, b, e, f, g) {
                    this.el = a,
                    this.$el = d(a),
                    this.values = b,
                    this.options = e,
                    this.width = f,
                    this.height = g,
                    this.currentRegion = c
                },
                "initTarget": function () {
                    var a = !this.options.get("disableInteraction");
                    (this.target = this.$el.simpledraw(this.width, this.height, this.options.get("composite"), a)) ? (this.canvasWidth = this.target.pixelWidth, this.canvasHeight = this.target.pixelHeight) : this.disabled = !0
                },
                "render": function () {
                    return this.disabled ? (this.el.innerHTML = "", !1) : !0
                },
                "getRegion": function () {},
                "setRegionHighlight": function (a, b, d) {
                    var e, f = this.currentRegion,
                        g = !this.options.get("disableHighlight");
                    return b > this.canvasWidth || d > this.canvasHeight || 0 > b || 0 > d ? null : (e = this.getRegion(a, b, d), f !== e ? (f !== c && g && this.removeHighlight(), this.currentRegion = e, e !== c && g && this.renderHighlight(), !0) : !1)
                },
                "clearRegionHighlight": function () {
                    return this.currentRegion !== c ? (this.removeHighlight(), this.currentRegion = c, !0) : !1
                },
                "renderHighlight": function () {
                    this.changeHighlight(!0)
                },
                "removeHighlight": function () {
                    this.changeHighlight(!1)
                },
                "changeHighlight": function () {},
                "getCurrentRegionTooltip": function () {
                    var a, b, e, f, h, i, j, k, l, m, n, o, p, q, r = this.options,
                        s = "",
                        t = [];
                    if (this.currentRegion === c) return "";
                    if (a = this.getCurrentRegionFields(), n = r.get("tooltipFormatter")) return n(this, r, a);
                    if (r.get("tooltipChartTitle") && (s += '<div class="jqs jqstitle">' + r.get("tooltipChartTitle") + "</div>\n"), b = this.options.get("tooltipFormat"), !b) return "";
                    if (d.isArray(b) || (b = [b]), d.isArray(a) || (a = [a]), j = this.options.get("tooltipFormatFieldlist"), k = this.options.get("tooltipFormatFieldlistKey"), j && k) {
                            for (l = [], i = a.length; i--;) m = a[i][k],
                            -1 != (q = d.inArray(m, j)) && (l[q] = a[i]);
                            a = l
                        }
                    for (e = b.length, p = a.length, i = 0; e > i; i++) for (o = b[i], "string" == typeof o && (o = new g(o)), f = o.fclass || "jqsfield", q = 0; p > q; q++) a[q].isNull && r.get("tooltipSkipNull") || (d.extend(a[q], {
                            "prefix": r.get("tooltipPrefix"),
                            "suffix": r.get("tooltipSuffix")
                        }), h = o.render(a[q], r.get("tooltipValueLookups"), r), t.push('<div class="' + f + '">' + h + "</div>"));
                    return t.length ? s + t.join("\n") : ""
                },
                "getCurrentRegionFields": function () {},
                "calcHighlightColor": function (a, c) {
                    var d, e, f, g, i = c.get("highlightColor"),
                        j = c.get("highlightLighten");
                    if (i) return i;
                    if (j && (d = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(a))) {
                            for (f = [], e = 4 === a.length ? 16 : 1, g = 0; 3 > g; g++) f[g] = h(b.round(parseInt(d[g + 1], 16) * e * j), 0, 255);
                            return "rgb(" + f.join(",") + ")"
                        }
                    return a
                }
            }),
        v = {
                "changeHighlight": function (a) {
                    var b, c = this.currentRegion,
                        e = this.target,
                        f = this.regionShapes[c];
                    f && (b = this.renderRegion(c, a), d.isArray(b) || d.isArray(f) ? (e.replaceWithShapes(f, b), this.regionShapes[c] = d.map(b, function (a) {
                            return a.id
                        })) : (e.replaceWithShape(f, b), this.regionShapes[c] = b.id))
                },
                "render": function () {
                    var a, b, c, e, f = this.values,
                        g = this.target,
                        h = this.regionShapes;
                    if (this.cls._super.render.call(this)) {
                            for (c = f.length; c--;) if (a = this.renderRegion(c)) if (d.isArray(a)) {
                                for (b = [], e = a.length; e--;) a[e].append(),
                                b.push(a[e].id);
                                h[c] = b
                            } else a.append(),
                            h[c] = a.id;
                            else h[c] = null;
                            g.render()
                        }
                }
            },
        d.fn.sparkline.line = w = f(d.fn.sparkline._base, {
                "type": "line",
                "init": function (a, b, c, d, e) {
                    w._super.init.call(this, a, b, c, d, e),
                    this.vertices = [],
                    this.regionMap = [],
                    this.xvalues = [],
                    this.yvalues = [],
                    this.yminmax = [],
                    this.hightlightSpotId = null,
                    this.lastShapeId = null,
                    this.initTarget()
                },
                "getRegion": function (a, b) {
                    var d, e = this.regionMap;
                    for (d = e.length; d--;) if (null !== e[d] && b >= e[d][0] && b <= e[d][1]) return e[d][2];
                    return c
                },
                "getCurrentRegionFields": function () {
                    var a = this.currentRegion;
                    return {
                        "isNull": null === this.yvalues[a],
                        "x": this.xvalues[a],
                        "y": this.yvalues[a],
                        "color": this.options.get("lineColor"),
                        "fillColor": this.options.get("fillColor"),
                        "offset": a
                    }
                },
                "renderHighlight": function () {
                    var a, b, d = this.currentRegion,
                        e = this.target,
                        f = this.vertices[d],
                        g = this.options,
                        h = g.get("spotRadius"),
                        i = g.get("highlightSpotColor"),
                        j = g.get("highlightLineColor");
                    f && (h && i && (a = e.drawCircle(f[0], f[1], h, c, i), this.highlightSpotId = a.id, e.insertAfterShape(this.lastShapeId, a)), j && (b = e.drawLine(f[0], this.canvasTop, f[0], this.canvasTop + this.canvasHeight, j), this.highlightLineId = b.id, e.insertAfterShape(this.lastShapeId, b)))
                },
                "removeHighlight": function () {
                    var a = this.target;
                    this.highlightSpotId && (a.removeShapeId(this.highlightSpotId), this.highlightSpotId = null),
                    this.highlightLineId && (a.removeShapeId(this.highlightLineId), this.highlightLineId = null)
                },
                "scanValues": function () {
                    var a, c, d, e, f, g = this.values,
                        h = g.length,
                        i = this.xvalues,
                        j = this.yvalues,
                        k = this.yminmax;
                    for (a = 0; h > a; a++) c = g[a],
                    d = "string" == typeof g[a],
                    e = "object" == typeof g[a] && g[a] instanceof Array,
                    f = d && g[a].split(":"),
                    d && 2 === f.length ? (i.push(Number(f[0])), j.push(Number(f[1])), k.push(Number(f[1]))) : e ? (i.push(c[0]), j.push(c[1]), k.push(c[1])) : (i.push(a), null === g[a] || "null" === g[a] ? j.push(null) : (j.push(Number(c)), k.push(Number(c))));
                    this.options.get("xvalues") && (i = this.options.get("xvalues")),
                    this.maxy = this.maxyorg = b.max.apply(b, k),
                    this.miny = this.minyorg = b.min.apply(b, k),
                    this.maxx = b.max.apply(b, i),
                    this.minx = b.min.apply(b, i),
                    this.xvalues = i,
                    this.yvalues = j,
                    this.yminmax = k
                },
                "processRangeOptions": function () {
                    var a = this.options,
                        b = a.get("normalRangeMin"),
                        d = a.get("normalRangeMax");
                    b !== c && (b < this.miny && (this.miny = b), d > this.maxy && (this.maxy = d)),
                    a.get("chartRangeMin") !== c && (a.get("chartRangeClip") || a.get("chartRangeMin") < this.miny) && (this.miny = a.get("chartRangeMin")),
                    a.get("chartRangeMax") !== c && (a.get("chartRangeClip") || a.get("chartRangeMax") > this.maxy) && (this.maxy = a.get("chartRangeMax")),
                    a.get("chartRangeMinX") !== c && (a.get("chartRangeClipX") || a.get("chartRangeMinX") < this.minx) && (this.minx = a.get("chartRangeMinX")),
                    a.get("chartRangeMaxX") !== c && (a.get("chartRangeClipX") || a.get("chartRangeMaxX") > this.maxx) && (this.maxx = a.get("chartRangeMaxX"))
                },
                "drawNormalRange": function (a, d, e, f, g) {
                    var h = this.options.get("normalRangeMin"),
                        i = this.options.get("normalRangeMax"),
                        j = d + b.round(e - e * ((i - this.miny) / g)),
                        k = b.round(e * (i - h) / g);
                    this.target.drawRect(a, j, f, k, c, this.options.get("normalRangeColor")).append()
                },
                "render": function () {
                    var a, e, f, g, h, i, j, k, l, m, n, o, p, q, r, t, u, v, x, y, z, A, B, C, D, E = this.options,
                        F = this.target,
                        G = this.canvasWidth,
                        H = this.canvasHeight,
                        I = this.vertices,
                        J = E.get("spotRadius"),
                        K = this.regionMap;
                    if (w._super.render.call(this) && (this.scanValues(), this.processRangeOptions(), B = this.xvalues, C = this.yvalues, this.yminmax.length && !(this.yvalues.length < 2))) {
                            for (g = h = 0, a = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx, e = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny, f = this.yvalues.length - 1, J && (4 * J > G || 4 * J > H) && (J = 0), J && (z = E.get("highlightSpotColor") && !E.get("disableInteraction"), (z || E.get("minSpotColor") || E.get("spotColor") && C[f] === this.miny) && (H -= b.ceil(J)), (z || E.get("maxSpotColor") || E.get("spotColor") && C[f] === this.maxy) && (H -= b.ceil(J), g += b.ceil(J)), (z || (E.get("minSpotColor") || E.get("maxSpotColor")) && (C[0] === this.miny || C[0] === this.maxy)) && (h += b.ceil(J), G -= b.ceil(J)), (z || E.get("spotColor") || E.get("minSpotColor") || E.get("maxSpotColor") && (C[f] === this.miny || C[f] === this.maxy)) && (G -= b.ceil(J))), H--, E.get("normalRangeMin") === c || E.get("drawNormalOnTop") || this.drawNormalRange(h, g, H, G, e), j = [], k = [j], q = r = null, t = C.length, D = 0; t > D; D++) l = B[D],
                            n = B[D + 1],
                            m = C[D],
                            o = h + b.round((l - this.minx) * (G / a)),
                            p = t - 1 > D ? h + b.round((n - this.minx) * (G / a)) : G,
                            r = o + (p - o) / 2,
                            K[D] = [q || 0, r, D],
                            q = r,
                            null === m ? D && (null !== C[D - 1] && (j = [], k.push(j)), I.push(null)) : (m < this.miny && (m = this.miny), m > this.maxy && (m = this.maxy), j.length || j.push([o, g + H]), i = [o, g + b.round(H - H * ((m - this.miny) / e))], j.push(i), I.push(i));
                            for (u = [], v = [], x = k.length, D = 0; x > D; D++) j = k[D],
                            j.length && (E.get("fillColor") && (j.push([j[j.length - 1][0], g + H]), v.push(j.slice(0)), j.pop()), j.length > 2 && (j[0] = [j[0][0], j[1][1]]), u.push(j));
                            for (x = v.length, D = 0; x > D; D++) F.drawShape(v[D], E.get("fillColor"), E.get("fillColor")).append();
                            for (E.get("normalRangeMin") !== c && E.get("drawNormalOnTop") && this.drawNormalRange(h, g, H, G, e), x = u.length, D = 0; x > D; D++) F.drawShape(u[D], E.get("lineColor"), c, E.get("lineWidth")).append();
                            if (J && E.get("valueSpots")) for (y = E.get("valueSpots"), y.get === c && (y = new s(y)), D = 0; t > D; D++) A = y.get(C[D]),
                            A && F.drawCircle(h + b.round((B[D] - this.minx) * (G / a)), g + b.round(H - H * ((C[D] - this.miny) / e)), J, c, A).append();
                            J && E.get("spotColor") && null !== C[f] && F.drawCircle(h + b.round((B[B.length - 1] - this.minx) * (G / a)), g + b.round(H - H * ((C[f] - this.miny) / e)), J, c, E.get("spotColor")).append(),
                            this.maxy !== this.minyorg && (J && E.get("minSpotColor") && (l = B[d.inArray(this.minyorg, C)], F.drawCircle(h + b.round((l - this.minx) * (G / a)), g + b.round(H - H * ((this.minyorg - this.miny) / e)), J, c, E.get("minSpotColor")).append()), J && E.get("maxSpotColor") && (l = B[d.inArray(this.maxyorg, C)], F.drawCircle(h + b.round((l - this.minx) * (G / a)), g + b.round(H - H * ((this.maxyorg - this.miny) / e)), J, c, E.get("maxSpotColor")).append())),
                            this.lastShapeId = F.getLastShapeId(),
                            this.canvasTop = g,
                            F.render()
                        }
                }
            }),
        d.fn.sparkline.bar = x = f(d.fn.sparkline._base, v, {
                "type": "bar",
                "init": function (a, e, f, g, i) {
                    var m, n, o, p, q, r, t, u, v, w, y, z, A, B, C, D, E, F, G, H, I, J, K = parseInt(f.get("barWidth"), 10),
                        L = parseInt(f.get("barSpacing"), 10),
                        M = f.get("chartRangeMin"),
                        N = f.get("chartRangeMax"),
                        O = f.get("chartRangeClip"),
                        P = 1 / 0,
                        Q = -1 / 0;
                    for (x._super.init.call(this, a, e, f, g, i), r = 0, t = e.length; t > r; r++) H = e[r],
                    m = "string" == typeof H && H.indexOf(":") > -1,
                    (m || d.isArray(H)) && (C = !0, m && (H = e[r] = k(H.split(":"))), H = l(H, null), n = b.min.apply(b, H), o = b.max.apply(b, H), P > n && (P = n), o > Q && (Q = o));
                    this.stacked = C,
                    this.regionShapes = {},
                    this.barWidth = K,
                    this.barSpacing = L,
                    this.totalBarWidth = K + L,
                    this.width = g = e.length * K + (e.length - 1) * L,
                    this.initTarget(),
                    O && (A = M === c ? -1 / 0 : M, B = N === c ? 1 / 0 : N),
                    q = [],
                    p = C ? [] : q;
                    var R = [],
                        S = [];
                    for (r = 0, t = e.length; t > r; r++) if (C) for (D = e[r], e[r] = G = [], R[r] = 0, p[r] = S[r] = 0, E = 0, F = D.length; F > E; E++) H = G[E] = O ? h(D[E], A, B) : D[E],
                    null !== H && (H > 0 && (R[r] += H), 0 > P && Q > 0 ? 0 > H ? S[r] += b.abs(H) : p[r] += H : p[r] += b.abs(H - (0 > H ? Q : P)), q.push(H));
                    else H = O ? h(e[r], A, B) : e[r],
                    H = e[r] = j(H),
                    null !== H && q.push(H);
                    this.max = z = b.max.apply(b, q),
                    this.min = y = b.min.apply(b, q),
                    this.stackMax = Q = C ? b.max.apply(b, R) : z,
                    this.stackMin = P = C ? b.min.apply(b, q) : y,
                    f.get("chartRangeMin") !== c && (f.get("chartRangeClip") || f.get("chartRangeMin") < y) && (y = f.get("chartRangeMin")),
                    f.get("chartRangeMax") !== c && (f.get("chartRangeClip") || f.get("chartRangeMax") > z) && (z = f.get("chartRangeMax")),
                    this.zeroAxis = v = f.get("zeroAxis", !0),
                    w = 0 >= y && z >= 0 && v ? 0 : 0 == v ? y : y > 0 ? y : z,
                    this.xaxisOffset = w,
                    u = C ? b.max.apply(b, p) + b.max.apply(b, S) : z - y,
                    this.canvasHeightEf = v && 0 > y ? this.canvasHeight - 2 : this.canvasHeight - 1,
                    w > y ? (J = C && z >= 0 ? Q : z, I = (J - w) / u * this.canvasHeight, I !== b.ceil(I) && (this.canvasHeightEf -= 2, I = b.ceil(I))) : I = this.canvasHeight,
                    this.yoffset = I,
                    d.isArray(f.get("colorMap")) ? (this.colorMapByIndex = f.get("colorMap"), this.colorMapByValue = null) : (this.colorMapByIndex = null, this.colorMapByValue = f.get("colorMap"), this.colorMapByValue && this.colorMapByValue.get === c && (this.colorMapByValue = new s(this.colorMapByValue))),
                    this.range = u
                },
                "getRegion": function (a, d) {
                    var e = b.floor(d / this.totalBarWidth);
                    return 0 > e || e >= this.values.length ? c : e
                },
                "getCurrentRegionFields": function () {
                    var a, b, c = this.currentRegion,
                        d = q(this.values[c]),
                        e = [];
                    for (b = d.length; b--;) a = d[b],
                    e.push({
                            "isNull": null === a,
                            "value": a,
                            "color": this.calcColor(b, a, c),
                            "offset": c
                        });
                    return e
                },
                "calcColor": function (a, b, e) {
                    var f, g, h = this.colorMapByIndex,
                        i = this.colorMapByValue,
                        j = this.options;
                    return f = j.get(this.stacked ? "stackedBarColor" : 0 > b ? "negBarColor" : "barColor"),
                    0 === b && j.get("zeroColor") !== c && (f = j.get("zeroColor")),
                    i && (g = i.get(b)) ? f = g : h && h.length > e && (f = h[e]),
                    d.isArray(f) ? f[a % f.length] : f
                },
                "renderRegion": function (a, e) {
                    var f, g, h, i, j, k, l, m, o, p, q = this.values[a],
                        r = this.options,
                        s = this.xaxisOffset,
                        t = [],
                        u = this.range,
                        v = this.stacked,
                        w = this.target,
                        x = a * this.totalBarWidth,
                        y = this.canvasHeightEf,
                        z = this.yoffset;
                    if (q = d.isArray(q) ? q : [q], l = q.length, m = q[0], i = n(null, q), p = n(s, q, !0), i) return r.get("nullColor") ? (h = e ? r.get("nullColor") : this.calcHighlightColor(r.get("nullColor"), r), f = z > 0 ? z - 1 : z, w.drawRect(x, f, this.barWidth - 1, 0, h, h)) : c;
                    for (j = z, k = 0; l > k; k++) {
                            if (m = q[k], v && m === s) {
                                if (!p || o) continue;
                                o = !0
                            }
                            g = u > 0 ? b.floor(y * (b.abs(m - s) / u)) + 1 : 1,
                            s > m || m === s && 0 === z ? (f = j, j += g) : (f = z - g, z -= g),
                            h = this.calcColor(k, m, a),
                            e && (h = this.calcHighlightColor(h, r)),
                            t.push(w.drawRect(x, f, this.barWidth - 1, g - 1, h, h))
                        }
                    return 1 === t.length ? t[0] : t
                }
            }),
        d.fn.sparkline.tristate = y = f(d.fn.sparkline._base, v, {
                "type": "tristate",
                "init": function (a, b, e, f, g) {
                    var h = parseInt(e.get("barWidth"), 10),
                        i = parseInt(e.get("barSpacing"), 10);
                    y._super.init.call(this, a, b, e, f, g),
                    this.regionShapes = {},
                    this.barWidth = h,
                    this.barSpacing = i,
                    this.totalBarWidth = h + i,
                    this.values = d.map(b, Number),
                    this.width = f = b.length * h + (b.length - 1) * i,
                    d.isArray(e.get("colorMap")) ? (this.colorMapByIndex = e.get("colorMap"), this.colorMapByValue = null) : (this.colorMapByIndex = null, this.colorMapByValue = e.get("colorMap"), this.colorMapByValue && this.colorMapByValue.get === c && (this.colorMapByValue = new s(this.colorMapByValue))),
                    this.initTarget()
                },
                "getRegion": function (a, c) {
                    return b.floor(c / this.totalBarWidth)
                },
                "getCurrentRegionFields": function () {
                    var a = this.currentRegion;
                    return {
                        "isNull": this.values[a] === c,
                        "value": this.values[a],
                        "color": this.calcColor(this.values[a], a),
                        "offset": a
                    }
                },
                "calcColor": function (a, b) {
                    var c, d, e = this.values,
                        f = this.options,
                        g = this.colorMapByIndex,
                        h = this.colorMapByValue;
                    return c = h && (d = h.get(a)) ? d : g && g.length > b ? g[b] : f.get(e[b] < 0 ? "negBarColor" : e[b] > 0 ? "posBarColor" : "zeroBarColor")
                },
                "renderRegion": function (a, c) {
                    var d, e, f, g, h, i, j = this.values,
                        k = this.options,
                        l = this.target;
                    return d = l.pixelHeight,
                    f = b.round(d / 2),
                    g = a * this.totalBarWidth,
                    j[a] < 0 ? (h = f, e = f - 1) : j[a] > 0 ? (h = 0, e = f - 1) : (h = f - 1, e = 2),
                    i = this.calcColor(j[a], a),
                    null !== i ? (c && (i = this.calcHighlightColor(i, k)), l.drawRect(g, h, this.barWidth - 1, e - 1, i, i)) : void 0
                }
            }),
        d.fn.sparkline.discrete = z = f(d.fn.sparkline._base, v, {
                "type": "discrete",
                "init": function (a, e, f, g, h) {
                    z._super.init.call(this, a, e, f, g, h),
                    this.regionShapes = {},
                    this.values = e = d.map(e, Number),
                    this.min = b.min.apply(b, e),
                    this.max = b.max.apply(b, e),
                    this.range = this.max - this.min,
                    this.width = g = "auto" === f.get("width") ? 2 * e.length : this.width,
                    this.interval = b.floor(g / e.length),
                    this.itemWidth = g / e.length,
                    f.get("chartRangeMin") !== c && (f.get("chartRangeClip") || f.get("chartRangeMin") < this.min) && (this.min = f.get("chartRangeMin")),
                    f.get("chartRangeMax") !== c && (f.get("chartRangeClip") || f.get("chartRangeMax") > this.max) && (this.max = f.get("chartRangeMax")),
                    this.initTarget(),
                    this.target && (this.lineHeight = "auto" === f.get("lineHeight") ? b.round(.3 * this.canvasHeight) : f.get("lineHeight"))
                },
                "getRegion": function (a, c) {
                    return b.floor(c / this.itemWidth)
                },
                "getCurrentRegionFields": function () {
                    var a = this.currentRegion;
                    return {
                        "isNull": this.values[a] === c,
                        "value": this.values[a],
                        "offset": a
                    }
                },
                "renderRegion": function (a, c) {
                    var d, e, f, g, i = this.values,
                        j = this.options,
                        k = this.min,
                        l = this.max,
                        m = this.range,
                        n = this.interval,
                        o = this.target,
                        p = this.canvasHeight,
                        q = this.lineHeight,
                        r = p - q;
                    return e = h(i[a], k, l),
                    g = a * n,
                    d = b.round(r - r * ((e - k) / m)),
                    f = j.get(j.get("thresholdColor") && e < j.get("thresholdValue") ? "thresholdColor" : "lineColor"),
                    c && (f = this.calcHighlightColor(f, j)),
                    o.drawLine(g, d, g, d + q, f)
                }
            }),
        d.fn.sparkline.bullet = A = f(d.fn.sparkline._base, {
                "type": "bullet",
                "init": function (a, d, e, f, g) {
                    var h, i, j;
                    A._super.init.call(this, a, d, e, f, g),
                    this.values = d = k(d),
                    j = d.slice(),
                    j[0] = null === j[0] ? j[2] : j[0],
                    j[1] = null === d[1] ? j[2] : j[1],
                    h = b.min.apply(b, d),
                    i = b.max.apply(b, d),
                    h = e.get("base") === c ? 0 > h ? h : 0 : e.get("base"),
                    this.min = h,
                    this.max = i,
                    this.range = i - h,
                    this.shapes = {},
                    this.valueShapes = {},
                    this.regiondata = {},
                    this.width = f = "auto" === e.get("width") ? "4.0em" : f,
                    this.target = this.$el.simpledraw(f, g, e.get("composite")),
                    d.length || (this.disabled = !0),
                    this.initTarget()
                },
                "getRegion": function (a, b, d) {
                    var e = this.target.getShapeAt(a, b, d);
                    return e !== c && this.shapes[e] !== c ? this.shapes[e] : c
                },
                "getCurrentRegionFields": function () {
                    var a = this.currentRegion;
                    return {
                        "fieldkey": a.substr(0, 1),
                        "value": this.values[a.substr(1)],
                        "region": a
                    }
                },
                "changeHighlight": function (a) {
                    var b, c = this.currentRegion,
                        d = this.valueShapes[c];
                    switch (delete this.shapes[d], c.substr(0, 1)) {
                        case "r":
                            b = this.renderRange(c.substr(1), a);
                            break;
                        case "p":
                            b = this.renderPerformance(a);
                            break;
                        case "t":
                            b = this.renderTarget(a)
                        }
                    this.valueShapes[c] = b.id,
                    this.shapes[b.id] = c,
                    this.target.replaceWithShape(d, b)
                },
                "renderRange": function (a, c) {
                    var d = this.values[a],
                        e = b.round(this.canvasWidth * ((d - this.min) / this.range)),
                        f = this.options.get("rangeColors")[a - 2];
                    return c && (f = this.calcHighlightColor(f, this.options)),
                    this.target.drawRect(0, 0, e - 1, this.canvasHeight - 1, f, f)
                },
                "renderPerformance": function (a) {
                    var c = this.values[1],
                        d = b.round(this.canvasWidth * ((c - this.min) / this.range)),
                        e = this.options.get("performanceColor");
                    return a && (e = this.calcHighlightColor(e, this.options)),
                    this.target.drawRect(0, b.round(.3 * this.canvasHeight), d - 1, b.round(.4 * this.canvasHeight) - 1, e, e)
                },
                "renderTarget": function (a) {
                    var c = this.values[0],
                        d = b.round(this.canvasWidth * ((c - this.min) / this.range) - this.options.get("targetWidth") / 2),
                        e = b.round(.1 * this.canvasHeight),
                        f = this.canvasHeight - 2 * e,
                        g = this.options.get("targetColor");
                    return a && (g = this.calcHighlightColor(g, this.options)),
                    this.target.drawRect(d, e, this.options.get("targetWidth") - 1, f - 1, g, g)
                },
                "render": function () {
                    var a, b, c = this.values.length,
                        d = this.target;
                    if (A._super.render.call(this)) {
                            for (a = 2; c > a; a++) b = this.renderRange(a).append(),
                            this.shapes[b.id] = "r" + a,
                            this.valueShapes["r" + a] = b.id;
                            null !== this.values[1] && (b = this.renderPerformance().append(), this.shapes[b.id] = "p1", this.valueShapes.p1 = b.id),
                            null !== this.values[0] && (b = this.renderTarget().append(), this.shapes[b.id] = "t0", this.valueShapes.t0 = b.id),
                            d.render()
                        }
                }
            }),
        d.fn.sparkline.pie = B = f(d.fn.sparkline._base, {
                "type": "pie",
                "init": function (a, c, e, f, g) {
                    var h, i = 0;
                    if (B._super.init.call(this, a, c, e, f, g), this.shapes = {}, this.valueShapes = {}, this.values = c = d.map(c, Number), "auto" === e.get("width") && (this.width = this.height), c.length > 0) for (h = c.length; h--;) i += c[h];
                    this.total = i,
                    this.initTarget(),
                    this.radius = b.floor(b.min(this.canvasWidth, this.canvasHeight) / 2)
                },
                "getRegion": function (a, b, d) {
                    var e = this.target.getShapeAt(a, b, d);
                    return e !== c && this.shapes[e] !== c ? this.shapes[e] : c
                },
                "getCurrentRegionFields": function () {
                    var a = this.currentRegion;
                    return {
                        "isNull": this.values[a] === c,
                        "value": this.values[a],
                        "percent": this.values[a] / this.total * 100,
                        "color": this.options.get("sliceColors")[a % this.options.get("sliceColors").length],
                        "offset": a
                    }
                },
                "changeHighlight": function (a) {
                    var b = this.currentRegion,
                        c = this.renderSlice(b, a),
                        d = this.valueShapes[b];
                    delete this.shapes[d],
                    this.target.replaceWithShape(d, c),
                    this.valueShapes[b] = c.id,
                    this.shapes[c.id] = b
                },
                "renderSlice": function (a, d) {
                    var e, f, g, h, i, j = this.target,
                        k = this.options,
                        l = this.radius,
                        m = k.get("borderWidth"),
                        n = k.get("offset"),
                        o = 2 * b.PI,
                        p = this.values,
                        q = this.total,
                        r = n ? 2 * b.PI * (n / 360) : 0;
                    for (h = p.length, g = 0; h > g; g++) {
                            if (e = r, f = r, q > 0 && (f = r + o * (p[g] / q)), a === g) return i = k.get("sliceColors")[g % k.get("sliceColors").length],
                            d && (i = this.calcHighlightColor(i, k)),
                            j.drawPieSlice(l, l, l - m, e, f, c, i);
                            r = f
                        }
                },
                "render": function () {
                    var a, d, e = this.target,
                        f = this.values,
                        g = this.options,
                        h = this.radius,
                        i = g.get("borderWidth");
                    if (B._super.render.call(this)) {
                            for (i && e.drawCircle(h, h, b.floor(h - i / 2), g.get("borderColor"), c, i).append(), d = f.length; d--;) f[d] && (a = this.renderSlice(d).append(), this.valueShapes[d] = a.id, this.shapes[a.id] = d);
                            e.render()
                        }
                }
            }),
        d.fn.sparkline.box = C = f(d.fn.sparkline._base, {
                "type": "box",
                "init": function (a, b, c, e, f) {
                    C._super.init.call(this, a, b, c, e, f),
                    this.values = d.map(b, Number),
                    this.width = "auto" === c.get("width") ? "4.0em" : e,
                    this.initTarget(),
                    this.values.length || (this.disabled = 1)
                },
                "getRegion": function () {
                    return 1
                },
                "getCurrentRegionFields": function () {
                    var a = [{
                        "field": "lq",
                        "value": this.quartiles[0]
                    },
                    {
                        "field": "med",
                        "value": this.quartiles[1]
                    },
                    {
                        "field": "uq",
                        "value": this.quartiles[2]
                    }];
                    return this.loutlier !== c && a.push({
                        "field": "lo",
                        "value": this.loutlier
                    }),
                    this.routlier !== c && a.push({
                        "field": "ro",
                        "value": this.routlier
                    }),
                    this.lwhisker !== c && a.push({
                        "field": "lw",
                        "value": this.lwhisker
                    }),
                    this.rwhisker !== c && a.push({
                        "field": "rw",
                        "value": this.rwhisker
                    }),
                    a
                },
                "render": function () {
                    var a, d, e, f, g, h, j, k, l, m, n, o = this.target,
                        p = this.values,
                        q = p.length,
                        r = this.options,
                        s = this.canvasWidth,
                        t = this.canvasHeight,
                        u = r.get("chartRangeMin") === c ? b.min.apply(b, p) : r.get("chartRangeMin"),
                        v = r.get("chartRangeMax") === c ? b.max.apply(b, p) : r.get("chartRangeMax"),
                        w = 0;
                    if (C._super.render.call(this)) {
                            if (r.get("raw")) r.get("showOutliers") && p.length > 5 ? (d = p[0], a = p[1], f = p[2], g = p[3], h = p[4], j = p[5], k = p[6]) : (a = p[0], f = p[1], g = p[2], h = p[3], j = p[4]);
                            else if (p.sort(function (a, b) {
                                return a - b
                            }), f = i(p, 1), g = i(p, 2), h = i(p, 3), e = h - f, r.get("showOutliers")) {
                                for (a = j = c, l = 0; q > l; l++) a === c && p[l] > f - e * r.get("outlierIQR") && (a = p[l]),
                                p[l] < h + e * r.get("outlierIQR") && (j = p[l]);
                                d = p[0],
                                k = p[q - 1]
                            } else a = p[0],
                            j = p[q - 1];
                            this.quartiles = [f, g, h],
                            this.lwhisker = a,
                            this.rwhisker = j,
                            this.loutlier = d,
                            this.routlier = k,
                            n = s / (v - u + 1),
                            r.get("showOutliers") && (w = b.ceil(r.get("spotRadius")), s -= 2 * b.ceil(r.get("spotRadius")), n = s / (v - u + 1), a > d && o.drawCircle((d - u) * n + w, t / 2, r.get("spotRadius"), r.get("outlierLineColor"), r.get("outlierFillColor")).append(), k > j && o.drawCircle((k - u) * n + w, t / 2, r.get("spotRadius"), r.get("outlierLineColor"), r.get("outlierFillColor")).append()),
                            o.drawRect(b.round((f - u) * n + w), b.round(.1 * t), b.round((h - f) * n), b.round(.8 * t), r.get("boxLineColor"), r.get("boxFillColor")).append(),
                            o.drawLine(b.round((a - u) * n + w), b.round(t / 2), b.round((f - u) * n + w), b.round(t / 2), r.get("lineColor")).append(),
                            o.drawLine(b.round((a - u) * n + w), b.round(t / 4), b.round((a - u) * n + w), b.round(t - t / 4), r.get("whiskerColor")).append(),
                            o.drawLine(b.round((j - u) * n + w), b.round(t / 2), b.round((h - u) * n + w), b.round(t / 2), r.get("lineColor")).append(),
                            o.drawLine(b.round((j - u) * n + w), b.round(t / 4), b.round((j - u) * n + w), b.round(t - t / 4), r.get("whiskerColor")).append(),
                            o.drawLine(b.round((g - u) * n + w), b.round(.1 * t), b.round((g - u) * n + w), b.round(.9 * t), r.get("medianColor")).append(),
                            r.get("target") && (m = b.ceil(r.get("spotRadius")), o.drawLine(b.round((r.get("target") - u) * n + w), b.round(t / 2 - m), b.round((r.get("target") - u) * n + w), b.round(t / 2 + m), r.get("targetColor")).append(), o.drawLine(b.round((r.get("target") - u) * n + w - m), b.round(t / 2), b.round((r.get("target") - u) * n + w + m), b.round(t / 2), r.get("targetColor")).append()),
                            o.render()
                        }
                }
            }),
        F = f({
                "init": function (a, b, c, d) {
                    this.target = a,
                    this.id = b,
                    this.type = c,
                    this.args = d
                },
                "append": function () {
                    return this.target.appendShape(this),
                    this
                }
            }),
        G = f({
                "_pxregex": /(\d+)(px)?\s*$/i,
                "init": function (a, b, c) {
                    a && (this.width = a, this.height = b, this.target = c, this.lastShapeId = null, c[0] && (c = c[0]), d.data(c, "_jqs_vcanvas", this))
                },
                "drawLine": function (a, b, c, d, e, f) {
                    return this.drawShape([
                        [a, b],
                        [c, d]
                    ], e, f)
                },
                "drawShape": function (a, b, c, d) {
                    return this._genShape("Shape", [a, b, c, d])
                },
                "drawCircle": function (a, b, c, d, e, f) {
                    return this._genShape("Circle", [a, b, c, d, e, f])
                },
                "drawPieSlice": function (a, b, c, d, e, f, g) {
                    return this._genShape("PieSlice", [a, b, c, d, e, f, g])
                },
                "drawRect": function (a, b, c, d, e, f) {
                    return this._genShape("Rect", [a, b, c, d, e, f])
                },
                "getElement": function () {
                    return this.canvas
                },
                "getLastShapeId": function () {
                    return this.lastShapeId
                },
                "reset": function () {
                    alert("reset not implemented")
                },
                "_insert": function (a, b) {
                    d(b).html(a)
                },
                "_calculatePixelDims": function (a, b, c) {
                    var e;
                    e = this._pxregex.exec(b),
                    this.pixelHeight = e ? e[1] : d(c).height(),
                    e = this._pxregex.exec(a),
                    this.pixelWidth = e ? e[1] : d(c).width()
                },
                "_genShape": function (a, b) {
                    var c = L++;
                    return b.unshift(c),
                    new F(this, c, a, b)
                },
                "appendShape": function () {
                    alert("appendShape not implemented")
                },
                "replaceWithShape": function () {
                    alert("replaceWithShape not implemented")
                },
                "insertAfterShape": function () {
                    alert("insertAfterShape not implemented")
                },
                "removeShapeId": function () {
                    alert("removeShapeId not implemented")
                },
                "getShapeAt": function () {
                    alert("getShapeAt not implemented")
                },
                "render": function () {
                    alert("render not implemented")
                }
            }),
        H = f(G, {
                "init": function (b, e, f, g) {
                    H._super.init.call(this, b, e, f),
                    this.canvas = a.createElement("canvas"),
                    f[0] && (f = f[0]),
                    d.data(f, "_jqs_vcanvas", this),
                    d(this.canvas).css({
                        "display": "inline-block",
                        "width": b,
                        "height": e,
                        "verticalAlign": "top"
                    }),
                    this._insert(this.canvas, f),
                    this._calculatePixelDims(b, e, this.canvas),
                    this.canvas.width = this.pixelWidth,
                    this.canvas.height = this.pixelHeight,
                    this.interact = g,
                    this.shapes = {},
                    this.shapeseq = [],
                    this.currentTargetShapeId = c,
                    d(this.canvas).css({
                        "width": this.pixelWidth,
                        "height": this.pixelHeight
                    })
                },
                "_getContext": function (a, b, d) {
                    var e = this.canvas.getContext("2d");
                    return a !== c && (e.strokeStyle = a),
                    e.lineWidth = d === c ? 1 : d,
                    b !== c && (e.fillStyle = b),
                    e
                },
                "reset": function () {
                    var a = this._getContext();
                    a.clearRect(0, 0, this.pixelWidth, this.pixelHeight),
                    this.shapes = {},
                    this.shapeseq = [],
                    this.currentTargetShapeId = c
                },
                "_drawShape": function (a, b, d, e, f) {
                    var g, h, i = this._getContext(d, e, f);
                    for (i.beginPath(), i.moveTo(b[0][0] + .5, b[0][1] + .5), g = 1, h = b.length; h > g; g++) i.lineTo(b[g][0] + .5, b[g][1] + .5);
                    d !== c && i.stroke(),
                    e !== c && i.fill(),
                    this.targetX !== c && this.targetY !== c && i.isPointInPath(this.targetX, this.targetY) && (this.currentTargetShapeId = a)
                },
                "_drawCircle": function (a, d, e, f, g, h, i) {
                    var j = this._getContext(g, h, i);
                    j.beginPath(),
                    j.arc(d, e, f, 0, 2 * b.PI, !1),
                    this.targetX !== c && this.targetY !== c && j.isPointInPath(this.targetX, this.targetY) && (this.currentTargetShapeId = a),
                    g !== c && j.stroke(),
                    h !== c && j.fill()
                },
                "_drawPieSlice": function (a, b, d, e, f, g, h, i) {
                    var j = this._getContext(h, i);
                    j.beginPath(),
                    j.moveTo(b, d),
                    j.arc(b, d, e, f, g, !1),
                    j.lineTo(b, d),
                    j.closePath(),
                    h !== c && j.stroke(),
                    i && j.fill(),
                    this.targetX !== c && this.targetY !== c && j.isPointInPath(this.targetX, this.targetY) && (this.currentTargetShapeId = a)
                },
                "_drawRect": function (a, b, c, d, e, f, g) {
                    return this._drawShape(a, [
                        [b, c],
                        [b + d, c],
                        [b + d, c + e],
                        [b, c + e],
                        [b, c]
                    ], f, g)
                },
                "appendShape": function (a) {
                    return this.shapes[a.id] = a,
                    this.shapeseq.push(a.id),
                    this.lastShapeId = a.id,
                    a.id
                },
                "replaceWithShape": function (a, b) {
                    var c, d = this.shapeseq;
                    for (this.shapes[b.id] = b, c = d.length; c--;) d[c] == a && (d[c] = b.id);
                    delete this.shapes[a]
                },
                "replaceWithShapes": function (a, b) {
                    var c, d, e, f = this.shapeseq,
                        g = {};
                    for (d = a.length; d--;) g[a[d]] = !0;
                    for (d = f.length; d--;) c = f[d],
                    g[c] && (f.splice(d, 1), delete this.shapes[c], e = d);
                    for (d = b.length; d--;) f.splice(e, 0, b[d].id),
                    this.shapes[b[d].id] = b[d]
                },
                "insertAfterShape": function (a, b) {
                    var c, d = this.shapeseq;
                    for (c = d.length; c--;) if (d[c] === a) return d.splice(c + 1, 0, b.id),
                    void(this.shapes[b.id] = b)
                },
                "removeShapeId": function (a) {
                    var b, c = this.shapeseq;
                    for (b = c.length; b--;) if (c[b] === a) {
                        c.splice(b, 1);
                        break
                    }
                    delete this.shapes[a]
                },
                "getShapeAt": function (a, b, c) {
                    return this.targetX = b,
                    this.targetY = c,
                    this.render(),
                    this.currentTargetShapeId
                },
                "render": function () {
                    var a, b, c, d = this.shapeseq,
                        e = this.shapes,
                        f = d.length,
                        g = this._getContext();
                    for (g.clearRect(0, 0, this.pixelWidth, this.pixelHeight), c = 0; f > c; c++) a = d[c],
                    b = e[a],
                    this["_draw" + b.type].apply(this, b.args);
                    this.interact || (this.shapes = {}, this.shapeseq = [])
                }
            }),
        I = f(G, {
                "init": function (b, c, e) {
                    var f;
                    I._super.init.call(this, b, c, e),
                    e[0] && (e = e[0]),
                    d.data(e, "_jqs_vcanvas", this),
                    this.canvas = a.createElement("span"),
                    d(this.canvas).css({
                        "display": "inline-block",
                        "position": "relative",
                        "overflow": "hidden",
                        "width": b,
                        "height": c,
                        "margin": "0px",
                        "padding": "0px",
                        "verticalAlign": "top"
                    }),
                    this._insert(this.canvas, e),
                    this._calculatePixelDims(b, c, this.canvas),
                    this.canvas.width = this.pixelWidth,
                    this.canvas.height = this.pixelHeight,
                    f = '<v:group coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '" style="position:absolute;top:0;left:0;width:' + this.pixelWidth + "px;height=" + this.pixelHeight + 'px;"></v:group>',
                    this.canvas.insertAdjacentHTML("beforeEnd", f),
                    this.group = d(this.canvas).children()[0],
                    this.rendered = !1,
                    this.prerender = ""
                },
                "_drawShape": function (a, b, d, e, f) {
                    var g, h, i, j, k, l, m, n = [];
                    for (m = 0, l = b.length; l > m; m++) n[m] = "" + b[m][0] + "," + b[m][1];
                    return g = n.splice(0, 1),
                    f = f === c ? 1 : f,
                    h = d === c ? ' stroked="false" ' : ' strokeWeight="' + f + 'px" strokeColor="' + d + '" ',
                    i = e === c ? ' filled="false"' : ' fillColor="' + e + '" filled="true" ',
                    j = n[0] === n[n.length - 1] ? "x " : "",
                    k = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '"  id="jqsshape' + a + '" ' + h + i + ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + "px;width:" + this.pixelWidth + 'px;padding:0px;margin:0px;"  path="m ' + g + " l " + n.join(", ") + " " + j + 'e"> </v:shape>'
                },
                "_drawCircle": function (a, b, d, e, f, g, h) {
                    var i, j, k;
                    return b -= e,
                    d -= e,
                    i = f === c ? ' stroked="false" ' : ' strokeWeight="' + h + 'px" strokeColor="' + f + '" ',
                    j = g === c ? ' filled="false"' : ' fillColor="' + g + '" filled="true" ',
                    k = '<v:oval  id="jqsshape' + a + '" ' + i + j + ' style="position:absolute;top:' + d + "px; left:" + b + "px; width:" + 2 * e + "px; height:" + 2 * e + 'px"></v:oval>'
                },
                "_drawPieSlice": function (a, d, e, f, g, h, i, j) {
                    var k, l, m, n, o, p, q, r;
                    if (g === h) return "";
                    if (h - g === 2 * b.PI && (g = 0, h = 2 * b.PI), l = d + b.round(b.cos(g) * f), m = e + b.round(b.sin(g) * f), n = d + b.round(b.cos(h) * f), o = e + b.round(b.sin(h) * f), l === n && m === o) {
                        if (h - g < b.PI) return "";
                        l = n = d + f,
                        m = o = e
                    }
                    return l === n && m === o && h - g < b.PI ? "" : (k = [d - f, e - f, d + f, e + f, l, m, n, o], p = i === c ? ' stroked="false" ' : ' strokeWeight="1px" strokeColor="' + i + '" ', q = j === c ? ' filled="false"' : ' fillColor="' + j + '" filled="true" ', r = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '"  id="jqsshape' + a + '" ' + p + q + ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + "px;width:" + this.pixelWidth + 'px;padding:0px;margin:0px;"  path="m ' + d + "," + e + " wa " + k.join(", ") + ' x e"> </v:shape>')
                },
                "_drawRect": function (a, b, c, d, e, f, g) {
                    return this._drawShape(a, [
                        [b, c],
                        [b, c + e],
                        [b + d, c + e],
                        [b + d, c],
                        [b, c]
                    ], f, g)
                },
                "reset": function () {
                    this.group.innerHTML = ""
                },
                "appendShape": function (a) {
                    var b = this["_draw" + a.type].apply(this, a.args);
                    return this.rendered ? this.group.insertAdjacentHTML("beforeEnd", b) : this.prerender += b,
                    this.lastShapeId = a.id,
                    a.id
                },
                "replaceWithShape": function (a, b) {
                    var c = d("#jqsshape" + a),
                        e = this["_draw" + b.type].apply(this, b.args);
                    c[0].outerHTML = e
                },
                "replaceWithShapes": function (a, b) {
                    var c, e = d("#jqsshape" + a[0]),
                        f = "",
                        g = b.length;
                    for (c = 0; g > c; c++) f += this["_draw" + b[c].type].apply(this, b[c].args);
                    for (e[0].outerHTML = f, c = 1; c < a.length; c++) d("#jqsshape" + a[c]).remove()
                },
                "insertAfterShape": function (a, b) {
                    var c = d("#jqsshape" + a),
                        e = this["_draw" + b.type].apply(this, b.args);
                    c[0].insertAdjacentHTML("afterEnd", e)
                },
                "removeShapeId": function (a) {
                    var b = d("#jqsshape" + a);
                    this.group.removeChild(b[0])
                },
                "getShapeAt": function (a) {
                    var b = a.id.substr(8);
                    return b
                },
                "render": function () {
                    this.rendered || (this.group.innerHTML = this.prerender, this.rendered = !0)
                }
            })
    })
}(document, Math),








function (a) {
    "use strict";
    var b = function (b, c) {
        this.options = a.extend({}, a.fn.editableform.defaults, c),
        this.$div = a(b),
        this.options.scope || (this.options.scope = this)
    };
    b.prototype = {
        "constructor": b,
        "initInput": function () {
            this.input = this.options.input,
            this.value = this.input.str2value(this.options.value),
            this.input.prerender()
        },
        "initTemplate": function () {
            this.$form = a(a.fn.editableform.template)
        },
        "initButtons": function () {
            var b = this.$form.find(".editable-buttons");
            b.append(a.fn.editableform.buttons),
            "bottom" === this.options.showbuttons && b.addClass("editable-buttons-bottom")
        },
        "render": function () {
            this.$loading = a(a.fn.editableform.loading),
            this.$div.empty().append(this.$loading),
            this.initTemplate(),
            this.options.showbuttons ? this.initButtons() : this.$form.find(".editable-buttons").remove(),
            this.showLoading(),
            this.isSaving = !1,
            this.$div.triggerHandler("rendering"),
            this.initInput(),
            this.$form.find("div.editable-input").append(this.input.$tpl),
            this.$div.append(this.$form),
            a.when(this.input.render()).then(a.proxy(function () {
                if (this.options.showbuttons || this.input.autosubmit(), this.$form.find(".editable-cancel").click(a.proxy(this.cancel, this)), this.input.error) this.error(this.input.error),
                this.$form.find(".editable-submit").attr("disabled", !0),
                this.input.$input.attr("disabled", !0),
                this.$form.submit(function (a) {
                    a.preventDefault()
                });
                else {
                    this.error(!1),
                    this.input.$input.removeAttr("disabled"),
                    this.$form.find(".editable-submit").removeAttr("disabled");
                    var b = null === this.value || void 0 === this.value || "" === this.value ? this.options.defaultValue : this.value;
                    this.input.value2input(b),
                    this.$form.submit(a.proxy(this.submit, this))
                }
                this.$div.triggerHandler("rendered"),
                this.showForm(),
                this.input.postrender && this.input.postrender()
            }, this))
        },
        "cancel": function () {
            this.$div.triggerHandler("cancel")
        },
        "showLoading": function () {
            var a, b;
            this.$form ? (a = this.$form.outerWidth(), b = this.$form.outerHeight(), a && this.$loading.width(a), b && this.$loading.height(b), this.$form.hide()) : (a = this.$loading.parent().width(), a && this.$loading.width(a)),
            this.$loading.show()
        },
        "showForm": function (a) {
            this.$loading.hide(),
            this.$form.show(),
            a !== !1 && this.input.activate(),
            this.$div.triggerHandler("show")
        },
        "error": function (b) {
            var c, d = this.$form.find(".control-group"),
                e = this.$form.find(".editable-error-block");
            if (b === !1) d.removeClass(a.fn.editableform.errorGroupClass),
            e.removeClass(a.fn.editableform.errorBlockClass).empty().hide();
            else {
                    if (b) {
                        c = ("" + b).split("\n");
                        for (var f = 0; f < c.length; f++) c[f] = a("<div>").text(c[f]).html();
                        b = c.join("<br>")
                    }
                    d.addClass(a.fn.editableform.errorGroupClass),
                    e.addClass(a.fn.editableform.errorBlockClass).html(b).show()
                }
        },
        "submit": function (b) {
            b.stopPropagation(),
            b.preventDefault();
            var c = this.input.input2value(),
                d = this.validate(c);
            if ("object" === a.type(d) && void 0 !== d.newValue) {
                    if (c = d.newValue, this.input.value2input(c), "string" == typeof d.msg) return this.error(d.msg),
                    void this.showForm()
                } else if (d) return this.error(d),
            void this.showForm();
            if (!this.options.savenochange && this.input.value2str(c) == this.input.value2str(this.value)) return void this.$div.triggerHandler("nochange");
            var e = this.input.value2submit(c);
            this.isSaving = !0,
            a.when(this.save(e)).done(a.proxy(function (a) {
                    this.isSaving = !1;
                    var b = "function" == typeof this.options.success ? this.options.success.call(this.options.scope, a, c) : null;
                    return b === !1 ? (this.error(!1), void this.showForm(!1)) : "string" == typeof b ? (this.error(b), void this.showForm()) : (b && "object" == typeof b && b.hasOwnProperty("newValue") && (c = b.newValue), this.error(!1), this.value = c, void this.$div.triggerHandler("save", {
                        "newValue": c,
                        "submitValue": e,
                        "response": a
                    }))
                }, this)).fail(a.proxy(function (a) {
                    this.isSaving = !1;
                    var b;
                    b = "function" == typeof this.options.error ? this.options.error.call(this.options.scope, a, c) : "string" == typeof a ? a : a.responseText || a.statusText || "Unknown error!",
                    this.error(b),
                    this.showForm()
                }, this))
        },
        "save": function (b) {
            this.options.pk = a.fn.editableutils.tryParseJson(this.options.pk, !0);
            var c, d = "function" == typeof this.options.pk ? this.options.pk.call(this.options.scope) : this.options.pk,
                e = !! ("function" == typeof this.options.url || this.options.url && ("always" === this.options.send || "auto" === this.options.send && null !== d && void 0 !== d));
            return e ? (this.showLoading(), c = {
                    "name": this.options.name || "",
                    "value": b,
                    "pk": d
                }, "function" == typeof this.options.params ? c = this.options.params.call(this.options.scope, c) : (this.options.params = a.fn.editableutils.tryParseJson(this.options.params, !0), a.extend(c, this.options.params)), "function" == typeof this.options.url ? this.options.url.call(this.options.scope, c) : a.ajax(a.extend({
                    "url": this.options.url,
                    "data": c,
                    "type": "POST"
                }, this.options.ajaxOptions))) : void 0
        },
        "validate": function (a) {
            return void 0 === a && (a = this.value),
            "function" == typeof this.options.validate ? this.options.validate.call(this.options.scope, a) : void 0
        },
        "option": function (a, b) {
            a in this.options && (this.options[a] = b),
            "value" === a && this.setValue(b)
        },
        "setValue": function (a, b) {
            this.value = b ? this.input.str2value(a) : a,
            this.$form && this.$form.is(":visible") && this.input.value2input(this.value)
        }
    },
    a.fn.editableform = function (c) {
        var d = arguments;
        return this.each(function () {
            var e = a(this),
                f = e.data("editableform"),
                g = "object" == typeof c && c;
            f || e.data("editableform", f = new b(this, g)),
            "string" == typeof c && f[c].apply(f, Array.prototype.slice.call(d, 1))
        })
    },
    a.fn.editableform.Constructor = b,
    a.fn.editableform.defaults = {
        "type": "text",
        "url": null,
        "params": null,
        "name": null,
        "pk": null,
        "value": null,
        "defaultValue": null,
        "send": "auto",
        "validate": null,
        "success": null,
        "error": null,
        "ajaxOptions": null,
        "showbuttons": !0,
        "scope": null,
        "savenochange": !1
    },
    a.fn.editableform.template = '<form class="form-inline editableform"><div class="control-group"><div><div class="editable-input"></div><div class="editable-buttons"></div></div><div class="editable-error-block"></div></div></form>',
    a.fn.editableform.loading = '<div class="editableform-loading"></div>',
    a.fn.editableform.buttons = '<button type="submit" class="editable-submit">ok</button><button type="button" class="editable-cancel">cancel</button>',
    a.fn.editableform.errorGroupClass = null,
    a.fn.editableform.errorBlockClass = "editable-error",
    a.fn.editableform.engine = "jquery"
}(window.jQuery),


function (a) {
    "use strict";
    a.fn.editableutils = {
        "inherit": function (a, b) {
            var c = function () {};
            c.prototype = b.prototype,
            a.prototype = new c,
            a.prototype.constructor = a,
            a.superclass = b.prototype
        },
        "setCursorPosition": function (a, b) {
            if (a.setSelectionRange) a.setSelectionRange(b, b);
            else if (a.createTextRange) {
                var c = a.createTextRange();
                c.collapse(!0),
                c.moveEnd("character", b),
                c.moveStart("character", b),
                c.select()
            }
        },
        "tryParseJson": function (a, b) {
            if ("string" == typeof a && a.length && a.match(/^[\{\[].*[\}\]]$/)) if (b) try {
                a = new Function("return " + a)()
            } catch (c) {} finally {
                return a
            } else a = new Function("return " + a)();
            return a
        },
        "sliceObj": function (b, c, d) {
            var e, f, g = {};
            if (!a.isArray(c) || !c.length) return g;
            for (var h = 0; h < c.length; h++) e = c[h],
            b.hasOwnProperty(e) && (g[e] = b[e]),
            d !== !0 && (f = e.toLowerCase(), b.hasOwnProperty(f) && (g[e] = b[f]));
            return g
        },
        "getConfigData": function (b) {
            var c = {};
            return a.each(b.data(), function (a, b) {
                ("object" != typeof b || b && "object" == typeof b && (b.constructor === Object || b.constructor === Array)) && (c[a] = b)
            }),
            c
        },
        "objectKeys": function (a) {
            if (Object.keys) return Object.keys(a);
            if (a !== Object(a)) throw new TypeError("Object.keys called on a non-object");
            var b, c = [];
            for (b in a) Object.prototype.hasOwnProperty.call(a, b) && c.push(b);
            return c
        },
        "escape": function (b) {
            return a("<div>").text(b).html()
        },
        "itemsByValue": function (b, c, d) {
            if (!c || null === b) return [];
            if ("function" != typeof d) {
                var e = d || "value";
                d = function (a) {
                    return a[e]
                }
            }
            var f = a.isArray(b),
                g = [],
                h = this;
            return a.each(c, function (c, e) {
                    if (e.children) g = g.concat(h.itemsByValue(b, e.children, d));
                    else if (f) a.grep(b, function (a) {
                        return a == (e && "object" == typeof e ? d(e) : e)
                    }).length && g.push(e);
                    else {
                        var i = e && "object" == typeof e ? d(e) : e;
                        b == i && g.push(e)
                    }
                }),
            g
        },
        "createInput": function (b) {
            var c, d, e, f = b.type;
            return "date" === f && ("inline" === b.mode ? a.fn.editabletypes.datefield ? f = "datefield" : a.fn.editabletypes.dateuifield && (f = "dateuifield") : a.fn.editabletypes.date ? f = "date" : a.fn.editabletypes.dateui && (f = "dateui"), "date" !== f || a.fn.editabletypes.date || (f = "combodate")),
            "datetime" === f && "inline" === b.mode && (f = "datetimefield"),
            "wysihtml5" !== f || a.fn.editabletypes[f] || (f = "textarea"),
            "function" == typeof a.fn.editabletypes[f] ? (c = a.fn.editabletypes[f], d = this.sliceObj(b, this.objectKeys(c.defaults)), e = new c(d)) : (a.error("Unknown type: " + f), !1)
        },
        "supportsTransitions": function () {
            var a = document.body || document.documentElement,
                b = a.style,
                c = "transition",
                d = ["Moz", "Webkit", "Khtml", "O", "ms"];
            if ("string" == typeof b[c]) return !0;
            c = c.charAt(0).toUpperCase() + c.substr(1);
            for (var e = 0; e < d.length; e++) if ("string" == typeof b[d[e] + c]) return !0;
            return !1
        }
    }
}(window.jQuery),




function (a) {
    "use strict";
    var b = function (a, b) {
        this.init(a, b)
    },
        c = function (a, b) {
            this.init(a, b)
        };
    b.prototype = {
            "containerName": null,
            "containerDataName": null,
            "innerCss": null,
            "containerClass": "editable-container editable-popup",
            "defaults": {},
            "init": function (c, d) {
                this.$element = a(c),
                this.options = a.extend({}, a.fn.editableContainer.defaults, d),
                this.splitOptions(),
                this.formOptions.scope = this.$element[0],
                this.initContainer(),
                this.delayedHide = !1,
                this.$element.on("destroyed", a.proxy(function () {
                    this.destroy()
                }, this)),
                a(document).data("editable-handlers-attached") || (a(document).on("keyup.editable", function (b) {
                    27 === b.which && a(".editable-open").editableContainer("hide")
                }), a(document).on("click.editable", function (c) {
                    var d, e = a(c.target),
                        f = [".editable-container", ".ui-datepicker-header", ".datepicker", ".modal-backdrop", ".bootstrap-wysihtml5-insert-image-modal", ".bootstrap-wysihtml5-insert-link-modal"];
                    if (a.contains(document.documentElement, c.target) && !e.is(document)) {
                            for (d = 0; d < f.length; d++) if (e.is(f[d]) || e.parents(f[d]).length) return;
                            b.prototype.closeOthers(c.target)
                        }
                }), a(document).data("editable-handlers-attached", !0))
            },
            "splitOptions": function () {
                if (this.containerOptions = {}, this.formOptions = {}, !a.fn[this.containerName]) throw new Error(this.containerName + " not found. Have you included corresponding js file?");
                for (var b in this.options) b in this.defaults ? this.containerOptions[b] = this.options[b] : this.formOptions[b] = this.options[b]
            },
            "tip": function () {
                return this.container() ? this.container().$tip : null
            },
            "container": function () {
                var a;
                return this.containerDataName && (a = this.$element.data(this.containerDataName)) ? a : a = this.$element.data(this.containerName)
            },
            "call": function () {
                this.$element[this.containerName].apply(this.$element, arguments)
            },
            "initContainer": function () {
                this.call(this.containerOptions)
            },
            "renderForm": function () {
                this.$form.editableform(this.formOptions).on({
                    "save": a.proxy(this.save, this),
                    "nochange": a.proxy(function () {
                        this.hide("nochange")
                    }, this),
                    "cancel": a.proxy(function () {
                        this.hide("cancel")
                    }, this),
                    "show": a.proxy(function () {
                        this.delayedHide ? (this.hide(this.delayedHide.reason), this.delayedHide = !1) : this.setPosition()
                    }, this),
                    "rendering": a.proxy(this.setPosition, this),
                    "resize": a.proxy(this.setPosition, this),
                    "rendered": a.proxy(function () {
                        this.$element.triggerHandler("shown", a(this.options.scope).data("editable"))
                    }, this)
                }).editableform("render")
            },
            "show": function (b) {
                this.$element.addClass("editable-open"),
                b !== !1 && this.closeOthers(this.$element[0]),
                this.innerShow(),
                this.tip().addClass(this.containerClass),
                this.$form,
                this.$form = a("<div>"),
                this.tip().is(this.innerCss) ? this.tip().append(this.$form) : this.tip().find(this.innerCss).append(this.$form),
                this.renderForm()
            },
            "hide": function (a) {
                if (this.tip() && this.tip().is(":visible") && this.$element.hasClass("editable-open")) {
                    if (this.$form.data("editableform").isSaving) return void(this.delayedHide = {
                        "reason": a
                    });
                    this.delayedHide = !1,
                    this.$element.removeClass("editable-open"),
                    this.innerHide(),
                    this.$element.triggerHandler("hidden", a || "manual")
                }
            },
            "innerShow": function () {},
            "innerHide": function () {},
            "toggle": function (a) {
                this.container() && this.tip() && this.tip().is(":visible") ? this.hide() : this.show(a)
            },
            "setPosition": function () {},
            "save": function (a, b) {
                this.$element.triggerHandler("save", b),
                this.hide("save")
            },
            "option": function (a, b) {
                this.options[a] = b,
                a in this.containerOptions ? (this.containerOptions[a] = b, this.setContainerOption(a, b)) : (this.formOptions[a] = b, this.$form && this.$form.editableform("option", a, b))
            },
            "setContainerOption": function (a, b) {
                this.call("option", a, b)
            },
            "destroy": function () {
                this.hide(),
                this.innerDestroy(),
                this.$element.off("destroyed"),
                this.$element.removeData("editableContainer")
            },
            "innerDestroy": function () {},
            "closeOthers": function (b) {
                a(".editable-open").each(function (c, d) {
                    if (d !== b && !a(d).find(b).length) {
                        var e = a(d),
                            f = e.data("editableContainer");
                        f && ("cancel" === f.options.onblur ? e.data("editableContainer").hide("onblur") : "submit" === f.options.onblur && e.data("editableContainer").tip().find("form").submit())
                    }
                })
            },
            "activate": function () {
                this.tip && this.tip().is(":visible") && this.$form && this.$form.data("editableform").input.activate()
            }
        },
    a.fn.editableContainer = function (d) {
            var e = arguments;
            return this.each(function () {
                var f = a(this),
                    g = "editableContainer",
                    h = f.data(g),
                    i = "object" == typeof d && d,
                    j = "inline" === i.mode ? c : b;
                h || f.data(g, h = new j(this, i)),
                "string" == typeof d && h[d].apply(h, Array.prototype.slice.call(e, 1))
            })
        },
    a.fn.editableContainer.Popup = b,
    a.fn.editableContainer.Inline = c,
    a.fn.editableContainer.defaults = {
            "value": null,
            "placement": "top",
            "autohide": !0,
            "onblur": "cancel",
            "anim": !1,
            "mode": "popup"
        },
    jQuery.event.special.destroyed = {
            "remove": function (a) {
                a.handler && a.handler()
            }
        }
}(window.jQuery),


function (a) {
    "use strict";
    a.extend(a.fn.editableContainer.Inline.prototype, a.fn.editableContainer.Popup.prototype, {
        "containerName": "editableform",
        "innerCss": ".editable-inline",
        "containerClass": "editable-container editable-inline",
        "initContainer": function () {
            this.$tip = a("<span></span>"),
            this.options.anim || (this.options.anim = 0)
        },
        "splitOptions": function () {
            this.containerOptions = {},
            this.formOptions = this.options
        },
        "tip": function () {
            return this.$tip
        },
        "innerShow": function () {
            this.$element.hide(),
            this.tip().insertAfter(this.$element).show()
        },
        "innerHide": function () {
            this.$tip.hide(this.options.anim, a.proxy(function () {
                this.$element.show(),
                this.innerDestroy()
            }, this))
        },
        "innerDestroy": function () {
            this.tip() && this.tip().empty().remove()
        }
    })
}(window.jQuery),


function (a) {
    "use strict";
    var b = function (b, c) {
        this.$element = a(b),
        this.options = a.extend({}, a.fn.editable.defaults, c, a.fn.editableutils.getConfigData(this.$element)),
        this.options.selector ? this.initLive() : this.init(),
        this.options.highlight && !a.fn.editableutils.supportsTransitions() && (this.options.highlight = !1)
    };
    b.prototype = {
        "constructor": b,
        "init": function () {
            var b, c = !1;
            if (this.options.name = this.options.name || this.$element.attr("id"), this.options.scope = this.$element[0], this.input = a.fn.editableutils.createInput(this.options), this.input) {
                switch (void 0 === this.options.value || null === this.options.value ? (this.value = this.input.html2value(a.trim(this.$element.html())), c = !0) : (this.options.value = a.fn.editableutils.tryParseJson(this.options.value, !0), this.value = "string" == typeof this.options.value ? this.input.str2value(this.options.value) : this.options.value), this.$element.addClass("editable"), "textarea" === this.input.type && this.$element.addClass("editable-pre-wrapped"), "manual" !== this.options.toggle ? (this.$element.addClass("editable-click"), this.$element.on(this.options.toggle + ".editable", a.proxy(function (a) {
                    if (this.options.disabled || a.preventDefault(), "mouseenter" === this.options.toggle) this.show();
                    else {
                        var b = "click" !== this.options.toggle;
                        this.toggle(b)
                    }
                }, this))) : this.$element.attr("tabindex", -1), "function" == typeof this.options.display && (this.options.autotext = "always"), this.options.autotext) {
                case "always":
                    b = !0;
                    break;
                case "auto":
                    b = !a.trim(this.$element.text()).length && null !== this.value && void 0 !== this.value && !c;
                    break;
                default:
                    b = !1
                }
                a.when(b ? this.render() : !0).then(a.proxy(function () {
                    this.options.disabled ? this.disable() : this.enable(),
                    this.$element.triggerHandler("init", this)
                }, this))
            }
        },
        "initLive": function () {
            var b = this.options.selector;
            this.options.selector = !1,
            this.options.autotext = "never",
            this.$element.on(this.options.toggle + ".editable", b, a.proxy(function (b) {
                var c = a(b.target);
                c.data("editable") || (c.hasClass(this.options.emptyclass) && c.empty(), c.editable(this.options).trigger(b))
            }, this))
        },
        "render": function (a) {
            return this.options.display !== !1 ? this.input.value2htmlFinal ? this.input.value2html(this.value, this.$element[0], this.options.display, a) : "function" == typeof this.options.display ? this.options.display.call(this.$element[0], this.value, a) : this.input.value2html(this.value, this.$element[0]) : void 0
        },
        "enable": function () {
            this.options.disabled = !1,
            this.$element.removeClass("editable-disabled"),
            this.handleEmpty(this.isEmpty),
            "manual" !== this.options.toggle && "-1" === this.$element.attr("tabindex") && this.$element.removeAttr("tabindex")
        },
        "disable": function () {
            this.options.disabled = !0,
            this.hide(),
            this.$element.addClass("editable-disabled"),
            this.handleEmpty(this.isEmpty),
            this.$element.attr("tabindex", -1)
        },
        "toggleDisabled": function () {
            this.options.disabled ? this.enable() : this.disable()
        },
        "option": function (b, c) {
            return b && "object" == typeof b ? void a.each(b, a.proxy(function (b, c) {
                this.option(a.trim(b), c)
            }, this)) : (this.options[b] = c, "disabled" === b ? c ? this.disable() : this.enable() : ("value" === b && this.setValue(c), this.container && this.container.option(b, c), void(this.input.option && this.input.option(b, c))))
        },
        "handleEmpty": function (b) {
            this.options.display !== !1 && (this.isEmpty = void 0 !== b ? b : "function" == typeof this.input.isEmpty ? this.input.isEmpty(this.$element) : "" === a.trim(this.$element.html()), this.options.disabled ? this.isEmpty && (this.$element.empty(), this.options.emptyclass && this.$element.removeClass(this.options.emptyclass)) : this.isEmpty ? (this.$element.html(this.options.emptytext), this.options.emptyclass && this.$element.addClass(this.options.emptyclass)) : this.options.emptyclass && this.$element.removeClass(this.options.emptyclass))
        },
        "show": function (b) {
            if (!this.options.disabled) {
                if (this.container) {
                    if (this.container.tip().is(":visible")) return
                } else {
                    var c = a.extend({}, this.options, {
                        "value": this.value,
                        "input": this.input
                    });
                    this.$element.editableContainer(c),
                    this.$element.on("save.internal", a.proxy(this.save, this)),
                    this.container = this.$element.data("editableContainer")
                }
                this.container.show(b)
            }
        },
        "hide": function () {
            this.container && this.container.hide()
        },
        "toggle": function (a) {
            this.container && this.container.tip().is(":visible") ? this.hide() : this.show(a)
        },
        "save": function (a, b) {
            if (this.options.unsavedclass) {
                var c = !1;
                c = c || "function" == typeof this.options.url,
                c = c || this.options.display === !1,
                c = c || void 0 !== b.response,
                c = c || this.options.savenochange && this.input.value2str(this.value) !== this.input.value2str(b.newValue),
                c ? this.$element.removeClass(this.options.unsavedclass) : this.$element.addClass(this.options.unsavedclass)
            }
            if (this.options.highlight) {
                var d = this.$element,
                    e = d.css("background-color");
                d.css("background-color", this.options.highlight),
                setTimeout(function () {
                        "transparent" === e && (e = ""),
                        d.css("background-color", e),
                        d.addClass("editable-bg-transition"),
                        setTimeout(function () {
                            d.removeClass("editable-bg-transition")
                        }, 1700)
                    }, 10)
            }
            this.setValue(b.newValue, !1, b.response)
        },
        "validate": function () {
            return "function" == typeof this.options.validate ? this.options.validate.call(this, this.value) : void 0
        },
        "setValue": function (b, c, d) {
            this.value = c ? this.input.str2value(b) : b,
            this.container && this.container.option("value", this.value),
            a.when(this.render(d)).then(a.proxy(function () {
                this.handleEmpty()
            }, this))
        },
        "activate": function () {
            this.container && this.container.activate()
        },
        "destroy": function () {
            this.disable(),
            this.container && this.container.destroy(),
            this.input.destroy(),
            "manual" !== this.options.toggle && (this.$element.removeClass("editable-click"), this.$element.off(this.options.toggle + ".editable")),
            this.$element.off("save.internal"),
            this.$element.removeClass("editable editable-open editable-disabled"),
            this.$element.removeData("editable")
        }
    },
    a.fn.editable = function (c) {
        var d = {},
            e = arguments,
            f = "editable";
        switch (c) {
            case "validate":
                return this.each(function () {
                    var b, c = a(this),
                        e = c.data(f);
                    e && (b = e.validate()) && (d[e.options.name] = b)
                }),
                d;
            case "getValue":
                return 2 === arguments.length && arguments[1] === !0 ? d = this.eq(0).data(f).value : this.each(function () {
                    var b = a(this),
                        c = b.data(f);
                    c && void 0 !== c.value && null !== c.value && (d[c.options.name] = c.input.value2submit(c.value))
                }),
                d;
            case "submit":
                var g = arguments[1] || {},
                    h = this,
                    i = this.editable("validate");
                if (a.isEmptyObject(i)) {
                        var j = {};
                        if (1 === h.length) {
                            var k = h.data("editable"),
                                l = {
                                    "name": k.options.name || "",
                                    "value": k.input.value2submit(k.value),
                                    "pk": "function" == typeof k.options.pk ? k.options.pk.call(k.options.scope) : k.options.pk
                                };
                            "function" == typeof k.options.params ? l = k.options.params.call(k.options.scope, l) : (k.options.params = a.fn.editableutils.tryParseJson(k.options.params, !0), a.extend(l, k.options.params)),
                            j = {
                                    "url": k.options.url,
                                    "data": l,
                                    "type": "POST"
                                },
                            g.success = g.success || k.options.success,
                            g.error = g.error || k.options.error
                        } else {
                            var m = this.editable("getValue");
                            j = {
                                "url": g.url,
                                "data": m,
                                "type": "POST"
                            }
                        }
                        j.success = "function" == typeof g.success ?
                        function (a) {
                            g.success.call(h, a, g)
                        } : a.noop,
                        j.error = "function" == typeof g.error ?
                        function () {
                            g.error.apply(h, arguments)
                        } : a.noop,
                        g.ajaxOptions && a.extend(j, g.ajaxOptions),
                        g.data && a.extend(j.data, g.data),
                        a.ajax(j)
                    } else "function" == typeof g.error && g.error.call(h, i);
                return this
            }
        return this.each(function () {
                var d = a(this),
                    g = d.data(f),
                    h = "object" == typeof c && c;
                return h && h.selector ? void(g = new b(this, h)) : (g || d.data(f, g = new b(this, h)), void("string" == typeof c && g[c].apply(g, Array.prototype.slice.call(e, 1))))
            })
    },
    a.fn.editable.defaults = {
        "type": "text",
        "disabled": !1,
        "toggle": "click",
        "emptytext": "Empty",
        "autotext": "auto",
        "value": null,
        "display": null,
        "emptyclass": "editable-empty",
        "unsavedclass": "editable-unsaved",
        "selector": null,
        "highlight": "#FFFF80"
    }
}(window.jQuery),



function (a) {
    "use strict";
    var b = function () {};
    a.fn.editableutils.inherit(b, a.fn.editabletypes.abstractinput),
    a.extend(b.prototype, {
        "render": function () {
            var b = a.Deferred();
            return this.error = null,
            this.onSourceReady(function () {
                this.renderList(),
                b.resolve()
            }, function () {
                this.error = this.options.sourceError,
                b.resolve()
            }),
            b.promise()
        },
        "html2value": function () {
            return null
        },
        "value2html": function (b, c, d, e) {
            var f = a.Deferred(),
                g = function () {
                    "function" == typeof d ? d.call(c, b, this.sourceData, e) : this.value2htmlFinal(b, c),
                    f.resolve()
                };
            return null === b ? g.call(this) : this.onSourceReady(g, function () {
                    f.resolve()
                }),
            f.promise()
        },
        "onSourceReady": function (b, c) {
            var d;
            if (a.isFunction(this.options.source) ? (d = this.options.source.call(this.options.scope), this.sourceData = null) : d = this.options.source, this.options.sourceCache && a.isArray(this.sourceData)) return void b.call(this);
            try {
                d = a.fn.editableutils.tryParseJson(d, !1)
            } catch (e) {
                return void c.call(this)
            }
            if ("string" == typeof d) {
                if (this.options.sourceCache) {
                    var f, g = d;
                    if (a(document).data(g) || a(document).data(g, {}), f = a(document).data(g), f.loading === !1 && f.sourceData) return this.sourceData = f.sourceData,
                    this.doPrepend(),
                    void b.call(this);
                    if (f.loading === !0) return f.callbacks.push(a.proxy(function () {
                        this.sourceData = f.sourceData,
                        this.doPrepend(),
                        b.call(this)
                    }, this)),
                    void f.err_callbacks.push(a.proxy(c, this));
                    f.loading = !0,
                    f.callbacks = [],
                    f.err_callbacks = []
                }
                var h = a.extend({
                    "url": d,
                    "type": "get",
                    "cache": !1,
                    "dataType": "json",
                    "success": a.proxy(function (d) {
                        f && (f.loading = !1),
                        this.sourceData = this.makeArray(d),
                        a.isArray(this.sourceData) ? (f && (f.sourceData = this.sourceData, a.each(f.callbacks, function () {
                            this.call()
                        })), this.doPrepend(), b.call(this)) : (c.call(this), f && a.each(f.err_callbacks, function () {
                            this.call()
                        }))
                    }, this),
                    "error": a.proxy(function () {
                        c.call(this),
                        f && (f.loading = !1, a.each(f.err_callbacks, function () {
                            this.call()
                        }))
                    }, this)
                }, this.options.sourceOptions);
                a.ajax(h)
            } else this.sourceData = this.makeArray(d),
            a.isArray(this.sourceData) ? (this.doPrepend(), b.call(this)) : c.call(this)
        },
        "doPrepend": function () {
            null !== this.options.prepend && void 0 !== this.options.prepend && (a.isArray(this.prependData) || (a.isFunction(this.options.prepend) && (this.options.prepend = this.options.prepend.call(this.options.scope)), this.options.prepend = a.fn.editableutils.tryParseJson(this.options.prepend, !0), "string" == typeof this.options.prepend && (this.options.prepend = {
                "": this.options.prepend
            }), this.prependData = this.makeArray(this.options.prepend)), a.isArray(this.prependData) && a.isArray(this.sourceData) && (this.sourceData = this.prependData.concat(this.sourceData)))
        },
        "renderList": function () {},
        "value2htmlFinal": function () {},
        "makeArray": function (b) {
            var c, d, e, f, g = [];
            if (!b || "string" == typeof b) return null;
            if (a.isArray(b)) {
                f = function (a, b) {
                    return d = {
                        "value": a,
                        "text": b
                    },
                    c++ >= 2 ? !1 : void 0
                };
                for (var h = 0; h < b.length; h++) e = b[h],
                "object" == typeof e ? (c = 0, a.each(e, f), 1 === c ? g.push(d) : c > 1 && (e.children && (e.children = this.makeArray(e.children)), g.push(e))) : g.push({
                    "value": e,
                    "text": e
                })
            } else a.each(b, function (a, b) {
                g.push({
                    "value": a,
                    "text": b
                })
            });
            return g
        },
        "option": function (a, b) {
            this.options[a] = b,
            "source" === a && (this.sourceData = null),
            "prepend" === a && (this.prependData = null)
        }
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.abstractinput.defaults, {
        "source": null,
        "prepend": !1,
        "sourceError": "Error when loading list",
        "sourceCache": !0,
        "sourceOptions": null
    }),
    a.fn.editabletypes.list = b
}(window.jQuery),


function (a) {
    "use strict";
    var b = function (a) {
        this.init("text", a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.abstractinput),
    a.extend(b.prototype, {
        "render": function () {
            this.renderClear(),
            this.setClass(),
            this.setAttr("placeholder")
        },
        "activate": function () {
            this.$input.is(":visible") && (this.$input.focus(), a.fn.editableutils.setCursorPosition(this.$input.get(0), this.$input.val().length), this.toggleClear && this.toggleClear())
        },
        "renderClear": function () {
            this.options.clear && (this.$clear = a('<span class="editable-clear-x"></span>'), this.$input.after(this.$clear).css("padding-right", 24).keyup(a.proxy(function (b) {
                if (!~a.inArray(b.keyCode, [40, 38, 9, 13, 27])) {
                    clearTimeout(this.t);
                    var c = this;
                    this.t = setTimeout(function () {
                        c.toggleClear(b)
                    }, 100)
                }
            }, this)).parent().css("position", "relative"), this.$clear.click(a.proxy(this.clear, this)))
        },
        "postrender": function () {},
        "toggleClear": function () {
            if (this.$clear) {
                var a = this.$input.val().length,
                    b = this.$clear.is(":visible");
                a && !b && this.$clear.show(),
                !a && b && this.$clear.hide()
            }
        },
        "clear": function () {
            this.$clear.hide(),
            this.$input.val("").focus()
        }
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.abstractinput.defaults, {
        "tpl": '<input type="text">',
        "placeholder": null,
        "clear": !0
    }),
    a.fn.editabletypes.text = b
}(window.jQuery),


function (a) {
    "use strict";
    var b = function (a) {
        this.init("textarea", a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.abstractinput),
    a.extend(b.prototype, {
        "render": function () {
            this.setClass(),
            this.setAttr("placeholder"),
            this.setAttr("rows"),
            this.$input.keydown(function (b) {
                b.ctrlKey && 13 === b.which && a(this).closest("form").submit()
            })
        },
        "activate": function () {
            a.fn.editabletypes.text.prototype.activate.call(this)
        }
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.abstractinput.defaults, {
        "tpl": "<textarea></textarea>",
        "inputclass": "input-large",
        "placeholder": null,
        "rows": 7
    }),
    a.fn.editabletypes.textarea = b
}(window.jQuery),


function (a) {
    "use strict";
    var b = function (a) {
        this.init("select", a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.list),
    a.extend(b.prototype, {
        "renderList": function () {
            this.$input.empty();
            var b = function (c, d) {
                var e;
                if (a.isArray(d)) for (var f = 0; f < d.length; f++) e = {},
                d[f].children ? (e.label = d[f].text, c.append(b(a("<optgroup>", e), d[f].children))) : (e.value = d[f].value, d[f].disabled && (e.disabled = !0), c.append(a("<option>", e).text(d[f].text)));
                return c
            };
            b(this.$input, this.sourceData),
            this.setClass(),
            this.$input.on("keydown.editable", function (b) {
                13 === b.which && a(this).closest("form").submit()
            })
        },
        "value2htmlFinal": function (b, c) {
            var d = "",
                e = a.fn.editableutils.itemsByValue(b, this.sourceData);
            e.length && (d = e[0].text),
            a.fn.editabletypes.abstractinput.prototype.value2html.call(this, d, c)
        },
        "autosubmit": function () {
            this.$input.off("keydown.editable").on("change.editable", function () {
                a(this).closest("form").submit()
            })
        }
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.list.defaults, {
        "tpl": "<select></select>"
    }),
    a.fn.editabletypes.select = b
}(window.jQuery),




function (a) {
    "use strict";
    var b = function (a) {
        this.init("email", a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.text),
    b.defaults = a.extend({}, a.fn.editabletypes.text.defaults, {
        "tpl": '<input type="email">'
    }),
    a.fn.editabletypes.email = b
}(window.jQuery),






function (a) {
    "use strict";
    var b = function (a) {
        this.init("range", a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.number),
    a.extend(b.prototype, {
        "render": function () {
            this.$input = this.$tpl.filter("input"),
            this.setClass(),
            this.setAttr("min"),
            this.setAttr("max"),
            this.setAttr("step"),
            this.$input.on("input", function () {
                a(this).siblings("output").text(a(this).val())
            })
        },
        "activate": function () {
            this.$input.focus()
        }
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.number.defaults, {
        "tpl": '<input type="range"><output style="width: 30px; display: inline-block"></output>',
        "inputclass": "input-medium"
    }),
    a.fn.editabletypes.range = b
}(window.jQuery),




function (a) {
    "use strict";
    var b = function (c) {
        if (this.init("select2", c, b.defaults), c.select2 = c.select2 || {}, this.sourceData = null, c.placeholder && (c.select2.placeholder = c.placeholder), !c.select2.tags && c.source) {
            var d = c.source;
            a.isFunction(c.source) && (d = c.source.call(c.scope)),
            "string" == typeof d ? (c.select2.ajax = c.select2.ajax || {}, c.select2.ajax.data || (c.select2.ajax.data = function (a) {
                return {
                    "query": a
                }
            }), c.select2.ajax.results || (c.select2.ajax.results = function (a) {
                return {
                    "results": a
                }
            }), c.select2.ajax.url = d) : (this.sourceData = this.convertSource(d), c.select2.data = this.sourceData)
        }
        if (this.options.select2 = a.extend({}, b.defaults.select2, c.select2), this.isMultiple = this.options.select2.tags || this.options.select2.multiple, this.isRemote = "ajax" in this.options.select2, this.idFunc = this.options.select2.id, "function" != typeof this.idFunc) {
            var e = this.idFunc || "id";
            this.idFunc = function (a) {
                return a[e]
            }
        }
        this.formatSelection = this.options.select2.formatSelection,
        "function" != typeof this.formatSelection && (this.formatSelection = function (a) {
            return a.text
        })
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.abstractinput),
    a.extend(b.prototype, {
        "render": function () {
            this.setClass(),
            this.isRemote && this.$input.on("select2-loaded", a.proxy(function (a) {
                this.sourceData = a.items.results
            }, this)),
            this.isMultiple && this.$input.on("change", function () {
                a(this).closest("form").parent().triggerHandler("resize")
            })
        },
        "value2html": function (c, d) {
            var e, f = "",
                g = this;
            this.options.select2.tags ? e = c : this.sourceData && (e = a.fn.editableutils.itemsByValue(c, this.sourceData, this.idFunc)),
            a.isArray(e) ? (f = [], a.each(e, function (a, b) {
                    f.push(b && "object" == typeof b ? g.formatSelection(b) : b)
                })) : e && (f = g.formatSelection(e)),
            f = a.isArray(f) ? f.join(this.options.viewseparator) : f,
            b.superclass.value2html.call(this, f, d)
        },
        "html2value": function (a) {
            return this.options.select2.tags ? this.str2value(a, this.options.viewseparator) : null
        },
        "value2input": function (b) {
            if (a.isArray(b) && (b = b.join(this.getSeparator())), this.$input.data("select2") ? this.$input.val(b).trigger("change", !0) : (this.$input.val(b), this.$input.select2(this.options.select2)), this.isRemote && !this.isMultiple && !this.options.select2.initSelection) {
                var c = this.options.select2.id,
                    d = this.options.select2.formatSelection;
                if (!c && !d) {
                        var e = a(this.options.scope);
                        if (!e.data("editable").isEmpty) {
                            var f = {
                                "id": b,
                                "text": e.text()
                            };
                            this.$input.select2("data", f)
                        }
                    }
            }
        },
        "input2value": function () {
            return this.$input.select2("val")
        },
        "str2value": function (b, c) {
            if ("string" != typeof b || !this.isMultiple) return b;
            c = c || this.getSeparator();
            var d, e, f;
            if (null === b || b.length < 1) return null;
            for (d = b.split(c), e = 0, f = d.length; f > e; e += 1) d[e] = a.trim(d[e]);
            return d
        },
        "autosubmit": function () {
            this.$input.on("change", function (b, c) {
                c || a(this).closest("form").submit()
            })
        },
        "getSeparator": function () {
            return this.options.select2.separator || a.fn.select2.defaults.separator
        },
        "convertSource": function (b) {
            if (a.isArray(b) && b.length && void 0 !== b[0].value) for (var c = 0; c < b.length; c++) void 0 !== b[c].value && (b[c].id = b[c].value, delete b[c].value);
            return b
        },
        "destroy": function () {
            this.$input.data("select2") && this.$input.select2("destroy")
        }
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.abstractinput.defaults, {
        "tpl": '<input type="hidden">',
        "select2": null,
        "placeholder": null,
        "source": null,
        "viewseparator": ", "
    }),
    a.fn.editabletypes.select2 = b
}(window.jQuery),




function (a) {
    "use strict";
    var b = a.fn.editableform.Constructor.prototype.initInput;
    a.extend(a.fn.editableform.Constructor.prototype, {
        "initTemplate": function () {
            this.$form = a(a.fn.editableform.template),
            this.$form.find(".control-group").addClass("form-group"),
            this.$form.find(".editable-error-block").addClass("help-block")
        },
        "initInput": function () {
            b.apply(this);
            var c = null === this.input.options.inputclass || this.input.options.inputclass === !1,
                d = "input-sm",
                e = "text,select,textarea,password,email,url,tel,number,range,time,typeaheadjs".split(",");~a.inArray(this.input.type, e) && (this.input.$input.addClass("form-control"), c && (this.input.options.inputclass = d, this.input.$input.addClass(d)));
            for (var f = this.$form.find(".editable-buttons"), g = c ? [d] : this.input.options.inputclass.split(" "), h = 0; h < g.length; h++)"input-lg" === g[h].toLowerCase() && f.find("button").removeClass("btn-sm").addClass("btn-lg")
        }
    }),
    a.fn.editableform.buttons = '<button type="submit" class="btn btn-primary btn-sm editable-submit"><i class="glyphicon glyphicon-ok"></i></button><button type="button" class="btn btn-default btn-sm editable-cancel"><i class="glyphicon glyphicon-remove"></i></button>',
    a.fn.editableform.errorGroupClass = "has-error",
    a.fn.editableform.errorBlockClass = null,
    a.fn.editableform.engine = "bs3"
}(window.jQuery),


function (a) {
    "use strict";
    a.extend(a.fn.editableContainer.Popup.prototype, {
        "containerName": "popover",
        "containerDataName": "bs.popover",
        "innerCss": ".popover-content",
        "defaults": a.fn.popover.Constructor.DEFAULTS,
        "initContainer": function () {
            a.extend(this.containerOptions, {
                "trigger": "manual",
                "selector": !1,
                "content": " ",
                "template": this.defaults.template
            });
            var b;
            this.$element.data("template") && (b = this.$element.data("template"), this.$element.removeData("template")),
            this.call(this.containerOptions),
            b && this.$element.data("template", b)
        },
        "innerShow": function () {
            this.call("show")
        },
        "innerHide": function () {
            this.call("hide")
        },
        "innerDestroy": function () {
            this.call("destroy")
        },
        "setContainerOption": function (a, b) {
            this.container().options[a] = b
        },
        "setPosition": function () {
            (function () {
                var a = this.tip(),
                    b = "function" == typeof this.options.placement ? this.options.placement.call(this, a[0], this.$element[0]) : this.options.placement,
                    c = /\s?auto?\s?/i,
                    d = c.test(b);
                d && (b = b.replace(c, "") || "top");
                var e = this.getPosition(),
                    f = a[0].offsetWidth,
                    g = a[0].offsetHeight;
                if (d) {
                        var h = this.$element.parent(),
                            i = b,
                            j = document.documentElement.scrollTop || document.body.scrollTop,
                            k = "body" == this.options.container ? window.innerWidth : h.outerWidth(),
                            l = "body" == this.options.container ? window.innerHeight : h.outerHeight(),
                            m = "body" == this.options.container ? 0 : h.offset().left;
                        b = "bottom" == b && e.top + e.height + g - j > l ? "top" : "top" == b && e.top - j - g < 0 ? "bottom" : "right" == b && e.right + f > k ? "left" : "left" == b && e.left - f < m ? "right" : b,
                        a.removeClass(i).addClass(b)
                    }
                var n = this.getCalculatedOffset(b, e, f, g);
                this.applyPlacement(n, b)
            }).call(this.container())
        }
    })
}(window.jQuery),




function (a) {
    "use strict";
    var b = function (a) {
        this.init("datefield", a, b.defaults),
        this.initPicker(a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.date),
    a.extend(b.prototype, {
        "render": function () {
            this.$input = this.$tpl.find("input"),
            this.setClass(),
            this.setAttr("placeholder"),
            this.$tpl.bdatepicker(this.options.datepicker),
            this.$input.off("focus keydown"),
            this.$input.keyup(a.proxy(function () {
                this.$tpl.removeData("date"),
                this.$tpl.bdatepicker("update")
            }, this))
        },
        "value2input": function (a) {
            this.$input.val(a ? this.dpg.formatDate(a, this.parsedViewFormat, this.options.datepicker.language) : ""),
            this.$tpl.bdatepicker("update")
        },
        "input2value": function () {
            return this.html2value(this.$input.val())
        },
        "activate": function () {
            a.fn.editabletypes.text.prototype.activate.call(this)
        },
        "autosubmit": function () {}
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.date.defaults, {
        "tpl": '<div class="input-append date"><input type="text"/><span class="add-on"><i class="icon-th"></i></span></div>',
        "inputclass": "input-small",
        "datepicker": {
            "weekStart": 0,
            "startView": 0,
            "minViewMode": 0,
            "autoclose": !0
        }
    }),
    a.fn.editabletypes.datefield = b
}(window.jQuery),




function (a) {
    "use strict";
    var b = function (a) {
        this.init("datetimefield", a, b.defaults),
        this.initPicker(a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.datetime),
    a.extend(b.prototype, {
        "render": function () {
            this.$input = this.$tpl.find("input"),
            this.setClass(),
            this.setAttr("placeholder"),
            this.$tpl.datetimepicker(this.options.datetimepicker),
            this.$input.off("focus keydown"),
            this.$input.keyup(a.proxy(function () {
                this.$tpl.removeData("date"),
                this.$tpl.datetimepicker("update")
            }, this))
        },
        "value2input": function (a) {
            this.$input.val(this.value2html(a)),
            this.$tpl.datetimepicker("update")
        },
        "input2value": function () {
            return this.html2value(this.$input.val())
        },
        "activate": function () {
            a.fn.editabletypes.text.prototype.activate.call(this)
        },
        "autosubmit": function () {}
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.datetime.defaults, {
        "tpl": '<div class="input-append date"><input type="text"/><span class="add-on"><i class="icon-th"></i></span></div>',
        "inputclass": "input-medium",
        "datetimepicker": {
            "todayHighlight": !1,
            "autoclose": !0
        }
    }),
    a.fn.editabletypes.datetimefield = b
}(window.jQuery),





function (a) {
    "use strict";
    var b = function (a) {
        this.init("typeaheadjs", a, b.defaults)
    };
    a.fn.editableutils.inherit(b, a.fn.editabletypes.text),
    a.extend(b.prototype, {
        "render": function () {
            this.renderClear(),
            this.setClass(),
            this.setAttr("placeholder"),
            this.$input.typeahead(this.options.typeahead),
            "bs3" === a.fn.editableform.engine && (this.$input.hasClass("input-sm") && this.$input.siblings("input.tt-hint").addClass("input-sm"), this.$input.hasClass("input-lg") && this.$input.siblings("input.tt-hint").addClass("input-lg"))
        }
    }),
    b.defaults = a.extend({}, a.fn.editabletypes.list.defaults, {
        "tpl": '<input type="text">',
        "typeahead": null,
        "clear": !0
    }),
    a.fn.editabletypes.typeaheadjs = b
}(window.jQuery),


function (a) {
    a.extend(a.fn, {
        "validate": function (b) {
            if (!this.length) return void(b && b.debug && window.console);
            var c = a.data(this[0], "validator");
            return c ? c : (this.attr("novalidate", "novalidate"), c = new a.validator(b, this[0]), a.data(this[0], "validator", c), c.settings.onsubmit && (this.validateDelegate(":submit", "click", function (b) {
                c.settings.submitHandler && (c.submitButton = b.target),
                a(b.target).hasClass("cancel") && (c.cancelSubmit = !0),
                void 0 !== a(b.target).attr("formnovalidate") && (c.cancelSubmit = !0)
            }), this.submit(function (b) {
                function d() {
                    var d;
                    return c.settings.submitHandler ? (c.submitButton && (d = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)), c.settings.submitHandler.call(c, c.currentForm, b), c.submitButton && d.remove(), !1) : !0
                }
                return c.settings.debug && b.preventDefault(),
                c.cancelSubmit ? (c.cancelSubmit = !1, d()) : c.form() ? c.pendingRequest ? (c.formSubmitted = !0, !1) : d() : (c.focusInvalid(), !1)
            })), c)
        },
        "valid": function () {
            if (a(this[0]).is("form")) return this.validate().form();
            var b = !0,
                c = a(this[0].form).validate();
            return this.each(function () {
                    b = b && c.element(this)
                }),
            b
        },
        "removeAttrs": function (b) {
            var c = {},
                d = this;
            return a.each(b.split(/\s/), function (a, b) {
                    c[b] = d.attr(b),
                    d.removeAttr(b)
                }),
            c
        },
        "rules": function (b, c) {
            var d = this[0];
            if (b) {
                var e = a.data(d.form, "validator").settings,
                    f = e.rules,
                    g = a.validator.staticRules(d);
                switch (b) {
                    case "add":
                        a.extend(g, a.validator.normalizeRule(c)),
                        delete g.messages,
                        f[d.name] = g,
                        c.messages && (e.messages[d.name] = a.extend(e.messages[d.name], c.messages));
                        break;
                    case "remove":
                        if (!c) return delete f[d.name],
                        g;
                        var h = {};
                        return a.each(c.split(/\s/), function (a, b) {
                            h[b] = g[b],
                            delete g[b]
                        }),
                        h
                    }
            }
            var i = a.validator.normalizeRules(a.extend({}, a.validator.classRules(d), a.validator.attributeRules(d), a.validator.dataRules(d), a.validator.staticRules(d)), d);
            if (i.required) {
                var j = i.required;
                delete i.required,
                i = a.extend({
                    "required": j
                }, i)
            }
            return i
        }
    }),
    a.extend(a.expr[":"], {
        "blank": function (b) {
            return !a.trim("" + a(b).val())
        },
        "filled": function (b) {
            return !!a.trim("" + a(b).val())
        },
        "unchecked": function (b) {
            return !a(b).prop("checked")
        }
    }),
    a.validator = function (b, c) {
        this.settings = a.extend(!0, {}, a.validator.defaults, b),
        this.currentForm = c,
        this.init()
    },
    a.validator.format = function (b, c) {
        return 1 === arguments.length ?
        function () {
            var c = a.makeArray(arguments);
            return c.unshift(b),
            a.validator.format.apply(this, c)
        } : (arguments.length > 2 && c.constructor !== Array && (c = a.makeArray(arguments).slice(1)), c.constructor !== Array && (c = [c]), a.each(c, function (a, c) {
            b = b.replace(new RegExp("\\{" + a + "\\}", "g"), function () {
                return c
            })
        }), b)
    },
    a.extend(a.validator, {
        "defaults": {
            "messages": {},
            "groups": {},
            "rules": {},
            "errorClass": "error",
            "validClass": "valid",
            "errorElement": "label",
            "focusInvalid": !0,
            "errorContainer": a([]),
            "errorLabelContainer": a([]),
            "onsubmit": !0,
            "ignore": ":hidden",
            "ignoreTitle": !1,
            "onfocusin": function (a) {
                this.lastActive = a,
                this.settings.focusCleanup && !this.blockFocusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), this.addWrapper(this.errorsFor(a)).hide())
            },
            "onfocusout": function (a) {
                this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a)
            },
            "onkeyup": function (a, b) {
                (9 !== b.which || "" !== this.elementValue(a)) && (a.name in this.submitted || a === this.lastElement) && this.element(a)
            },
            "onclick": function (a) {
                a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode)
            },
            "highlight": function (b, c, d) {
                "radio" === b.type ? this.findByName(b.name).addClass(c).removeClass(d) : a(b).addClass(c).removeClass(d)
            },
            "unhighlight": function (b, c, d) {
                "radio" === b.type ? this.findByName(b.name).removeClass(c).addClass(d) : a(b).removeClass(c).addClass(d)
            }
        },
        "setDefaults": function (b) {
            a.extend(a.validator.defaults, b)
        },
        "messages": {
            "required": "This field is required.",
            "remote": "Please fix this field.",
            "email": "Please enter a valid email address.",
            "url": "Please enter a valid URL.",
            "date": "Please enter a valid date.",
            "dateISO": "Please enter a valid date (ISO).",
            "number": "Please enter a valid number.",
            "digits": "Please enter only digits.",
            "creditcard": "Please enter a valid credit card number.",
            "equalTo": "Please enter the same value again.",
            "maxlength": a.validator.format("Please enter no more than {0} characters."),
            "minlength": a.validator.format("Please enter at least {0} characters."),
            "rangelength": a.validator.format("Please enter a value between {0} and {1} characters long."),
            "range": a.validator.format("Please enter a value between {0} and {1}."),
            "max": a.validator.format("Please enter a value less than or equal to {0}."),
            "min": a.validator.format("Please enter a value greater than or equal to {0}.")
        },
        "autoCreateRanges": !1,
        "prototype": {
            "init": function () {
                function b(b) {
                    var c = a.data(this[0].form, "validator"),
                        d = "on" + b.type.replace(/^validate/, "");
                    c.settings[d] && c.settings[d].call(c, this[0], b)
                }
                this.labelContainer = a(this.settings.errorLabelContainer),
                this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm),
                this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer),
                this.submitted = {},
                this.valueCache = {},
                this.pendingRequest = 0,
                this.pending = {},
                this.invalid = {},
                this.reset();
                var c = this.groups = {};
                a.each(this.settings.groups, function (b, d) {
                    "string" == typeof d && (d = d.split(/\s/)),
                    a.each(d, function (a, d) {
                        c[d] = b
                    })
                });
                var d = this.settings.rules;
                a.each(d, function (b, c) {
                    d[b] = a.validator.normalizeRule(c)
                }),
                a(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] ", "focusin focusout keyup", b).validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", b),
                this.settings.invalidHandler && a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
            },
            "form": function () {
                return this.checkForm(),
                a.extend(this.submitted, this.errorMap),
                this.invalid = a.extend({}, this.errorMap),
                this.valid() || a(this.currentForm).triggerHandler("invalid-form", [this]),
                this.showErrors(),
                this.valid()
            },
            "checkForm": function () {
                this.prepareForm();
                for (var a = 0, b = this.currentElements = this.elements(); b[a]; a++) this.check(b[a]);
                return this.valid()
            },
            "element": function (b) {
                b = this.validationTargetFor(this.clean(b)),
                this.lastElement = b,
                this.prepareElement(b),
                this.currentElements = a(b);
                var c = this.check(b) !== !1;
                return c ? delete this.invalid[b.name] : this.invalid[b.name] = !0,
                this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)),
                this.showErrors(),
                c
            },
            "showErrors": function (b) {
                if (b) {
                    a.extend(this.errorMap, b),
                    this.errorList = [];
                    for (var c in b) this.errorList.push({
                        "message": b[c],
                        "element": this.findByName(c)[0]
                    });
                    this.successList = a.grep(this.successList, function (a) {
                        return !(a.name in b)
                    })
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
            },
            "resetForm": function () {
                a.fn.resetForm && a(this.currentForm).resetForm(),
                this.submitted = {},
                this.lastElement = null,
                this.prepareForm(),
                this.hideErrors(),
                this.elements().removeClass(this.settings.errorClass).removeData("previousValue")
            },
            "numberOfInvalids": function () {
                return this.objectLength(this.invalid)
            },
            "objectLength": function (a) {
                var b = 0;
                for (var c in a) b++;
                return b
            },
            "hideErrors": function () {
                this.addWrapper(this.toHide).hide()
            },
            "valid": function () {
                return 0 === this.size()
            },
            "size": function () {
                return this.errorList.length
            },
            "focusInvalid": function () {
                if (this.settings.focusInvalid) try {
                    a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
                } catch (b) {}
            },
            "findLastActive": function () {
                var b = this.lastActive;
                return b && 1 === a.grep(this.errorList, function (a) {
                    return a.element.name === b.name
                }).length && b
            },
            "elements": function () {
                var b = this,
                    c = {};
                return a(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function () {
                        return !this.name && b.settings.debug && window.console,
                        this.name in c || !b.objectLength(a(this).rules()) ? !1 : (c[this.name] = !0, !0)
                    })
            },
            "clean": function (b) {
                return a(b)[0]
            },
            "errors": function () {
                var b = this.settings.errorClass.replace(" ", ".");
                return a(this.settings.errorElement + "." + b, this.errorContext)
            },
            "reset": function () {
                this.successList = [],
                this.errorList = [],
                this.errorMap = {},
                this.toShow = a([]),
                this.toHide = a([]),
                this.currentElements = a([])
            },
            "prepareForm": function () {
                this.reset(),
                this.toHide = this.errors().add(this.containers)
            },
            "prepareElement": function (a) {
                this.reset(),
                this.toHide = this.errorsFor(a)
            },
            "elementValue": function (b) {
                var c = a(b).attr("type"),
                    d = a(b).val();
                return "radio" === c || "checkbox" === c ? a("input[name='" + a(b).attr("name") + "']:checked").val() : "string" == typeof d ? d.replace(/\r/g, "") : d
            },
            "check": function (b) {
                b = this.validationTargetFor(this.clean(b));
                var c, d = a(b).rules(),
                    e = !1,
                    f = this.elementValue(b);
                for (var g in d) {
                        var h = {
                            "method": g,
                            "parameters": d[g]
                        };
                        try {
                            if (c = a.validator.methods[g].call(this, f, b, h.parameters), "dependency-mismatch" === c) {
                                e = !0;
                                continue
                            }
                            if (e = !1, "pending" === c) return void(this.toHide = this.toHide.not(this.errorsFor(b)));
                            if (!c) return this.formatAndAdd(b, h),
                            !1
                        } catch (i) {
                            throw this.settings.debug && window.console,
                            i
                        }
                    }
                return e ? void 0 : (this.objectLength(d) && this.successList.push(b), !0)
            },
            "customDataMessage": function (b, c) {
                return a(b).data("msg-" + c.toLowerCase()) || b.attributes && a(b).attr("data-msg-" + c.toLowerCase())
            },
            "customMessage": function (a, b) {
                var c = this.settings.messages[a];
                return c && (c.constructor === String ? c : c[b])
            },
            "findDefined": function () {
                for (var a = 0; a < arguments.length; a++) if (void 0 !== arguments[a]) return arguments[a];
                return void 0
            },
            "defaultMessage": function (b, c) {
                return this.findDefined(this.customMessage(b.name, c), this.customDataMessage(b, c), !this.settings.ignoreTitle && b.title || void 0, a.validator.messages[c], "<strong>Warning: No message defined for " + b.name + "</strong>")
            },
            "formatAndAdd": function (b, c) {
                var d = this.defaultMessage(b, c.method),
                    e = /\$?\{(\d+)\}/g;
                "function" == typeof d ? d = d.call(this, c.parameters, b) : e.test(d) && (d = a.validator.format(d.replace(e, "{$1}"), c.parameters)),
                this.errorList.push({
                        "message": d,
                        "element": b
                    }),
                this.errorMap[b.name] = d,
                this.submitted[b.name] = d
            },
            "addWrapper": function (a) {
                return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))),
                a
            },
            "defaultShowErrors": function () {
                var a, b;
                for (a = 0; this.errorList[a]; a++) {
                    var c = this.errorList[a];
                    this.settings.highlight && this.settings.highlight.call(this, c.element, this.settings.errorClass, this.settings.validClass),
                    this.showLabel(c.element, c.message)
                }
                if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (a = 0; this.successList[a]; a++) this.showLabel(this.successList[a]);
                if (this.settings.unhighlight) for (a = 0, b = this.validElements(); b[a]; a++) this.settings.unhighlight.call(this, b[a], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow),
                this.hideErrors(),
                this.addWrapper(this.toShow).show()
            },
            "validElements": function () {
                return this.currentElements.not(this.invalidElements())
            },
            "invalidElements": function () {
                return a(this.errorList).map(function () {
                    return this.element
                })
            },
            "showLabel": function (b, c) {
                var d = this.errorsFor(b);
                d.length ? (d.removeClass(this.settings.validClass).addClass(this.settings.errorClass), d.html(c)) : (d = a("<" + this.settings.errorElement + ">").attr("for", this.idOrName(b)).addClass(this.settings.errorClass).html(c || ""), this.settings.wrapper && (d = d.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.append(d).length || (this.settings.errorPlacement ? this.settings.errorPlacement(d, a(b)) : d.insertAfter(b))),
                !c && this.settings.success && (d.text(""), "string" == typeof this.settings.success ? d.addClass(this.settings.success) : this.settings.success(d, b)),
                this.toShow = this.toShow.add(d)
            },
            "errorsFor": function (b) {
                var c = this.idOrName(b);
                return this.errors().filter(function () {
                    return a(this).attr("for") === c
                })
            },
            "idOrName": function (a) {
                return this.groups[a.name] || (this.checkable(a) ? a.name : a.id || a.name)
            },
            "validationTargetFor": function (a) {
                return this.checkable(a) && (a = this.findByName(a.name).not(this.settings.ignore)[0]),
                a
            },
            "checkable": function (a) {
                return /radio|checkbox/i.test(a.type)
            },
            "findByName": function (b) {
                return a(this.currentForm).find("[name='" + b + "']")
            },
            "getLength": function (b, c) {
                switch (c.nodeName.toLowerCase()) {
                case "select":
                    return a("option:selected", c).length;
                case "input":
                    if (this.checkable(c)) return this.findByName(c.name).filter(":checked").length
                }
                return b.length
            },
            "depend": function (a, b) {
                return this.dependTypes[typeof a] ? this.dependTypes[typeof a](a, b) : !0
            },
            "dependTypes": {
                "boolean": function (a) {
                    return a
                },
                "string": function (b, c) {
                    return !!a(b, c.form).length
                },
                "function": function (a, b) {
                    return a(b)
                }
            },
            "optional": function (b) {
                var c = this.elementValue(b);
                return !a.validator.methods.required.call(this, c, b) && "dependency-mismatch"
            },
            "startRequest": function (a) {
                this.pending[a.name] || (this.pendingRequest++, this.pending[a.name] = !0)
            },
            "stopRequest": function (b, c) {
                this.pendingRequest--,
                this.pendingRequest < 0 && (this.pendingRequest = 0),
                delete this.pending[b.name],
                c && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), this.formSubmitted = !1) : !c && 0 === this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1)
            },
            "previousValue": function (b) {
                return a.data(b, "previousValue") || a.data(b, "previousValue", {
                    "old": null,
                    "valid": !0,
                    "message": this.defaultMessage(b, "remote")
                })
            }
        },
        "classRuleSettings": {
            "required": {
                "required": !0
            },
            "email": {
                "email": !0
            },
            "url": {
                "url": !0
            },
            "date": {
                "date": !0
            },
            "dateISO": {
                "dateISO": !0
            },
            "number": {
                "number": !0
            },
            "digits": {
                "digits": !0
            },
            "creditcard": {
                "creditcard": !0
            }
        },
        "addClassRules": function (b, c) {
            b.constructor === String ? this.classRuleSettings[b] = c : a.extend(this.classRuleSettings, b)
        },
        "classRules": function (b) {
            var c = {},
                d = a(b).attr("class");
            return d && a.each(d.split(" "), function () {
                    this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this])
                }),
            c
        },
        "attributeRules": function (b) {
            var c = {},
                d = a(b),
                e = d[0].getAttribute("type");
            for (var f in a.validator.methods) {
                    var g;
                    "required" === f ? (g = d.get(0).getAttribute(f), "" === g && (g = !0), g = !! g) : g = d.attr(f),
                    /min|max/.test(f) && (null === e || /number|range|text/.test(e)) && (g = Number(g)),
                    g ? c[f] = g : e === f && "range" !== e && (c[f] = !0)
                }
            return c.maxlength && /-1|2147483647|524288/.test(c.maxlength) && delete c.maxlength,
            c
        },
        "dataRules": function (b) {
            var c, d, e = {},
                f = a(b);
            for (c in a.validator.methods) d = f.data("rule-" + c.toLowerCase()),
            void 0 !== d && (e[c] = d);
            return e
        },
        "staticRules": function (b) {
            var c = {},
                d = a.data(b.form, "validator");
            return d.settings.rules && (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}),
            c
        },
        "normalizeRules": function (b, c) {
            return a.each(b, function (d, e) {
                if (e === !1) return void delete b[d];
                if (e.param || e.depends) {
                    var f = !0;
                    switch (typeof e.depends) {
                    case "string":
                        f = !! a(e.depends, c.form).length;
                        break;
                    case "function":
                        f = e.depends.call(c, c)
                    }
                    f ? b[d] = void 0 !== e.param ? e.param : !0 : delete b[d]
                }
            }),
            a.each(b, function (d, e) {
                b[d] = a.isFunction(e) ? e(c) : e
            }),
            a.each(["minlength", "maxlength"], function () {
                b[this] && (b[this] = Number(b[this]))
            }),
            a.each(["rangelength", "range"], function () {
                var c;
                b[this] && (a.isArray(b[this]) ? b[this] = [Number(b[this][0]), Number(b[this][1])] : "string" == typeof b[this] && (c = b[this].split(/[\s,]+/), b[this] = [Number(c[0]), Number(c[1])]))
            }),
            a.validator.autoCreateRanges && (b.min && b.max && (b.range = [b.min, b.max], delete b.min, delete b.max), b.minlength && b.maxlength && (b.rangelength = [b.minlength, b.maxlength], delete b.minlength, delete b.maxlength)),
            b
        },
        "normalizeRule": function (b) {
            if ("string" == typeof b) {
                var c = {};
                a.each(b.split(/\s/), function () {
                    c[this] = !0
                }),
                b = c
            }
            return b
        },
        "addMethod": function (b, c, d) {
            a.validator.methods[b] = c,
            a.validator.messages[b] = void 0 !== d ? d : a.validator.messages[b],
            c.length < 3 && a.validator.addClassRules(b, a.validator.normalizeRule(b))
        },
        "methods": {
            "required": function (b, c, d) {
                if (!this.depend(d, c)) return "dependency-mismatch";
                if ("select" === c.nodeName.toLowerCase()) {
                    var e = a(c).val();
                    return e && e.length > 0
                }
                return this.checkable(c) ? this.getLength(b, c) > 0 : a.trim(b).length > 0
            },
            "email": function (a, b) {
                return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(a)
            },
            "url": function (a, b) {
                return this.optional(b) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
            },
            "date": function (a, b) {
                return this.optional(b) || !/Invalid|NaN/.test(new Date(a).toString())
            },
            "dateISO": function (a, b) {
                return this.optional(b) || /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(a)
            },
            "number": function (a, b) {
                return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)
            },
            "digits": function (a, b) {
                return this.optional(b) || /^\d+$/.test(a)
            },
            "creditcard": function (a, b) {
                if (this.optional(b)) return "dependency-mismatch";
                if (/[^0-9 \-]+/.test(a)) return !1;
                var c = 0,
                    d = 0,
                    e = !1;
                a = a.replace(/\D/g, "");
                for (var f = a.length - 1; f >= 0; f--) {
                        var g = a.charAt(f);
                        d = parseInt(g, 10),
                        e && (d *= 2) > 9 && (d -= 9),
                        c += d,
                        e = !e
                    }
                return c % 10 === 0
            },
            "minlength": function (b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(a.trim(b), c);
                return this.optional(c) || e >= d
            },
            "maxlength": function (b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(a.trim(b), c);
                return this.optional(c) || d >= e
            },
            "rangelength": function (b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(a.trim(b), c);
                return this.optional(c) || e >= d[0] && e <= d[1]
            },
            "min": function (a, b, c) {
                return this.optional(b) || a >= c
            },
            "max": function (a, b, c) {
                return this.optional(b) || c >= a
            },
            "range": function (a, b, c) {
                return this.optional(b) || a >= c[0] && a <= c[1]
            },
            "equalTo": function (b, c, d) {
                var e = a(d);
                return this.settings.onfocusout && e.unbind(".validate-equalTo").bind("blur.validate-equalTo", function () {
                    a(c).valid()
                }),
                b === e.val()
            },
            "remote": function (b, c, d) {
                if (this.optional(c)) return "dependency-mismatch";
                var e = this.previousValue(c);
                if (this.settings.messages[c.name] || (this.settings.messages[c.name] = {}), e.originalMessage = this.settings.messages[c.name].remote, this.settings.messages[c.name].remote = e.message, d = "string" == typeof d && {
                    "url": d
                } || d, e.old === b) return e.valid;
                e.old = b;
                var f = this;
                this.startRequest(c);
                var g = {};
                return g[c.name] = b,
                a.ajax(a.extend(!0, {
                    "url": d,
                    "mode": "abort",
                    "port": "validate" + c.name,
                    "dataType": "json",
                    "data": g,
                    "success": function (d) {
                        f.settings.messages[c.name].remote = e.originalMessage;
                        var g = d === !0 || "true" === d;
                        if (g) {
                            var h = f.formSubmitted;
                            f.prepareElement(c),
                            f.formSubmitted = h,
                            f.successList.push(c),
                            delete f.invalid[c.name],
                            f.showErrors()
                        } else {
                            var i = {},
                                j = d || f.defaultMessage(c, "remote");
                            i[c.name] = e.message = a.isFunction(j) ? j(b) : j,
                            f.invalid[c.name] = !0,
                            f.showErrors(i)
                        }
                        e.valid = g,
                        f.stopRequest(c, g)
                    }
                }, d)),
                "pending"
            }
        }
    }),
    a.format = a.validator.format
}(jQuery),


function (a) {
    var b = {};
    if (a.ajaxPrefilter) a.ajaxPrefilter(function (a, c, d) {
        var e = a.port;
        "abort" === a.mode && (b[e] && b[e].abort(), b[e] = d)
    });
    else {
        var c = a.ajax;
        a.ajax = function (d) {
            var e = ("mode" in d ? d : a.ajaxSettings).mode,
                f = ("port" in d ? d : a.ajaxSettings).port;
            return "abort" === e ? (b[f] && b[f].abort(), b[f] = c.apply(this, arguments), b[f]) : c.apply(this, arguments)
        }
    }
}(jQuery),


function (a) {
    a.extend(a.fn, {
        "validateDelegate": function (b, c, d) {
            return this.bind(c, function (c) {
                var e = a(c.target);
                return e.is(b) ? d.apply(e, arguments) : void 0
            })
        }
    })
}(jQuery),


function () {
    function a(a) {
        return a.replace(/<.[^<>]*?>/g, " ").replace(/&nbsp;|&#160;/gi, " ").replace(/[.(),;:!?%#$'"_+=\/\-]*/g, "")
    }
    jQuery.validator.addMethod("maxWords", function (b, c, d) {
        return this.optional(c) || a(b).match(/\b\w+\b/g).length <= d
    }, jQuery.validator.format("Please enter {0} words or less.")),
    jQuery.validator.addMethod("minWords", function (b, c, d) {
        return this.optional(c) || a(b).match(/\b\w+\b/g).length >= d
    }, jQuery.validator.format("Please enter at least {0} words.")),
    jQuery.validator.addMethod("rangeWords", function (b, c, d) {
        var e = a(b),
            f = /\b\w+\b/g;
        return this.optional(c) || e.match(f).length >= d[0] && e.match(f).length <= d[1]
    }, jQuery.validator.format("Please enter between {0} and {1} words."))
}(),
jQuery.validator.addMethod("letterswithbasicpunc", function (a, b) {
    return this.optional(b) || /^[a-z\-.,()'"\s]+$/i.test(a)
}, "Letters or punctuation only please"),
jQuery.validator.addMethod("alphanumeric", function (a, b) {
    return this.optional(b) || /^\w+$/i.test(a)
}, "Letters, numbers, and underscores only please"),
jQuery.validator.addMethod("lettersonly", function (a, b) {
    return this.optional(b) || /^[a-z]+$/i.test(a)
}, "Letters only please"),
jQuery.validator.addMethod("nowhitespace", function (a, b) {
    return this.optional(b) || /^\S+$/i.test(a)
}, "No white space please"),
jQuery.validator.addMethod("ziprange", function (a, b) {
    return this.optional(b) || /^90[2-5]\d\{2\}-\d{4}$/.test(a)
}, "Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx"),
jQuery.validator.addMethod("zipcodeUS", function (a, b) {
    return this.optional(b) || /\d{5}-\d{4}$|^\d{5}$/.test(a)
}, "The specified US ZIP Code is invalid"),
jQuery.validator.addMethod("integer", function (a, b) {
    return this.optional(b) || /^-?\d+$/.test(a)
}, "A positive or negative non-decimal number please"),
jQuery.validator.addMethod("vinUS", function (a) {
    if (17 !== a.length) return !1;
    var b, c, d, e, f, g, h = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"],
        i = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9],
        j = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],
        k = 0;
    for (b = 0; 17 > b; b++) {
            if (e = j[b], d = a.slice(b, b + 1), 8 === b && (g = d), isNaN(d)) {
                for (c = 0; c < h.length; c++) if (d.toUpperCase() === h[c]) {
                    d = i[c],
                    d *= e,
                    isNaN(g) && 8 === c && (g = h[c]);
                    break
                }
            } else d *= e;
            k += d
        }
    return f = k % 11,
    10 === f && (f = "X"),
    f === g ? !0 : !1
}, "The specified vehicle identification number (VIN) is invalid."),
jQuery.validator.addMethod("dateITA", function (a, b) {
    var c = !1,
        d = /^\d{1,2}\/\d{1,2}\/\d{4}$/;
    if (d.test(a)) {
            var e = a.split("/"),
                f = parseInt(e[0], 10),
                g = parseInt(e[1], 10),
                h = parseInt(e[2], 10),
                i = new Date(h, g - 1, f);
            c = i.getFullYear() === h && i.getMonth() === g - 1 && i.getDate() === f ? !0 : !1
        } else c = !1;
    return this.optional(b) || c
}, "Please enter a correct date"),
jQuery.validator.addMethod("iban", function (a, b) {
    if (this.optional(b)) return !0;
    if (!/^([a-zA-Z0-9]{4} ){2,8}[a-zA-Z0-9]{1,4}|[a-zA-Z0-9]{12,34}$/.test(a)) return !1;
    var c = a.replace(/ /g, "").toUpperCase(),
        d = c.substring(0, 2),
        e = {
            "AL": "\\d{8}[\\dA-Z]{16}",
            "AD": "\\d{8}[\\dA-Z]{12}",
            "AT": "\\d{16}",
            "AZ": "[\\dA-Z]{4}\\d{20}",
            "BE": "\\d{12}",
            "BH": "[A-Z]{4}[\\dA-Z]{14}",
            "BA": "\\d{16}",
            "BR": "\\d{23}[A-Z][\\dA-Z]",
            "BG": "[A-Z]{4}\\d{6}[\\dA-Z]{8}",
            "CR": "\\d{17}",
            "HR": "\\d{17}",
            "CY": "\\d{8}[\\dA-Z]{16}",
            "CZ": "\\d{20}",
            "DK": "\\d{14}",
            "DO": "[A-Z]{4}\\d{20}",
            "EE": "\\d{16}",
            "FO": "\\d{14}",
            "FI": "\\d{14}",
            "FR": "\\d{10}[\\dA-Z]{11}\\d{2}",
            "GE": "[\\dA-Z]{2}\\d{16}",
            "DE": "\\d{18}",
            "GI": "[A-Z]{4}[\\dA-Z]{15}",
            "GR": "\\d{7}[\\dA-Z]{16}",
            "GL": "\\d{14}",
            "GT": "[\\dA-Z]{4}[\\dA-Z]{20}",
            "HU": "\\d{24}",
            "IS": "\\d{22}",
            "IE": "[\\dA-Z]{4}\\d{14}",
            "IL": "\\d{19}",
            "IT": "[A-Z]\\d{10}[\\dA-Z]{12}",
            "KZ": "\\d{3}[\\dA-Z]{13}",
            "KW": "[A-Z]{4}[\\dA-Z]{22}",
            "LV": "[A-Z]{4}[\\dA-Z]{13}",
            "LB": "\\d{4}[\\dA-Z]{20}",
            "LI": "\\d{5}[\\dA-Z]{12}",
            "LT": "\\d{16}",
            "LU": "\\d{3}[\\dA-Z]{13}",
            "MK": "\\d{3}[\\dA-Z]{10}\\d{2}",
            "MT": "[A-Z]{4}\\d{5}[\\dA-Z]{18}",
            "MR": "\\d{23}",
            "MU": "[A-Z]{4}\\d{19}[A-Z]{3}",
            "MC": "\\d{10}[\\dA-Z]{11}\\d{2}",
            "MD": "[\\dA-Z]{2}\\d{18}",
            "ME": "\\d{18}",
            "NL": "[A-Z]{4}\\d{10}",
            "NO": "\\d{11}",
            "PK": "[\\dA-Z]{4}\\d{16}",
            "PS": "[\\dA-Z]{4}\\d{21}",
            "PL": "\\d{24}",
            "PT": "\\d{21}",
            "RO": "[A-Z]{4}[\\dA-Z]{16}",
            "SM": "[A-Z]\\d{10}[\\dA-Z]{12}",
            "SA": "\\d{2}[\\dA-Z]{18}",
            "RS": "\\d{18}",
            "SK": "\\d{20}",
            "SI": "\\d{15}",
            "ES": "\\d{20}",
            "SE": "\\d{20}",
            "CH": "\\d{5}[\\dA-Z]{12}",
            "TN": "\\d{20}",
            "TR": "\\d{5}[\\dA-Z]{17}",
            "AE": "\\d{3}\\d{16}",
            "GB": "[A-Z]{4}\\d{14}",
            "VG": "[\\dA-Z]{4}\\d{16}"
        },
        f = e[d];
    if ("undefined" != typeof f) {
            var g = new RegExp("^[A-Z]{2}\\d{2}" + f + "$", "");
            if (!g.test(c)) return !1
        }
    for (var h, i = c.substring(4, c.length) + c.substring(0, 4), j = "", k = !0, l = 0; l < i.length; l++) h = i.charAt(l),
    "0" !== h && (k = !1),
    k || (j += "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(h));
    for (var m = "", n = "", o = 0; o < j.length; o++) {
            var p = j.charAt(o);
            n = "" + m + p,
            m = n % 97
        }
    return 1 === m
}, "Please specify a valid IBAN"),
jQuery.validator.addMethod("dateNL", function (a, b) {
    return this.optional(b) || /^(0?[1-9]|[12]\d|3[01])[\.\/\-](0?[1-9]|1[012])[\.\/\-]([12]\d)?(\d\d)$/.test(a)
}, "Please enter a correct date"),
jQuery.validator.addMethod("phoneNL", function (a, b) {
    return this.optional(b) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9]){8}$/.test(a)
}, "Please specify a valid phone number."),
jQuery.validator.addMethod("mobileNL", function (a, b) {
    return this.optional(b) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)6((\s|\s?\-\s?)?[0-9]){8}$/.test(a)
}, "Please specify a valid mobile number"),
jQuery.validator.addMethod("postalcodeNL", function (a, b) {
    return this.optional(b) || /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(a)
}, "Please specify a valid postal code"),
jQuery.validator.addMethod("bankaccountNL", function (a, b) {
    if (this.optional(b)) return !0;
    if (!/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(a)) return !1;
    for (var c = a.replace(/ /g, ""), d = 0, e = c.length, f = 0; e > f; f++) {
        var g = e - f,
            h = c.substring(f, f + 1);
        d += g * h
    }
    return d % 11 === 0
}, "Please specify a valid bank account number"),
jQuery.validator.addMethod("giroaccountNL", function (a, b) {
    return this.optional(b) || /^[0-9]{1,7}$/.test(a)
}, "Please specify a valid giro account number"),
jQuery.validator.addMethod("bankorgiroaccountNL", function (a, b) {
    return this.optional(b) || $.validator.methods.bankaccountNL.call(this, a, b) || $.validator.methods.giroaccountNL.call(this, a, b)
}, "Please specify a valid bank or giro account number"),
jQuery.validator.addMethod("time", function (a, b) {
    return this.optional(b) || /^([01]\d|2[0-3])(:[0-5]\d){1,2}$/.test(a)
}, "Please enter a valid time, between 00:00 and 23:59"),
jQuery.validator.addMethod("time12h", function (a, b) {
    return this.optional(b) || /^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(a)
}, "Please enter a valid time in 12-hour am/pm format"),
jQuery.validator.addMethod("phoneUS", function (a, b) {
    return a = a.replace(/\s+/g, ""),
    this.optional(b) || a.length > 9 && a.match(/^(\+?1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/)
}, "Please specify a valid phone number"),
jQuery.validator.addMethod("phoneUK", function (a, b) {
    return a = a.replace(/\(|\)|\s+|-/g, ""),
    this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?)|(?:\(?0))(?:\d{2}\)?\s?\d{4}\s?\d{4}|\d{3}\)?\s?\d{3}\s?\d{3,4}|\d{4}\)?\s?(?:\d{5}|\d{3}\s?\d{3})|\d{5}\)?\s?\d{4,5})$/)
}, "Please specify a valid phone number"),
jQuery.validator.addMethod("mobileUK", function (a, b) {
    return a = a.replace(/\(|\)|\s+|-/g, ""),
    this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)7(?:[45789]\d{2}|624)\s?\d{3}\s?\d{3})$/)
}, "Please specify a valid mobile number"),
jQuery.validator.addMethod("phonesUK", function (a, b) {
    return a = a.replace(/\(|\)|\s+|-/g, ""),
    this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)(?:1\d{8,9}|[23]\d{9}|7(?:[45789]\d{8}|624\d{6})))$/)
}, "Please specify a valid uk phone number"),
jQuery.validator.addMethod("postcodeUK", function (a, b) {
    return this.optional(b) || /^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\s?(0AA))$/i.test(a)
}, "Please specify a valid UK postcode"),
jQuery.validator.addMethod("strippedminlength", function (a, b, c) {
    return jQuery(a).text().length >= c
}, jQuery.validator.format("Please enter at least {0} characters")),
jQuery.validator.addMethod("email2", function (a, b) {
    return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(a)
}, jQuery.validator.messages.email),
jQuery.validator.addMethod("url2", function (a, b) {
    return this.optional(b) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
}, jQuery.validator.messages.url),
jQuery.validator.addMethod("creditcardtypes", function (a, b, c) {
    if (/[^0-9\-]+/.test(a)) return !1;
    a = a.replace(/\D/g, "");
    var d = 0;
    return c.mastercard && (d |= 1),
    c.visa && (d |= 2),
    c.amex && (d |= 4),
    c.dinersclub && (d |= 8),
    c.enroute && (d |= 16),
    c.discover && (d |= 32),
    c.jcb && (d |= 64),
    c.unknown && (d |= 128),
    c.all && (d = 255),
    1 & d && /^(5[12345])/.test(a) ? 16 === a.length : 2 & d && /^(4)/.test(a) ? 16 === a.length : 4 & d && /^(3[47])/.test(a) ? 15 === a.length : 8 & d && /^(3(0[012345]|[68]))/.test(a) ? 14 === a.length : 16 & d && /^(2(014|149))/.test(a) ? 15 === a.length : 32 & d && /^(6011)/.test(a) ? 16 === a.length : 64 & d && /^(3)/.test(a) ? 16 === a.length : 64 & d && /^(2131|1800)/.test(a) ? 15 === a.length : 128 & d ? !0 : !1
}, "Please enter a valid credit card number."),
jQuery.validator.addMethod("ipv4", function (a, b) {
    return this.optional(b) || /^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(a)
}, "Please enter a valid IP v4 address."),
jQuery.validator.addMethod("ipv6", function (a, b) {
    return this.optional(b) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(a)
}, "Please enter a valid IP v6 address."),
jQuery.validator.addMethod("pattern", function (a, b, c) {
    return this.optional(b) ? !0 : ("string" == typeof c && (c = new RegExp("^(?:" + c + ")$")), c.test(a))
}, "Invalid format."),
jQuery.validator.addMethod("require_from_group", function (a, b, c) {
    var d = this,
        e = c[1],
        f = $(e, b.form).filter(function () {
            return d.elementValue(this)
        }).length >= c[0];
    if (!$(b).data("being_validated")) {
            var g = $(e, b.form);
            g.data("being_validated", !0),
            g.valid(),
            $(b.form).valid(),
            g.data("being_validated", !1)
        }
    return f
}, jQuery.format("Please fill at least {0} of these fields.")),
jQuery.validator.addMethod("skip_or_fill_minimum", function (a, b, c) {
    var d = this,
        e = c[0],
        f = c[1],
        g = $(f, b.form).filter(function () {
            return d.elementValue(this)
        }).length,
        h = g >= e || 0 === g;
    if (!$(b).data("being_validated")) {
            var i = $(f, b.form);
            i.data("being_validated", !0),
            i.valid(),
            i.data("being_validated", !1)
        }
    return h
}, jQuery.format("Please either skip these fields or fill at least {0} of them.")),
jQuery.validator.addMethod("accept", function (a, b, c) {
    var d, e, f = "string" == typeof c ? c.replace(/\s/g, "").replace(/,/g, "|") : "image/*",
        g = this.optional(b);
    if (g) return g;
    if ("file" === $(b).attr("type") && (f = f.replace(/\*/g, ".*"), b.files && b.files.length)) for (d = 0; d < b.files.length; d++) if (e = b.files[d], !e.type.match(new RegExp(".?(" + f + ")$", "i"))) return !1;
    return !0
}, jQuery.format("Please enter a value with a valid mimetype.")),
jQuery.validator.addMethod("extension", function (a, b, c) {
    return c = "string" == typeof c ? c.replace(/,/g, "|") : "png|jpe?g|gif",
    this.optional(b) || a.match(new RegExp(".(" + c + ")$", "i"))
}, jQuery.format("Please enter a value with a valid extension.")),



$.extend($.fn.dataTableExt.oStdClasses, {
    "sWrapper": "dataTables_wrapper form-inline",
    "sFilterInput": "form-control input-sm",
    "sLengthSelect": "form-control input-sm"
}),


function () {
    var a, b, c, d, e, f, g, h, i = {}.hasOwnProperty,
        j = function (a, b) {
            function c() {
                this.constructor = a
            }
            for (var d in b) i.call(b, d) && (a[d] = b[d]);
            return c.prototype = b.prototype,
            a.prototype = new c,
            a.__super__ = b.prototype,
            a
        },
        k = [].slice;
    b = "undefined" != typeof Emitter && null !== Emitter ? Emitter : require("emitter"),
    g = function () {},
    a = function (a) {
            function b(a, d) {
                var e, f, g;
                if (this.element = a, this.version = b.version, this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\n*/g, ""), this.clickableElements = [], this.listeners = [], this.files = [], "string" == typeof this.element && (this.element = document.querySelector(this.element)), !this.element || null == this.element.nodeType) throw new Error("Invalid dropzone element.");
                if (this.element.dropzone) throw new Error("Dropzone already attached.");
                if (b.instances.push(this), this.element.dropzone = this, e = null != (g = b.optionsForElement(this.element)) ? g : {}, this.options = c({}, this.defaultOptions, e, null != d ? d : {}), this.options.forceFallback || !b.isBrowserSupported()) return this.options.fallback.call(this);
                if (null == this.options.url && (this.options.url = this.element.getAttribute("action")), !this.options.url) throw new Error("No URL provided.");
                if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
                this.options.acceptedMimeTypes && (this.options.acceptedFiles = this.options.acceptedMimeTypes, delete this.options.acceptedMimeTypes),
                this.options.method = this.options.method.toUpperCase(),
                (f = this.getExistingFallback()) && f.parentNode && f.parentNode.removeChild(f),
                this.previewsContainer = this.options.previewsContainer ? b.getElement(this.options.previewsContainer, "previewsContainer") : this.element,
                this.options.clickable && (this.clickableElements = this.options.clickable === !0 ? [this.element] : b.getElements(this.options.clickable, "clickable")),
                this.init()
            }
            var c;
            return j(b, a),
            b.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached"],
            b.prototype.defaultOptions = {
                "url": null,
                "method": "post",
                "withCredentials": !1,
                "parallelUploads": 2,
                "uploadMultiple": !1,
                "maxFilesize": 256,
                "paramName": "file",
                "createImageThumbnails": !0,
                "maxThumbnailFilesize": 10,
                "thumbnailWidth": 100,
                "thumbnailHeight": 100,
                "maxFiles": null,
                "params": {},
                "clickable": !0,
                "ignoreHiddenFiles": !0,
                "acceptedFiles": null,
                "acceptedMimeTypes": null,
                "autoProcessQueue": !0,
                "addRemoveLinks": !1,
                "previewsContainer": null,
                "dictDefaultMessage": "Drop files here to upload",
                "dictFallbackMessage": "Your browser does not support drag'n'drop file uploads.",
                "dictFallbackText": "Please use the fallback form below to upload your files like in the olden days.",
                "dictFileTooBig": "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
                "dictInvalidFileType": "You can't upload files of this type.",
                "dictResponseError": "Server responded with {{statusCode}} code.",
                "dictCancelUpload": "Cancel upload",
                "dictCancelUploadConfirmation": "Are you sure you want to cancel this upload?",
                "dictRemoveFile": "Remove file",
                "dictRemoveFileConfirmation": null,
                "dictMaxFilesExceeded": "You can not upload any more files.",
                "accept": function (a, b) {
                    return b()
                },
                "init": function () {
                    return g
                },
                "forceFallback": !1,
                "fallback": function () {
                    var a, c, d, e, f, g;
                    for (this.element.className = "" + this.element.className + " dz-browser-not-supported", g = this.element.getElementsByTagName("div"), e = 0, f = g.length; f > e; e++) a = g[e],
                    /(^| )dz-message($| )/.test(a.className) && (c = a, a.className = "dz-message");
                    return c || (c = b.createElement('<div class="dz-message"><span></span></div>'), this.element.appendChild(c)),
                    d = c.getElementsByTagName("span")[0],
                    d && (d.textContent = this.options.dictFallbackMessage),
                    this.element.appendChild(this.getFallbackForm())
                },
                "resize": function (a) {
                    var b, c, d;
                    return b = {
                        "srcX": 0,
                        "srcY": 0,
                        "srcWidth": a.width,
                        "srcHeight": a.height
                    },
                    c = a.width / a.height,
                    d = this.options.thumbnailWidth / this.options.thumbnailHeight,
                    a.height < this.options.thumbnailHeight || a.width < this.options.thumbnailWidth ? (b.trgHeight = b.srcHeight, b.trgWidth = b.srcWidth) : c > d ? (b.srcHeight = a.height, b.srcWidth = b.srcHeight * d) : (b.srcWidth = a.width, b.srcHeight = b.srcWidth / d),
                    b.srcX = (a.width - b.srcWidth) / 2,
                    b.srcY = (a.height - b.srcHeight) / 2,
                    b
                },
                "drop": function () {
                    return this.element.classList.remove("dz-drag-hover")
                },
                "dragstart": g,
                "dragend": function () {
                    return this.element.classList.remove("dz-drag-hover")
                },
                "dragenter": function () {
                    return this.element.classList.add("dz-drag-hover")
                },
                "dragover": function () {
                    return this.element.classList.add("dz-drag-hover")
                },
                "dragleave": function () {
                    return this.element.classList.remove("dz-drag-hover")
                },
                "paste": g,
                "reset": function () {
                    return this.element.classList.remove("dz-started")
                },
                "addedfile": function (a) {
                    var c, d, e, f, g, h, i, j, k, l, m, n, o, p = this;
                    for (this.element === this.previewsContainer && this.element.classList.add("dz-started"), a.previewElement = b.createElement(this.options.previewTemplate.trim()), a.previewTemplate = a.previewElement, this.previewsContainer.appendChild(a.previewElement), l = a.previewElement.querySelectorAll("[data-dz-name]"), f = 0, i = l.length; i > f; f++) c = l[f],
                    c.textContent = a.name;
                    for (m = a.previewElement.querySelectorAll("[data-dz-size]"), g = 0, j = m.length; j > g; g++) c = m[g],
                    c.innerHTML = this.filesize(a.size);
                    for (this.options.addRemoveLinks && (a._removeLink = b.createElement('<a class="dz-remove" href="javascript:undefined;" data-dz-remove>' + this.options.dictRemoveFile + "</a>"), a.previewElement.appendChild(a._removeLink)), d = function (c) {
                        return c.preventDefault(),
                        c.stopPropagation(),
                        a.status === b.UPLOADING ? b.confirm(p.options.dictCancelUploadConfirmation, function () {
                            return p.removeFile(a)
                        }) : p.options.dictRemoveFileConfirmation ? b.confirm(p.options.dictRemoveFileConfirmation, function () {
                            return p.removeFile(a)
                        }) : p.removeFile(a)
                    }, n = a.previewElement.querySelectorAll("[data-dz-remove]"), o = [], h = 0, k = n.length; k > h; h++) e = n[h],
                    o.push(e.addEventListener("click", d));
                    return o
                },
                "removedfile": function (a) {
                    var b;
                    return null != (b = a.previewElement) && b.parentNode.removeChild(a.previewElement),
                    this._updateMaxFilesReachedClass()
                },
                "thumbnail": function (a, b) {
                    var c, d, e, f, g;
                    for (a.previewElement.classList.remove("dz-file-preview"), a.previewElement.classList.add("dz-image-preview"), f = a.previewElement.querySelectorAll("[data-dz-thumbnail]"), g = [], d = 0, e = f.length; e > d; d++) c = f[d],
                    c.alt = a.name,
                    g.push(c.src = b);
                    return g
                },
                "error": function (a, b) {
                    var c, d, e, f, g;
                    for (a.previewElement.classList.add("dz-error"), "String" != typeof b && b.error && (b = b.error), f = a.previewElement.querySelectorAll("[data-dz-errormessage]"), g = [], d = 0, e = f.length; e > d; d++) c = f[d],
                    g.push(c.textContent = b);
                    return g
                },
                "errormultiple": g,
                "processing": function (a) {
                    return a.previewElement.classList.add("dz-processing"),
                    a._removeLink ? a._removeLink.textContent = this.options.dictCancelUpload : void 0
                },
                "processingmultiple": g,
                "uploadprogress": function (a, b) {
                    var c, d, e, f, g;
                    for (f = a.previewElement.querySelectorAll("[data-dz-uploadprogress]"), g = [], d = 0, e = f.length; e > d; d++) c = f[d],
                    g.push(c.style.width = "" + b + "%");
                    return g
                },
                "totaluploadprogress": g,
                "sending": g,
                "sendingmultiple": g,
                "success": function (a) {
                    return a.previewElement.classList.add("dz-success")
                },
                "successmultiple": g,
                "canceled": function (a) {
                    return this.emit("error", a, "Upload canceled.")
                },
                "canceledmultiple": g,
                "complete": function (a) {
                    return a._removeLink ? a._removeLink.textContent = this.options.dictRemoveFile : void 0
                },
                "completemultiple": g,
                "maxfilesexceeded": g,
                "maxfilesreached": g,
                "previewTemplate": '<div class="dz-preview dz-file-preview">\n  <div class="dz-details">\n    <div class="dz-filename"><span data-dz-name></span></div>\n    <div class="dz-size" data-dz-size></div>\n    <img data-dz-thumbnail />\n  </div>\n  <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>\n  <div class="dz-success-mark"><span>\u2714</span></div>\n  <div class="dz-error-mark"><span>\u2718</span></div>\n  <div class="dz-error-message"><span data-dz-errormessage></span></div>\n</div>'
            },
            c = function () {
                var a, b, c, d, e, f, g;
                for (d = arguments[0], c = 2 <= arguments.length ? k.call(arguments, 1) : [], f = 0, g = c.length; g > f; f++) {
                    b = c[f];
                    for (a in b) e = b[a],
                    d[a] = e
                }
                return d
            },
            b.prototype.getAcceptedFiles = function () {
                var a, b, c, d, e;
                for (d = this.files, e = [], b = 0, c = d.length; c > b; b++) a = d[b],
                a.accepted && e.push(a);
                return e
            },
            b.prototype.getRejectedFiles = function () {
                var a, b, c, d, e;
                for (d = this.files, e = [], b = 0, c = d.length; c > b; b++) a = d[b],
                a.accepted || e.push(a);
                return e
            },
            b.prototype.getQueuedFiles = function () {
                var a, c, d, e, f;
                for (e = this.files, f = [], c = 0, d = e.length; d > c; c++) a = e[c],
                a.status === b.QUEUED && f.push(a);
                return f
            },
            b.prototype.getUploadingFiles = function () {
                var a, c, d, e, f;
                for (e = this.files, f = [], c = 0, d = e.length; d > c; c++) a = e[c],
                a.status === b.UPLOADING && f.push(a);
                return f
            },
            b.prototype.init = function () {
                var a, c, d, e, f, g, h, i = this;
                for ("form" === this.element.tagName && this.element.setAttribute("enctype", "multipart/form-data"), this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message") && this.element.appendChild(b.createElement('<div class="dz-default dz-message"><span>' + this.options.dictDefaultMessage + "</span></div>")), this.clickableElements.length && (d = function () {
                    return i.hiddenFileInput && document.body.removeChild(i.hiddenFileInput),
                    i.hiddenFileInput = document.createElement("input"),
                    i.hiddenFileInput.setAttribute("type", "file"),
                    (null == i.options.maxFiles || i.options.maxFiles > 1) && i.hiddenFileInput.setAttribute("multiple", "multiple"),
                    null != i.options.acceptedFiles && i.hiddenFileInput.setAttribute("accept", i.options.acceptedFiles),
                    i.hiddenFileInput.style.visibility = "hidden",
                    i.hiddenFileInput.style.position = "absolute",
                    i.hiddenFileInput.style.top = "0",
                    i.hiddenFileInput.style.left = "0",
                    i.hiddenFileInput.style.height = "0",
                    i.hiddenFileInput.style.width = "0",
                    document.body.appendChild(i.hiddenFileInput),
                    i.hiddenFileInput.addEventListener("change", function () {
                        var a, b, c, e;
                        if (b = i.hiddenFileInput.files, b.length) for (c = 0, e = b.length; e > c; c++) a = b[c],
                        i.addFile(a);
                        return d()
                    })
                })(), this.URL = null != (g = window.URL) ? g : window.webkitURL, h = this.events, e = 0, f = h.length; f > e; e++) a = h[e],
                this.on(a, this.options[a]);
                return this.on("uploadprogress", function () {
                    return i.updateTotalUploadProgress()
                }),
                this.on("removedfile", function () {
                    return i.updateTotalUploadProgress()
                }),
                this.on("canceled", function (a) {
                    return i.emit("complete", a)
                }),
                this.on("complete", function () {
                    return 0 === i.getUploadingFiles().length && 0 === i.getQueuedFiles().length ? setTimeout(function () {
                        return i.emit("queuecomplete")
                    }, 0) : void 0
                }),
                c = function (a) {
                    return a.stopPropagation(),
                    a.preventDefault ? a.preventDefault() : a.returnValue = !1
                },
                this.listeners = [{
                    "element": this.element,
                    "events": {
                        "dragstart": function (a) {
                            return i.emit("dragstart", a)
                        },
                        "dragenter": function (a) {
                            return c(a),
                            i.emit("dragenter", a)
                        },
                        "dragover": function (a) {
                            var b;
                            try {
                                b = a.dataTransfer.effectAllowed
                            } catch (d) {}
                            return a.dataTransfer.dropEffect = "move" === b || "linkMove" === b ? "move" : "copy",
                            c(a),
                            i.emit("dragover", a)
                        },
                        "dragleave": function (a) {
                            return i.emit("dragleave", a)
                        },
                        "drop": function (a) {
                            return c(a),
                            i.drop(a)
                        },
                        "dragend": function (a) {
                            return i.emit("dragend", a)
                        }
                    }
                }],
                this.clickableElements.forEach(function (a) {
                    return i.listeners.push({
                        "element": a,
                        "events": {
                            "click": function (c) {
                                return a !== i.element || c.target === i.element || b.elementInside(c.target, i.element.querySelector(".dz-message")) ? i.hiddenFileInput.click() : void 0
                            }
                        }
                    })
                }),
                this.enable(),
                this.options.init.call(this)
            },
            b.prototype.destroy = function () {
                var a;
                return this.disable(),
                this.removeAllFiles(!0),
                (null != (a = this.hiddenFileInput) ? a.parentNode : void 0) && (this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput), this.hiddenFileInput = null),
                delete this.element.dropzone,
                b.instances.splice(b.instances.indexOf(this), 1)
            },
            b.prototype.updateTotalUploadProgress = function () {
                var a, b, c, d, e, f, g, h;
                if (d = 0, c = 0, a = this.getAcceptedFiles(), a.length) {
                    for (h = this.getAcceptedFiles(), f = 0, g = h.length; g > f; f++) b = h[f],
                    d += b.upload.bytesSent,
                    c += b.upload.total;
                    e = 100 * d / c
                } else e = 100;
                return this.emit("totaluploadprogress", e, c, d)
            },
            b.prototype.getFallbackForm = function () {
                var a, c, d, e;
                return (a = this.getExistingFallback()) ? a : (d = '<div class="dz-fallback">', this.options.dictFallbackText && (d += "<p>" + this.options.dictFallbackText + "</p>"), d += '<input type="file" name="' + this.options.paramName + (this.options.uploadMultiple ? "[]" : "") + '" ' + (this.options.uploadMultiple ? 'multiple="multiple"' : void 0) + ' /><input type="submit" value="Upload!"></div>', c = b.createElement(d), "FORM" !== this.element.tagName ? (e = b.createElement('<form action="' + this.options.url + '" enctype="multipart/form-data" method="' + this.options.method + '"></form>'), e.appendChild(c)) : (this.element.setAttribute("enctype", "multipart/form-data"), this.element.setAttribute("method", this.options.method)), null != e ? e : c)
            },
            b.prototype.getExistingFallback = function () {
                var a, b, c, d, e, f;
                for (b = function (a) {
                    var b, c, d;
                    for (c = 0, d = a.length; d > c; c++) if (b = a[c], /(^| )fallback($| )/.test(b.className)) return b
                }, f = ["div", "form"], d = 0, e = f.length; e > d; d++) if (c = f[d], a = b(this.element.getElementsByTagName(c))) return a
            },
            b.prototype.setupEventListeners = function () {
                var a, b, c, d, e, f, g;
                for (f = this.listeners, g = [], d = 0, e = f.length; e > d; d++) a = f[d],
                g.push(function () {
                    var d, e;
                    d = a.events,
                    e = [];
                    for (b in d) c = d[b],
                    e.push(a.element.addEventListener(b, c, !1));
                    return e
                }());
                return g
            },
            b.prototype.removeEventListeners = function () {
                var a, b, c, d, e, f, g;
                for (f = this.listeners, g = [], d = 0, e = f.length; e > d; d++) a = f[d],
                g.push(function () {
                    var d, e;
                    d = a.events,
                    e = [];
                    for (b in d) c = d[b],
                    e.push(a.element.removeEventListener(b, c, !1));
                    return e
                }());
                return g
            },
            b.prototype.disable = function () {
                var a, b, c, d, e;
                for (this.clickableElements.forEach(function (a) {
                    return a.classList.remove("dz-clickable")
                }), this.removeEventListeners(), d = this.files, e = [], b = 0, c = d.length; c > b; b++) a = d[b],
                e.push(this.cancelUpload(a));
                return e
            },
            b.prototype.enable = function () {
                return this.clickableElements.forEach(function (a) {
                    return a.classList.add("dz-clickable")
                }),
                this.setupEventListeners()
            },
            b.prototype.filesize = function (a) {
                var b;
                return a >= 109951162777.6 ? (a /= 109951162777.6, b = "TiB") : a >= 107374182.4 ? (a /= 107374182.4, b = "GiB") : a >= 104857.6 ? (a /= 104857.6, b = "MiB") : a >= 102.4 ? (a /= 102.4, b = "KiB") : (a = 10 * a, b = "b"),
                "<strong>" + Math.round(a) / 10 + "</strong> " + b
            },
            b.prototype._updateMaxFilesReachedClass = function () {
                return null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (this.getAcceptedFiles().length === this.options.maxFiles && this.emit("maxfilesreached", this.files), this.element.classList.add("dz-max-files-reached")) : this.element.classList.remove("dz-max-files-reached")
            },
            b.prototype.drop = function (a) {
                var b, c;
                a.dataTransfer && (this.emit("drop", a), b = a.dataTransfer.files, b.length && (c = a.dataTransfer.items, c && c.length && null != c[0].webkitGetAsEntry ? this._addFilesFromItems(c) : this.handleFiles(b)))
            },
            b.prototype.paste = function (a) {
                var b, c;
                if (null != (null != a && null != (c = a.clipboardData) ? c.items : void 0)) return this.emit("paste", a),
                b = a.clipboardData.items,
                b.length ? this._addFilesFromItems(b) : void 0
            },
            b.prototype.handleFiles = function (a) {
                var b, c, d, e;
                for (e = [], c = 0, d = a.length; d > c; c++) b = a[c],
                e.push(this.addFile(b));
                return e
            },
            b.prototype._addFilesFromItems = function (a) {
                var b, c, d, e, f;
                for (f = [], d = 0, e = a.length; e > d; d++) c = a[d],
                f.push(null != c.webkitGetAsEntry && (b = c.webkitGetAsEntry()) ? b.isFile ? this.addFile(c.getAsFile()) : b.isDirectory ? this._addFilesFromDirectory(b, b.name) : void 0 : null != c.getAsFile ? null == c.kind || "file" === c.kind ? this.addFile(c.getAsFile()) : void 0 : void 0);
                return f
            },
            b.prototype._addFilesFromDirectory = function (a, b) {
                var c, d, e = this;
                return c = a.createReader(),
                d = function (a) {
                    var c, d, f;
                    for (d = 0, f = a.length; f > d; d++) c = a[d],
                    c.isFile ? c.file(function (a) {
                        return e.options.ignoreHiddenFiles && "." === a.name.substring(0, 1) ? void 0 : (a.fullPath = "" + b + "/" + a.name, e.addFile(a))
                    }) : c.isDirectory && e._addFilesFromDirectory(c, "" + b + "/" + c.name)
                },
                c.readEntries(d, function (a) {
                    return "undefined" != typeof console && null !== console && "function" == typeof console.log ? void 0 : void 0
                })
            },
            b.prototype.accept = function (a, c) {
                return a.size > 1024 * this.options.maxFilesize * 1024 ? c(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(a.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize)) : b.isValidFile(a, this.options.acceptedFiles) ? null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (c(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles)), this.emit("maxfilesexceeded", a)) : this.options.accept.call(this, a, c) : c(this.options.dictInvalidFileType)
            },
            b.prototype.addFile = function (a) {
                var c = this;
                return a.upload = {
                    "progress": 0,
                    "total": a.size,
                    "bytesSent": 0
                },
                this.files.push(a),
                a.status = b.ADDED,
                this.emit("addedfile", a),
                this._enqueueThumbnail(a),
                this.accept(a, function (b) {
                    return b ? (a.accepted = !1, c._errorProcessing([a], b)) : c.enqueueFile(a),
                    c._updateMaxFilesReachedClass()
                })
            },
            b.prototype.enqueueFiles = function (a) {
                var b, c, d;
                for (c = 0, d = a.length; d > c; c++) b = a[c],
                this.enqueueFile(b);
                return null
            },
            b.prototype.enqueueFile = function (a) {
                var c = this;
                if (a.accepted = !0, a.status !== b.ADDED) throw new Error("This file can't be queued because it has already been processed or was rejected.");
                return a.status = b.QUEUED,
                this.options.autoProcessQueue ? setTimeout(function () {
                    return c.processQueue()
                }, 0) : void 0
            },
            b.prototype._thumbnailQueue = [],
            b.prototype._processingThumbnail = !1,
            b.prototype._enqueueThumbnail = function (a) {
                var b = this;
                return this.options.createImageThumbnails && a.type.match(/image.*/) && a.size <= 1024 * this.options.maxThumbnailFilesize * 1024 ? (this._thumbnailQueue.push(a), setTimeout(function () {
                    return b._processThumbnailQueue()
                }, 0)) : void 0
            },
            b.prototype._processThumbnailQueue = function () {
                var a = this;
                if (!this._processingThumbnail && 0 !== this._thumbnailQueue.length) return this._processingThumbnail = !0,
                this.createThumbnail(this._thumbnailQueue.shift(), function () {
                    return a._processingThumbnail = !1,
                    a._processThumbnailQueue()
                })
            },
            b.prototype.removeFile = function (a) {
                return a.status === b.UPLOADING && this.cancelUpload(a),
                this.files = h(this.files, a),
                this.emit("removedfile", a),
                0 === this.files.length ? this.emit("reset") : void 0
            },
            b.prototype.removeAllFiles = function (a) {
                var c, d, e, f;
                for (null == a && (a = !1), f = this.files.slice(), d = 0, e = f.length; e > d; d++) c = f[d],
                (c.status !== b.UPLOADING || a) && this.removeFile(c);
                return null
            },
            b.prototype.createThumbnail = function (a, b) {
                var c, d = this;
                return c = new FileReader,
                c.onload = function () {
                    var e;
                    return e = document.createElement("img"),
                    e.onload = function () {
                        var c, g, h, i, j, k, l, m;
                        return a.width = e.width,
                        a.height = e.height,
                        h = d.options.resize.call(d, a),
                        null == h.trgWidth && (h.trgWidth = d.options.thumbnailWidth),
                        null == h.trgHeight && (h.trgHeight = d.options.thumbnailHeight),
                        c = document.createElement("canvas"),
                        g = c.getContext("2d"),
                        c.width = h.trgWidth,
                        c.height = h.trgHeight,
                        f(g, e, null != (j = h.srcX) ? j : 0, null != (k = h.srcY) ? k : 0, h.srcWidth, h.srcHeight, null != (l = h.trgX) ? l : 0, null != (m = h.trgY) ? m : 0, h.trgWidth, h.trgHeight),
                        i = c.toDataURL("image/png"),
                        d.emit("thumbnail", a, i),
                        null != b ? b() : void 0
                    },
                    e.src = c.result
                },
                c.readAsDataURL(a)
            },
            b.prototype.processQueue = function () {
                var a, b, c, d;
                if (b = this.options.parallelUploads, c = this.getUploadingFiles().length, a = c, !(c >= b) && (d = this.getQueuedFiles(), d.length > 0)) {
                    if (this.options.uploadMultiple) return this.processFiles(d.slice(0, b - c));
                    for (; b > a;) {
                        if (!d.length) return;
                        this.processFile(d.shift()),
                        a++
                    }
                }
            },
            b.prototype.processFile = function (a) {
                return this.processFiles([a])
            },
            b.prototype.processFiles = function (a) {
                var c, d, e;
                for (d = 0, e = a.length; e > d; d++) c = a[d],
                c.processing = !0,
                c.status = b.UPLOADING,
                this.emit("processing", c);
                return this.options.uploadMultiple && this.emit("processingmultiple", a),
                this.uploadFiles(a)
            },
            b.prototype._getFilesWithXhr = function (a) {
                var b, c;
                return c = function () {
                    var c, d, e, f;
                    for (e = this.files, f = [], c = 0, d = e.length; d > c; c++) b = e[c],
                    b.xhr === a && f.push(b);
                    return f
                }.call(this)
            },
            b.prototype.cancelUpload = function (a) {
                var c, d, e, f, g, h, i;
                if (a.status === b.UPLOADING) {
                    for (d = this._getFilesWithXhr(a.xhr), e = 0, g = d.length; g > e; e++) c = d[e],
                    c.status = b.CANCELED;
                    for (a.xhr.abort(), f = 0, h = d.length; h > f; f++) c = d[f],
                    this.emit("canceled", c);
                    this.options.uploadMultiple && this.emit("canceledmultiple", d)
                } else((i = a.status) === b.ADDED || i === b.QUEUED) && (a.status = b.CANCELED, this.emit("canceled", a), this.options.uploadMultiple && this.emit("canceledmultiple", [a]));
                return this.options.autoProcessQueue ? this.processQueue() : void 0
            },
            b.prototype.uploadFile = function (a) {
                return this.uploadFiles([a])
            },
            b.prototype.uploadFiles = function (a) {
                var d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I = this;
                for (s = new XMLHttpRequest, t = 0, x = a.length; x > t; t++) d = a[t],
                d.xhr = s;
                s.open(this.options.method, this.options.url, !0),
                s.withCredentials = !! this.options.withCredentials,
                p = null,
                f = function () {
                    var b, c, e;
                    for (e = [], b = 0, c = a.length; c > b; b++) d = a[b],
                    e.push(I._errorProcessing(a, p || I.options.dictResponseError.replace("{{statusCode}}", s.status), s));
                    return e
                },
                q = function (b) {
                    var c, e, f, g, h, i, j, k, l;
                    if (null != b) for (e = 100 * b.loaded / b.total, f = 0, i = a.length; i > f; f++) d = a[f],
                    d.upload = {
                        "progress": e,
                        "total": b.total,
                        "bytesSent": b.loaded
                    };
                    else {
                        for (c = !0, e = 100, g = 0, j = a.length; j > g; g++) d = a[g],
                        (100 !== d.upload.progress || d.upload.bytesSent !== d.upload.total) && (c = !1),
                        d.upload.progress = e,
                        d.upload.bytesSent = d.upload.total;
                        if (c) return
                    }
                    for (l = [], h = 0, k = a.length; k > h; h++) d = a[h],
                    l.push(I.emit("uploadprogress", d, e, d.upload.bytesSent));
                    return l
                },
                s.onload = function (c) {
                    var d;
                    if (a[0].status !== b.CANCELED && 4 === s.readyState) {
                        if (p = s.responseText, s.getResponseHeader("content-type") && ~s.getResponseHeader("content-type").indexOf("application/json")) try {
                            p = JSON.parse(p)
                        } catch (e) {
                            c = e,
                            p = "Invalid JSON response from server."
                        }
                        return q(),
                        200 <= (d = s.status) && 300 > d ? I._finished(a, p, c) : f()
                    }
                },
                s.onerror = function () {
                    return a[0].status !== b.CANCELED ? f() : void 0
                },
                o = null != (D = s.upload) ? D : s,
                o.onprogress = q,
                i = {
                    "Accept": "application/json",
                    "Cache-Control": "no-cache",
                    "X-Requested-With": "XMLHttpRequest"
                },
                this.options.headers && c(i, this.options.headers);
                for (g in i) h = i[g],
                s.setRequestHeader(g, h);
                if (e = new FormData, this.options.params) {
                    E = this.options.params;
                    for (m in E) r = E[m],
                    e.append(m, r)
                }
                for (u = 0, y = a.length; y > u; u++) d = a[u],
                this.emit("sending", d, s, e);
                if (this.options.uploadMultiple && this.emit("sendingmultiple", a, s, e), "FORM" === this.element.tagName) for (F = this.element.querySelectorAll("input, textarea, select, button"), v = 0, z = F.length; z > v; v++) if (j = F[v], k = j.getAttribute("name"), l = j.getAttribute("type"), "SELECT" === j.tagName && j.hasAttribute("multiple")) for (G = j.options, w = 0, A = G.length; A > w; w++) n = G[w],
                n.selected && e.append(k, n.value);
                else(!l || "checkbox" !== (H = l.toLowerCase()) && "radio" !== H || j.checked) && e.append(k, j.value);
                for (C = 0, B = a.length; B > C; C++) d = a[C],
                e.append("" + this.options.paramName + (this.options.uploadMultiple ? "[]" : ""), d, d.name);
                return s.send(e)
            },
            b.prototype._finished = function (a, c, d) {
                var e, f, g;
                for (f = 0, g = a.length; g > f; f++) e = a[f],
                e.status = b.SUCCESS,
                this.emit("success", e, c, d),
                this.emit("complete", e);
                return this.options.uploadMultiple && (this.emit("successmultiple", a, c, d), this.emit("completemultiple", a)),
                this.options.autoProcessQueue ? this.processQueue() : void 0
            },
            b.prototype._errorProcessing = function (a, c, d) {
                var e, f, g;
                for (f = 0, g = a.length; g > f; f++) e = a[f],
                e.status = b.ERROR,
                this.emit("error", e, c, d),
                this.emit("complete", e);
                return this.options.uploadMultiple && (this.emit("errormultiple", a, c, d), this.emit("completemultiple", a)),
                this.options.autoProcessQueue ? this.processQueue() : void 0
            },
            b
        }(b),
    a.version = "3.8.4",
    a.options = {},
    a.optionsForElement = function (b) {
            return b.getAttribute("id") ? a.options[c(b.getAttribute("id"))] : void 0
        },
    a.instances = [],
    a.forElement = function (a) {
            if ("string" == typeof a && (a = document.querySelector(a)), null == (null != a ? a.dropzone : void 0)) throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
            return a.dropzone
        },
    a.autoDiscover = !0,
    a.discover = function () {
            var b, c, d, e, f, g;
            for (document.querySelectorAll ? d = document.querySelectorAll(".dropzone") : (d = [], b = function (a) {
                var b, c, e, f;
                for (f = [], c = 0, e = a.length; e > c; c++) b = a[c],
                f.push(/(^| )dropzone($| )/.test(b.className) ? d.push(b) : void 0);
                return f
            }, b(document.getElementsByTagName("div")), b(document.getElementsByTagName("form"))), g = [], e = 0, f = d.length; f > e; e++) c = d[e],
            g.push(a.optionsForElement(c) !== !1 ? new a(c) : void 0);
            return g
        },
    a.blacklistedBrowsers = [/opera.*Macintosh.*version\/12/i],
    a.isBrowserSupported = function () {
            var b, c, d, e, f;
            if (b = !0, window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) if ("classList" in document.createElement("a")) for (f = a.blacklistedBrowsers, d = 0, e = f.length; e > d; d++) c = f[d],
            c.test(navigator.userAgent) && (b = !1);
            else b = !1;
            else b = !1;
            return b
        },
    h = function (a, b) {
            var c, d, e, f;
            for (f = [], d = 0, e = a.length; e > d; d++) c = a[d],
            c !== b && f.push(c);
            return f
        },
    c = function (a) {
            return a.replace(/[\-_](\w)/g, function (a) {
                return a[1].toUpperCase()
            })
        },
    a.createElement = function (a) {
            var b;
            return b = document.createElement("div"),
            b.innerHTML = a,
            b.childNodes[0]
        },
    a.elementInside = function (a, b) {
            if (a === b) return !0;
            for (; a = a.parentNode;) if (a === b) return !0;
            return !1
        },
    a.getElement = function (a, b) {
            var c;
            if ("string" == typeof a ? c = document.querySelector(a) : null != a.nodeType && (c = a), null == c) throw new Error("Invalid `" + b + "` option provided. Please provide a CSS selector or a plain HTML element.");
            return c
        },
    a.getElements = function (a, b) {
            var c, d, e, f, g, h, i, j;
            if (a instanceof Array) {
                e = [];
                try {
                    for (f = 0, h = a.length; h > f; f++) d = a[f],
                    e.push(this.getElement(d, b))
                } catch (k) {
                    c = k,
                    e = null
                }
            } else if ("string" == typeof a) for (e = [], j = document.querySelectorAll(a), g = 0, i = j.length; i > g; g++) d = j[g],
            e.push(d);
            else null != a.nodeType && (e = [a]);
            if (null == e || !e.length) throw new Error("Invalid `" + b + "` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");
            return e
        },
    a.confirm = function (a, b, c) {
            return window.confirm(a) ? b() : null != c ? c() : void 0
        },
    a.isValidFile = function (a, b) {
            var c, d, e, f, g;
            if (!b) return !0;
            for (b = b.split(","), d = a.type, c = d.replace(/\/.*$/, ""), f = 0, g = b.length; g > f; f++) if (e = b[f], e = e.trim(), "." === e.charAt(0)) {
                if (-1 !== a.name.toLowerCase().indexOf(e.toLowerCase(), a.name.length - e.length)) return !0
            } else if (/\/\*$/.test(e)) {
                if (c === e.replace(/\/.*$/, "")) return !0
            } else if (d === e) return !0;
            return !1
        },
    "undefined" != typeof jQuery && null !== jQuery && (jQuery.fn.dropzone = function (b) {
            return this.each(function () {
                return new a(this, b)
            })
        }),
    "undefined" != typeof module && null !== module ? module.exports = a : window.Dropzone = a,
    a.ADDED = "added",
    a.QUEUED = "queued",
    a.ACCEPTED = a.QUEUED,
    a.UPLOADING = "uploading",
    a.PROCESSING = a.UPLOADING,
    a.CANCELED = "canceled",
    a.ERROR = "error",
    a.SUCCESS = "success",
    e = function (a) {
            var b, c, d, e, f, g, h, i, j, k;
            for (h = a.naturalWidth, g = a.naturalHeight, c = document.createElement("canvas"), c.width = 1, c.height = g, d = c.getContext("2d"), d.drawImage(a, 0, 0), e = d.getImageData(0, 0, 1, g).data, k = 0, f = g, i = g; i > k;) b = e[4 * (i - 1) + 3],
            0 === b ? f = i : k = i,
            i = f + k >> 1;
            return j = i / g,
            0 === j ? 1 : j
        },
    f = function (a, b, c, d, f, g, h, i, j, k) {
            var l;
            return l = e(b),
            a.drawImage(b, c, d, f, g, h, i, j, k / l)
        },
    d = function (a, b) {
            var c, d, e, f, g, h, i, j, k;
            if (e = !1, k = !0, d = a.document, j = d.documentElement, c = d.addEventListener ? "addEventListener" : "attachEvent", i = d.addEventListener ? "removeEventListener" : "detachEvent", h = d.addEventListener ? "" : "on", f = function (c) {
                return "readystatechange" !== c.type || "complete" === d.readyState ? (("load" === c.type ? a : d)[i](h + c.type, f, !1), !e && (e = !0) ? b.call(a, c.type || c) : void 0) : void 0
            }, g = function () {
                var a;
                try {
                    j.doScroll("left")
                } catch (b) {
                    return a = b,
                    void setTimeout(g, 50)
                }
                return f("poll")
            }, "complete" !== d.readyState) {
                if (d.createEventObject && j.doScroll) {
                    try {
                        k = !a.frameElement
                    } catch (l) {}
                    k && g()
                }
                return d[c](h + "DOMContentLoaded", f, !1),
                d[c](h + "readystatechange", f, !1),
                a[c](h + "load", f, !1)
            }
        },
    a._autoDiscoverFunction = function () {
            return a.autoDiscover ? a.discover() : void 0
        },
    d(window, a._autoDiscoverFunction)
}.call(this),


function () {
    var a, b, c, d, e, f, g, h, i = {}.hasOwnProperty,
        j = function (a, b) {
            function c() {
                this.constructor = a
            }
            for (var d in b) i.call(b, d) && (a[d] = b[d]);
            return c.prototype = b.prototype,
            a.prototype = new c,
            a.__super__ = b.prototype,
            a
        },
        k = [].slice;
    b = "undefined" != typeof Emitter && null !== Emitter ? Emitter : require("emitter"),
    g = function () {},
    a = function (a) {
            function b(a, d) {
                var e, f, g;
                if (this.element = a, this.version = b.version, this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\n*/g, ""), this.clickableElements = [], this.listeners = [], this.files = [], "string" == typeof this.element && (this.element = document.querySelector(this.element)), !this.element || null == this.element.nodeType) throw new Error("Invalid dropzone element.");
                if (this.element.dropzone) throw new Error("Dropzone already attached.");
                if (b.instances.push(this), this.element.dropzone = this, e = null != (g = b.optionsForElement(this.element)) ? g : {}, this.options = c({}, this.defaultOptions, e, null != d ? d : {}), this.options.forceFallback || !b.isBrowserSupported()) return this.options.fallback.call(this);
                if (null == this.options.url && (this.options.url = this.element.getAttribute("action")), !this.options.url) throw new Error("No URL provided.");
                if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
                this.options.acceptedMimeTypes && (this.options.acceptedFiles = this.options.acceptedMimeTypes, delete this.options.acceptedMimeTypes),
                this.options.method = this.options.method.toUpperCase(),
                (f = this.getExistingFallback()) && f.parentNode && f.parentNode.removeChild(f),
                this.previewsContainer = this.options.previewsContainer ? b.getElement(this.options.previewsContainer, "previewsContainer") : this.element,
                this.options.clickable && (this.clickableElements = this.options.clickable === !0 ? [this.element] : b.getElements(this.options.clickable, "clickable")),
                this.init()
            }
            var c;
            return j(b, a),
            b.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached"],
            b.prototype.defaultOptions = {
                "url": null,
                "method": "post",
                "withCredentials": !1,
                "parallelUploads": 2,
                "uploadMultiple": !1,
                "maxFilesize": 256,
                "paramName": "file",
                "createImageThumbnails": !0,
                "maxThumbnailFilesize": 10,
                "thumbnailWidth": 100,
                "thumbnailHeight": 100,
                "maxFiles": null,
                "params": {},
                "clickable": !0,
                "ignoreHiddenFiles": !0,
                "acceptedFiles": null,
                "acceptedMimeTypes": null,
                "autoProcessQueue": !0,
                "addRemoveLinks": !1,
                "previewsContainer": null,
                "dictDefaultMessage": "Drop files here to upload",
                "dictFallbackMessage": "Your browser does not support drag'n'drop file uploads.",
                "dictFallbackText": "Please use the fallback form below to upload your files like in the olden days.",
                "dictFileTooBig": "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
                "dictInvalidFileType": "You can't upload files of this type.",
                "dictResponseError": "Server responded with {{statusCode}} code.",
                "dictCancelUpload": "Cancel upload",
                "dictCancelUploadConfirmation": "Are you sure you want to cancel this upload?",
                "dictRemoveFile": "Remove file",
                "dictRemoveFileConfirmation": null,
                "dictMaxFilesExceeded": "You can not upload any more files.",
                "accept": function (a, b) {
                    return b()
                },
                "init": function () {
                    return g
                },
                "forceFallback": !1,
                "fallback": function () {
                    var a, c, d, e, f, g;
                    for (this.element.className = "" + this.element.className + " dz-browser-not-supported", g = this.element.getElementsByTagName("div"), e = 0, f = g.length; f > e; e++) a = g[e],
                    /(^| )dz-message($| )/.test(a.className) && (c = a, a.className = "dz-message");
                    return c || (c = b.createElement('<div class="dz-message"><span></span></div>'), this.element.appendChild(c)),
                    d = c.getElementsByTagName("span")[0],
                    d && (d.textContent = this.options.dictFallbackMessage),
                    this.element.appendChild(this.getFallbackForm())
                },
                "resize": function (a) {
                    var b, c, d;
                    return b = {
                        "srcX": 0,
                        "srcY": 0,
                        "srcWidth": a.width,
                        "srcHeight": a.height
                    },
                    c = a.width / a.height,
                    d = this.options.thumbnailWidth / this.options.thumbnailHeight,
                    a.height < this.options.thumbnailHeight || a.width < this.options.thumbnailWidth ? (b.trgHeight = b.srcHeight, b.trgWidth = b.srcWidth) : c > d ? (b.srcHeight = a.height, b.srcWidth = b.srcHeight * d) : (b.srcWidth = a.width, b.srcHeight = b.srcWidth / d),
                    b.srcX = (a.width - b.srcWidth) / 2,
                    b.srcY = (a.height - b.srcHeight) / 2,
                    b
                },
                "drop": function () {
                    return this.element.classList.remove("dz-drag-hover")
                },
                "dragstart": g,
                "dragend": function () {
                    return this.element.classList.remove("dz-drag-hover")
                },
                "dragenter": function () {
                    return this.element.classList.add("dz-drag-hover")
                },
                "dragover": function () {
                    return this.element.classList.add("dz-drag-hover")
                },
                "dragleave": function () {
                    return this.element.classList.remove("dz-drag-hover")
                },
                "paste": g,
                "reset": function () {
                    return this.element.classList.remove("dz-started")
                },
                "addedfile": function (a) {
                    var c, d, e, f, g, h, i, j, k, l, m, n, o, p = this;
                    for (this.element === this.previewsContainer && this.element.classList.add("dz-started"), a.previewElement = b.createElement(this.options.previewTemplate.trim()), a.previewTemplate = a.previewElement, this.previewsContainer.appendChild(a.previewElement), l = a.previewElement.querySelectorAll("[data-dz-name]"), f = 0, i = l.length; i > f; f++) c = l[f],
                    c.textContent = a.name;
                    for (m = a.previewElement.querySelectorAll("[data-dz-size]"), g = 0, j = m.length; j > g; g++) c = m[g],
                    c.innerHTML = this.filesize(a.size);
                    for (this.options.addRemoveLinks && (a._removeLink = b.createElement('<a class="dz-remove" href="javascript:undefined;" data-dz-remove>' + this.options.dictRemoveFile + "</a>"), a.previewElement.appendChild(a._removeLink)), d = function (c) {
                        return c.preventDefault(),
                        c.stopPropagation(),
                        a.status === b.UPLOADING ? b.confirm(p.options.dictCancelUploadConfirmation, function () {
                            return p.removeFile(a)
                        }) : p.options.dictRemoveFileConfirmation ? b.confirm(p.options.dictRemoveFileConfirmation, function () {
                            return p.removeFile(a)
                        }) : p.removeFile(a)
                    }, n = a.previewElement.querySelectorAll("[data-dz-remove]"), o = [], h = 0, k = n.length; k > h; h++) e = n[h],
                    o.push(e.addEventListener("click", d));
                    return o
                },
                "removedfile": function (a) {
                    var b;
                    return null != (b = a.previewElement) && b.parentNode.removeChild(a.previewElement),
                    this._updateMaxFilesReachedClass()
                },
                "thumbnail": function (a, b) {
                    var c, d, e, f, g;
                    for (a.previewElement.classList.remove("dz-file-preview"), a.previewElement.classList.add("dz-image-preview"), f = a.previewElement.querySelectorAll("[data-dz-thumbnail]"), g = [], d = 0, e = f.length; e > d; d++) c = f[d],
                    c.alt = a.name,
                    g.push(c.src = b);
                    return g
                },
                "error": function (a, b) {
                    var c, d, e, f, g;
                    for (a.previewElement.classList.add("dz-error"), "String" != typeof b && b.error && (b = b.error), f = a.previewElement.querySelectorAll("[data-dz-errormessage]"), g = [], d = 0, e = f.length; e > d; d++) c = f[d],
                    g.push(c.textContent = b);
                    return g
                },
                "errormultiple": g,
                "processing": function (a) {
                    return a.previewElement.classList.add("dz-processing"),
                    a._removeLink ? a._removeLink.textContent = this.options.dictCancelUpload : void 0
                },
                "processingmultiple": g,
                "uploadprogress": function (a, b) {
                    var c, d, e, f, g;
                    for (f = a.previewElement.querySelectorAll("[data-dz-uploadprogress]"), g = [], d = 0, e = f.length; e > d; d++) c = f[d],
                    g.push(c.style.width = "" + b + "%");
                    return g
                },
                "totaluploadprogress": g,
                "sending": g,
                "sendingmultiple": g,
                "success": function (a) {
                    return a.previewElement.classList.add("dz-success")
                },
                "successmultiple": g,
                "canceled": function (a) {
                    return this.emit("error", a, "Upload canceled.")
                },
                "canceledmultiple": g,
                "complete": function (a) {
                    return a._removeLink ? a._removeLink.textContent = this.options.dictRemoveFile : void 0
                },
                "completemultiple": g,
                "maxfilesexceeded": g,
                "maxfilesreached": g,
                "previewTemplate": '<div class="dz-preview dz-file-preview">\n  <div class="dz-details">\n    <div class="dz-filename"><span data-dz-name></span></div>\n    <div class="dz-size" data-dz-size></div>\n    <img data-dz-thumbnail />\n  </div>\n  <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>\n  <div class="dz-success-mark"><span>\u2714</span></div>\n  <div class="dz-error-mark"><span>\u2718</span></div>\n  <div class="dz-error-message"><span data-dz-errormessage></span></div>\n</div>'
            },
            c = function () {
                var a, b, c, d, e, f, g;
                for (d = arguments[0], c = 2 <= arguments.length ? k.call(arguments, 1) : [], f = 0, g = c.length; g > f; f++) {
                    b = c[f];
                    for (a in b) e = b[a],
                    d[a] = e
                }
                return d
            },
            b.prototype.getAcceptedFiles = function () {
                var a, b, c, d, e;
                for (d = this.files, e = [], b = 0, c = d.length; c > b; b++) a = d[b],
                a.accepted && e.push(a);
                return e
            },
            b.prototype.getRejectedFiles = function () {
                var a, b, c, d, e;
                for (d = this.files, e = [], b = 0, c = d.length; c > b; b++) a = d[b],
                a.accepted || e.push(a);
                return e
            },
            b.prototype.getQueuedFiles = function () {
                var a, c, d, e, f;
                for (e = this.files, f = [], c = 0, d = e.length; d > c; c++) a = e[c],
                a.status === b.QUEUED && f.push(a);
                return f
            },
            b.prototype.getUploadingFiles = function () {
                var a, c, d, e, f;
                for (e = this.files, f = [], c = 0, d = e.length; d > c; c++) a = e[c],
                a.status === b.UPLOADING && f.push(a);
                return f
            },
            b.prototype.init = function () {
                var a, c, d, e, f, g, h, i = this;
                for ("form" === this.element.tagName && this.element.setAttribute("enctype", "multipart/form-data"), this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message") && this.element.appendChild(b.createElement('<div class="dz-default dz-message"><span>' + this.options.dictDefaultMessage + "</span></div>")), this.clickableElements.length && (d = function () {
                    return i.hiddenFileInput && document.body.removeChild(i.hiddenFileInput),
                    i.hiddenFileInput = document.createElement("input"),
                    i.hiddenFileInput.setAttribute("type", "file"),
                    (null == i.options.maxFiles || i.options.maxFiles > 1) && i.hiddenFileInput.setAttribute("multiple", "multiple"),
                    null != i.options.acceptedFiles && i.hiddenFileInput.setAttribute("accept", i.options.acceptedFiles),
                    i.hiddenFileInput.style.visibility = "hidden",
                    i.hiddenFileInput.style.position = "absolute",
                    i.hiddenFileInput.style.top = "0",
                    i.hiddenFileInput.style.left = "0",
                    i.hiddenFileInput.style.height = "0",
                    i.hiddenFileInput.style.width = "0",
                    document.body.appendChild(i.hiddenFileInput),
                    i.hiddenFileInput.addEventListener("change", function () {
                        var a, b, c, e;
                        if (b = i.hiddenFileInput.files, b.length) for (c = 0, e = b.length; e > c; c++) a = b[c],
                        i.addFile(a);
                        return d()
                    })
                })(), this.URL = null != (g = window.URL) ? g : window.webkitURL, h = this.events, e = 0, f = h.length; f > e; e++) a = h[e],
                this.on(a, this.options[a]);
                return this.on("uploadprogress", function () {
                    return i.updateTotalUploadProgress()
                }),
                this.on("removedfile", function () {
                    return i.updateTotalUploadProgress()
                }),
                this.on("canceled", function (a) {
                    return i.emit("complete", a)
                }),
                this.on("complete", function () {
                    return 0 === i.getUploadingFiles().length && 0 === i.getQueuedFiles().length ? setTimeout(function () {
                        return i.emit("queuecomplete")
                    }, 0) : void 0
                }),
                c = function (a) {
                    return a.stopPropagation(),
                    a.preventDefault ? a.preventDefault() : a.returnValue = !1
                },
                this.listeners = [{
                    "element": this.element,
                    "events": {
                        "dragstart": function (a) {
                            return i.emit("dragstart", a)
                        },
                        "dragenter": function (a) {
                            return c(a),
                            i.emit("dragenter", a)
                        },
                        "dragover": function (a) {
                            var b;
                            try {
                                b = a.dataTransfer.effectAllowed
                            } catch (d) {}
                            return a.dataTransfer.dropEffect = "move" === b || "linkMove" === b ? "move" : "copy",
                            c(a),
                            i.emit("dragover", a)
                        },
                        "dragleave": function (a) {
                            return i.emit("dragleave", a)
                        },
                        "drop": function (a) {
                            return c(a),
                            i.drop(a)
                        },
                        "dragend": function (a) {
                            return i.emit("dragend", a)
                        }
                    }
                }],
                this.clickableElements.forEach(function (a) {
                    return i.listeners.push({
                        "element": a,
                        "events": {
                            "click": function (c) {
                                return a !== i.element || c.target === i.element || b.elementInside(c.target, i.element.querySelector(".dz-message")) ? i.hiddenFileInput.click() : void 0
                            }
                        }
                    })
                }),
                this.enable(),
                this.options.init.call(this)
            },
            b.prototype.destroy = function () {
                var a;
                return this.disable(),
                this.removeAllFiles(!0),
                (null != (a = this.hiddenFileInput) ? a.parentNode : void 0) && (this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput), this.hiddenFileInput = null),
                delete this.element.dropzone,
                b.instances.splice(b.instances.indexOf(this), 1)
            },
            b.prototype.updateTotalUploadProgress = function () {
                var a, b, c, d, e, f, g, h;
                if (d = 0, c = 0, a = this.getAcceptedFiles(), a.length) {
                    for (h = this.getAcceptedFiles(), f = 0, g = h.length; g > f; f++) b = h[f],
                    d += b.upload.bytesSent,
                    c += b.upload.total;
                    e = 100 * d / c
                } else e = 100;
                return this.emit("totaluploadprogress", e, c, d)
            },
            b.prototype.getFallbackForm = function () {
                var a, c, d, e;
                return (a = this.getExistingFallback()) ? a : (d = '<div class="dz-fallback">', this.options.dictFallbackText && (d += "<p>" + this.options.dictFallbackText + "</p>"), d += '<input type="file" name="' + this.options.paramName + (this.options.uploadMultiple ? "[]" : "") + '" ' + (this.options.uploadMultiple ? 'multiple="multiple"' : void 0) + ' /><input type="submit" value="Upload!"></div>', c = b.createElement(d), "FORM" !== this.element.tagName ? (e = b.createElement('<form action="' + this.options.url + '" enctype="multipart/form-data" method="' + this.options.method + '"></form>'), e.appendChild(c)) : (this.element.setAttribute("enctype", "multipart/form-data"), this.element.setAttribute("method", this.options.method)), null != e ? e : c)
            },
            b.prototype.getExistingFallback = function () {
                var a, b, c, d, e, f;
                for (b = function (a) {
                    var b, c, d;
                    for (c = 0, d = a.length; d > c; c++) if (b = a[c], /(^| )fallback($| )/.test(b.className)) return b
                }, f = ["div", "form"], d = 0, e = f.length; e > d; d++) if (c = f[d], a = b(this.element.getElementsByTagName(c))) return a
            },
            b.prototype.setupEventListeners = function () {
                var a, b, c, d, e, f, g;
                for (f = this.listeners, g = [], d = 0, e = f.length; e > d; d++) a = f[d],
                g.push(function () {
                    var d, e;
                    d = a.events,
                    e = [];
                    for (b in d) c = d[b],
                    e.push(a.element.addEventListener(b, c, !1));
                    return e
                }());
                return g
            },
            b.prototype.removeEventListeners = function () {
                var a, b, c, d, e, f, g;
                for (f = this.listeners, g = [], d = 0, e = f.length; e > d; d++) a = f[d],
                g.push(function () {
                    var d, e;
                    d = a.events,
                    e = [];
                    for (b in d) c = d[b],
                    e.push(a.element.removeEventListener(b, c, !1));
                    return e
                }());
                return g
            },
            b.prototype.disable = function () {
                var a, b, c, d, e;
                for (this.clickableElements.forEach(function (a) {
                    return a.classList.remove("dz-clickable")
                }), this.removeEventListeners(), d = this.files, e = [], b = 0, c = d.length; c > b; b++) a = d[b],
                e.push(this.cancelUpload(a));
                return e
            },
            b.prototype.enable = function () {
                return this.clickableElements.forEach(function (a) {
                    return a.classList.add("dz-clickable")
                }),
                this.setupEventListeners()
            },
            b.prototype.filesize = function (a) {
                var b;
                return a >= 109951162777.6 ? (a /= 109951162777.6, b = "TiB") : a >= 107374182.4 ? (a /= 107374182.4, b = "GiB") : a >= 104857.6 ? (a /= 104857.6, b = "MiB") : a >= 102.4 ? (a /= 102.4, b = "KiB") : (a = 10 * a, b = "b"),
                "<strong>" + Math.round(a) / 10 + "</strong> " + b
            },
            b.prototype._updateMaxFilesReachedClass = function () {
                return null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (this.getAcceptedFiles().length === this.options.maxFiles && this.emit("maxfilesreached", this.files), this.element.classList.add("dz-max-files-reached")) : this.element.classList.remove("dz-max-files-reached")
            },
            b.prototype.drop = function (a) {
                var b, c;
                a.dataTransfer && (this.emit("drop", a), b = a.dataTransfer.files, b.length && (c = a.dataTransfer.items, c && c.length && null != c[0].webkitGetAsEntry ? this._addFilesFromItems(c) : this.handleFiles(b)))
            },
            b.prototype.paste = function (a) {
                var b, c;
                if (null != (null != a && null != (c = a.clipboardData) ? c.items : void 0)) return this.emit("paste", a),
                b = a.clipboardData.items,
                b.length ? this._addFilesFromItems(b) : void 0
            },
            b.prototype.handleFiles = function (a) {
                var b, c, d, e;
                for (e = [], c = 0, d = a.length; d > c; c++) b = a[c],
                e.push(this.addFile(b));
                return e
            },
            b.prototype._addFilesFromItems = function (a) {
                var b, c, d, e, f;
                for (f = [], d = 0, e = a.length; e > d; d++) c = a[d],
                f.push(null != c.webkitGetAsEntry && (b = c.webkitGetAsEntry()) ? b.isFile ? this.addFile(c.getAsFile()) : b.isDirectory ? this._addFilesFromDirectory(b, b.name) : void 0 : null != c.getAsFile ? null == c.kind || "file" === c.kind ? this.addFile(c.getAsFile()) : void 0 : void 0);
                return f
            },
            b.prototype._addFilesFromDirectory = function (a, b) {
                var c, d, e = this;
                return c = a.createReader(),
                d = function (a) {
                    var c, d, f;
                    for (d = 0, f = a.length; f > d; d++) c = a[d],
                    c.isFile ? c.file(function (a) {
                        return e.options.ignoreHiddenFiles && "." === a.name.substring(0, 1) ? void 0 : (a.fullPath = "" + b + "/" + a.name, e.addFile(a))
                    }) : c.isDirectory && e._addFilesFromDirectory(c, "" + b + "/" + c.name)
                },
                c.readEntries(d, function (a) {
                    return "undefined" != typeof console && null !== console && "function" == typeof console.log ? void 0 : void 0
                })
            },
            b.prototype.accept = function (a, c) {
                return a.size > 1024 * this.options.maxFilesize * 1024 ? c(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(a.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize)) : b.isValidFile(a, this.options.acceptedFiles) ? null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (c(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles)), this.emit("maxfilesexceeded", a)) : this.options.accept.call(this, a, c) : c(this.options.dictInvalidFileType)
            },
            b.prototype.addFile = function (a) {
                var c = this;
                return a.upload = {
                    "progress": 0,
                    "total": a.size,
                    "bytesSent": 0
                },
                this.files.push(a),
                a.status = b.ADDED,
                this.emit("addedfile", a),
                this._enqueueThumbnail(a),
                this.accept(a, function (b) {
                    return b ? (a.accepted = !1, c._errorProcessing([a], b)) : c.enqueueFile(a),
                    c._updateMaxFilesReachedClass()
                })
            },
            b.prototype.enqueueFiles = function (a) {
                var b, c, d;
                for (c = 0, d = a.length; d > c; c++) b = a[c],
                this.enqueueFile(b);
                return null
            },
            b.prototype.enqueueFile = function (a) {
                var c = this;
                if (a.accepted = !0, a.status !== b.ADDED) throw new Error("This file can't be queued because it has already been processed or was rejected.");
                return a.status = b.QUEUED,
                this.options.autoProcessQueue ? setTimeout(function () {
                    return c.processQueue()
                }, 0) : void 0
            },
            b.prototype._thumbnailQueue = [],
            b.prototype._processingThumbnail = !1,
            b.prototype._enqueueThumbnail = function (a) {
                var b = this;
                return this.options.createImageThumbnails && a.type.match(/image.*/) && a.size <= 1024 * this.options.maxThumbnailFilesize * 1024 ? (this._thumbnailQueue.push(a), setTimeout(function () {
                    return b._processThumbnailQueue()
                }, 0)) : void 0
            },
            b.prototype._processThumbnailQueue = function () {
                var a = this;
                if (!this._processingThumbnail && 0 !== this._thumbnailQueue.length) return this._processingThumbnail = !0,
                this.createThumbnail(this._thumbnailQueue.shift(), function () {
                    return a._processingThumbnail = !1,
                    a._processThumbnailQueue()
                })
            },
            b.prototype.removeFile = function (a) {
                return a.status === b.UPLOADING && this.cancelUpload(a),
                this.files = h(this.files, a),
                this.emit("removedfile", a),
                0 === this.files.length ? this.emit("reset") : void 0
            },
            b.prototype.removeAllFiles = function (a) {
                var c, d, e, f;
                for (null == a && (a = !1), f = this.files.slice(), d = 0, e = f.length; e > d; d++) c = f[d],
                (c.status !== b.UPLOADING || a) && this.removeFile(c);
                return null
            },
            b.prototype.createThumbnail = function (a, b) {
                var c, d = this;
                return c = new FileReader,
                c.onload = function () {
                    var e;
                    return e = document.createElement("img"),
                    e.onload = function () {
                        var c, g, h, i, j, k, l, m;
                        return a.width = e.width,
                        a.height = e.height,
                        h = d.options.resize.call(d, a),
                        null == h.trgWidth && (h.trgWidth = d.options.thumbnailWidth),
                        null == h.trgHeight && (h.trgHeight = d.options.thumbnailHeight),
                        c = document.createElement("canvas"),
                        g = c.getContext("2d"),
                        c.width = h.trgWidth,
                        c.height = h.trgHeight,
                        f(g, e, null != (j = h.srcX) ? j : 0, null != (k = h.srcY) ? k : 0, h.srcWidth, h.srcHeight, null != (l = h.trgX) ? l : 0, null != (m = h.trgY) ? m : 0, h.trgWidth, h.trgHeight),
                        i = c.toDataURL("image/png"),
                        d.emit("thumbnail", a, i),
                        null != b ? b() : void 0
                    },
                    e.src = c.result
                },
                c.readAsDataURL(a)
            },
            b.prototype.processQueue = function () {
                var a, b, c, d;
                if (b = this.options.parallelUploads, c = this.getUploadingFiles().length, a = c, !(c >= b) && (d = this.getQueuedFiles(), d.length > 0)) {
                    if (this.options.uploadMultiple) return this.processFiles(d.slice(0, b - c));
                    for (; b > a;) {
                        if (!d.length) return;
                        this.processFile(d.shift()),
                        a++
                    }
                }
            },
            b.prototype.processFile = function (a) {
                return this.processFiles([a])
            },
            b.prototype.processFiles = function (a) {
                var c, d, e;
                for (d = 0, e = a.length; e > d; d++) c = a[d],
                c.processing = !0,
                c.status = b.UPLOADING,
                this.emit("processing", c);
                return this.options.uploadMultiple && this.emit("processingmultiple", a),
                this.uploadFiles(a)
            },
            b.prototype._getFilesWithXhr = function (a) {
                var b, c;
                return c = function () {
                    var c, d, e, f;
                    for (e = this.files, f = [], c = 0, d = e.length; d > c; c++) b = e[c],
                    b.xhr === a && f.push(b);
                    return f
                }.call(this)
            },
            b.prototype.cancelUpload = function (a) {
                var c, d, e, f, g, h, i;
                if (a.status === b.UPLOADING) {
                    for (d = this._getFilesWithXhr(a.xhr), e = 0, g = d.length; g > e; e++) c = d[e],
                    c.status = b.CANCELED;
                    for (a.xhr.abort(), f = 0, h = d.length; h > f; f++) c = d[f],
                    this.emit("canceled", c);
                    this.options.uploadMultiple && this.emit("canceledmultiple", d)
                } else((i = a.status) === b.ADDED || i === b.QUEUED) && (a.status = b.CANCELED, this.emit("canceled", a), this.options.uploadMultiple && this.emit("canceledmultiple", [a]));
                return this.options.autoProcessQueue ? this.processQueue() : void 0
            },
            b.prototype.uploadFile = function (a) {
                return this.uploadFiles([a])
            },
            b.prototype.uploadFiles = function (a) {
                var d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I = this;
                for (s = new XMLHttpRequest, t = 0, x = a.length; x > t; t++) d = a[t],
                d.xhr = s;
                s.open(this.options.method, this.options.url, !0),
                s.withCredentials = !! this.options.withCredentials,
                p = null,
                f = function () {
                    var b, c, e;
                    for (e = [], b = 0, c = a.length; c > b; b++) d = a[b],
                    e.push(I._errorProcessing(a, p || I.options.dictResponseError.replace("{{statusCode}}", s.status), s));
                    return e
                },
                q = function (b) {
                    var c, e, f, g, h, i, j, k, l;
                    if (null != b) for (e = 100 * b.loaded / b.total, f = 0, i = a.length; i > f; f++) d = a[f],
                    d.upload = {
                        "progress": e,
                        "total": b.total,
                        "bytesSent": b.loaded
                    };
                    else {
                        for (c = !0, e = 100, g = 0, j = a.length; j > g; g++) d = a[g],
                        (100 !== d.upload.progress || d.upload.bytesSent !== d.upload.total) && (c = !1),
                        d.upload.progress = e,
                        d.upload.bytesSent = d.upload.total;
                        if (c) return
                    }
                    for (l = [], h = 0, k = a.length; k > h; h++) d = a[h],
                    l.push(I.emit("uploadprogress", d, e, d.upload.bytesSent));
                    return l
                },
                s.onload = function (c) {
                    var d;
                    if (a[0].status !== b.CANCELED && 4 === s.readyState) {
                        if (p = s.responseText, s.getResponseHeader("content-type") && ~s.getResponseHeader("content-type").indexOf("application/json")) try {
                            p = JSON.parse(p)
                        } catch (e) {
                            c = e,
                            p = "Invalid JSON response from server."
                        }
                        return q(),
                        200 <= (d = s.status) && 300 > d ? I._finished(a, p, c) : f()
                    }
                },
                s.onerror = function () {
                    return a[0].status !== b.CANCELED ? f() : void 0
                },
                o = null != (D = s.upload) ? D : s,
                o.onprogress = q,
                i = {
                    "Accept": "application/json",
                    "Cache-Control": "no-cache",
                    "X-Requested-With": "XMLHttpRequest"
                },
                this.options.headers && c(i, this.options.headers);
                for (g in i) h = i[g],
                s.setRequestHeader(g, h);
                if (e = new FormData, this.options.params) {
                    E = this.options.params;
                    for (m in E) r = E[m],
                    e.append(m, r)
                }
                for (u = 0, y = a.length; y > u; u++) d = a[u],
                this.emit("sending", d, s, e);
                if (this.options.uploadMultiple && this.emit("sendingmultiple", a, s, e), "FORM" === this.element.tagName) for (F = this.element.querySelectorAll("input, textarea, select, button"), v = 0, z = F.length; z > v; v++) if (j = F[v], k = j.getAttribute("name"), l = j.getAttribute("type"), "SELECT" === j.tagName && j.hasAttribute("multiple")) for (G = j.options, w = 0, A = G.length; A > w; w++) n = G[w],
                n.selected && e.append(k, n.value);
                else(!l || "checkbox" !== (H = l.toLowerCase()) && "radio" !== H || j.checked) && e.append(k, j.value);
                for (C = 0, B = a.length; B > C; C++) d = a[C],
                e.append("" + this.options.paramName + (this.options.uploadMultiple ? "[]" : ""), d, d.name);
                return s.send(e)
            },
            b.prototype._finished = function (a, c, d) {
                var e, f, g;
                for (f = 0, g = a.length; g > f; f++) e = a[f],
                e.status = b.SUCCESS,
                this.emit("success", e, c, d),
                this.emit("complete", e);
                return this.options.uploadMultiple && (this.emit("successmultiple", a, c, d), this.emit("completemultiple", a)),
                this.options.autoProcessQueue ? this.processQueue() : void 0
            },
            b.prototype._errorProcessing = function (a, c, d) {
                var e, f, g;
                for (f = 0, g = a.length; g > f; f++) e = a[f],
                e.status = b.ERROR,
                this.emit("error", e, c, d),
                this.emit("complete", e);
                return this.options.uploadMultiple && (this.emit("errormultiple", a, c, d), this.emit("completemultiple", a)),
                this.options.autoProcessQueue ? this.processQueue() : void 0
            },
            b
        }(b),
    a.version = "3.8.4",
    a.options = {},
    a.optionsForElement = function (b) {
            return b.getAttribute("id") ? a.options[c(b.getAttribute("id"))] : void 0
        },
    a.instances = [],
    a.forElement = function (a) {
            if ("string" == typeof a && (a = document.querySelector(a)), null == (null != a ? a.dropzone : void 0)) throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
            return a.dropzone
        },
    a.autoDiscover = !0,
    a.discover = function () {
            var b, c, d, e, f, g;
            for (document.querySelectorAll ? d = document.querySelectorAll(".dropzone") : (d = [], b = function (a) {
                var b, c, e, f;
                for (f = [], c = 0, e = a.length; e > c; c++) b = a[c],
                f.push(/(^| )dropzone($| )/.test(b.className) ? d.push(b) : void 0);
                return f
            }, b(document.getElementsByTagName("div")), b(document.getElementsByTagName("form"))), g = [], e = 0, f = d.length; f > e; e++) c = d[e],
            g.push(a.optionsForElement(c) !== !1 ? new a(c) : void 0);
            return g
        },
    a.blacklistedBrowsers = [/opera.*Macintosh.*version\/12/i],
    a.isBrowserSupported = function () {
            var b, c, d, e, f;
            if (b = !0, window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) if ("classList" in document.createElement("a")) for (f = a.blacklistedBrowsers, d = 0, e = f.length; e > d; d++) c = f[d],
            c.test(navigator.userAgent) && (b = !1);
            else b = !1;
            else b = !1;
            return b
        },
    h = function (a, b) {
            var c, d, e, f;
            for (f = [], d = 0, e = a.length; e > d; d++) c = a[d],
            c !== b && f.push(c);
            return f
        },
    c = function (a) {
            return a.replace(/[\-_](\w)/g, function (a) {
                return a[1].toUpperCase()
            })
        },
    a.createElement = function (a) {
            var b;
            return b = document.createElement("div"),
            b.innerHTML = a,
            b.childNodes[0]
        },
    a.elementInside = function (a, b) {
            if (a === b) return !0;
            for (; a = a.parentNode;) if (a === b) return !0;
            return !1
        },
    a.getElement = function (a, b) {
            var c;
            if ("string" == typeof a ? c = document.querySelector(a) : null != a.nodeType && (c = a), null == c) throw new Error("Invalid `" + b + "` option provided. Please provide a CSS selector or a plain HTML element.");
            return c
        },
    a.getElements = function (a, b) {
            var c, d, e, f, g, h, i, j;
            if (a instanceof Array) {
                e = [];
                try {
                    for (f = 0, h = a.length; h > f; f++) d = a[f],
                    e.push(this.getElement(d, b))
                } catch (k) {
                    c = k,
                    e = null
                }
            } else if ("string" == typeof a) for (e = [], j = document.querySelectorAll(a), g = 0, i = j.length; i > g; g++) d = j[g],
            e.push(d);
            else null != a.nodeType && (e = [a]);
            if (null == e || !e.length) throw new Error("Invalid `" + b + "` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");
            return e
        },
    a.confirm = function (a, b, c) {
            return window.confirm(a) ? b() : null != c ? c() : void 0
        },
    a.isValidFile = function (a, b) {
            var c, d, e, f, g;
            if (!b) return !0;
            for (b = b.split(","), d = a.type, c = d.replace(/\/.*$/, ""), f = 0, g = b.length; g > f; f++) if (e = b[f], e = e.trim(), "." === e.charAt(0)) {
                if (-1 !== a.name.toLowerCase().indexOf(e.toLowerCase(), a.name.length - e.length)) return !0
            } else if (/\/\*$/.test(e)) {
                if (c === e.replace(/\/.*$/, "")) return !0
            } else if (d === e) return !0;
            return !1
        },
    "undefined" != typeof jQuery && null !== jQuery && (jQuery.fn.dropzone = function (b) {
            return this.each(function () {
                return new a(this, b)
            })
        }),
    "undefined" != typeof module && null !== module ? module.exports = a : window.Dropzone = a,
    a.ADDED = "added",
    a.QUEUED = "queued",
    a.ACCEPTED = a.QUEUED,
    a.UPLOADING = "uploading",
    a.PROCESSING = a.UPLOADING,
    a.CANCELED = "canceled",
    a.ERROR = "error",
    a.SUCCESS = "success",
    e = function (a) {
            var b, c, d, e, f, g, h, i, j, k;
            for (h = a.naturalWidth, g = a.naturalHeight, c = document.createElement("canvas"), c.width = 1, c.height = g, d = c.getContext("2d"), d.drawImage(a, 0, 0), e = d.getImageData(0, 0, 1, g).data, k = 0, f = g, i = g; i > k;) b = e[4 * (i - 1) + 3],
            0 === b ? f = i : k = i,
            i = f + k >> 1;
            return j = i / g,
            0 === j ? 1 : j
        },
    f = function (a, b, c, d, f, g, h, i, j, k) {
            var l;
            return l = e(b),
            a.drawImage(b, c, d, f, g, h, i, j, k / l)
        },
    d = function (a, b) {
            var c, d, e, f, g, h, i, j, k;
            if (e = !1, k = !0, d = a.document, j = d.documentElement, c = d.addEventListener ? "addEventListener" : "attachEvent", i = d.addEventListener ? "removeEventListener" : "detachEvent", h = d.addEventListener ? "" : "on", f = function (c) {
                return "readystatechange" !== c.type || "complete" === d.readyState ? (("load" === c.type ? a : d)[i](h + c.type, f, !1), !e && (e = !0) ? b.call(a, c.type || c) : void 0) : void 0
            }, g = function () {
                var a;
                try {
                    j.doScroll("left")
                } catch (b) {
                    return a = b,
                    void setTimeout(g, 50)
                }
                return f("poll")
            }, "complete" !== d.readyState) {
                if (d.createEventObject && j.doScroll) {
                    try {
                        k = !a.frameElement
                    } catch (l) {}
                    k && g()
                }
                return d[c](h + "DOMContentLoaded", f, !1),
                d[c](h + "readystatechange", f, !1),
                a[c](h + "load", f, !1)
            }
        },
    a._autoDiscoverFunction = function () {
            return a.autoDiscover ? a.discover() : void 0
        },
    d(window, a._autoDiscoverFunction)
}.call(this),


function (a) {
    "function" == typeof define && define.amd ? define(["jquery", "codemirror"], a) : a(window.jQuery, window.CodeMirror)
}(function (a, b) {
    "function" != typeof Array.prototype.reduce && (Array.prototype.reduce = function (a, b) {
        var c, d, e = this.length >>> 0,
            f = !1;
        for (1 < arguments.length && (d = b, f = !0), c = 0; e > c; ++c) this.hasOwnProperty(c) && (f ? d = a(d, this[c], c, this) : (d = this[c], f = !0));
        if (!f) throw new TypeError("Reduce of empty array with no initial value");
        return d
    });
    var c = {
        "bMac": navigator.appVersion.indexOf("Mac") > -1,
        "bMSIE": navigator.userAgent.indexOf("MSIE") > -1,
        "bFF": navigator.userAgent.indexOf("Firefox") > -1,
        "jqueryVersion": parseFloat(a.fn.jquery),
        "bCodeMirror": !! b
    },
        d = function () {
            var a = function (a) {
                return function (b) {
                    return a === b
                }
            },
                b = function (a, b) {
                    return a === b
                },
                c = function () {
                    return !0
                },
                d = function () {
                    return !1
                },
                e = function (a) {
                    return function () {
                        return !a.apply(a, arguments)
                    }
                },
                f = function (a) {
                    return a
                };
            return {
                    "eq": a,
                    "eq2": b,
                    "ok": c,
                    "fail": d,
                    "not": e,
                    "self": f
                }
        }(),
        e = function () {
            var a = function (a) {
                return a[0]
            },
                b = function (a) {
                    return a[a.length - 1]
                },
                c = function (a) {
                    return a.slice(0, a.length - 1)
                },
                e = function (a) {
                    return a.slice(1)
                },
                f = function (a, b) {
                    var c = a.indexOf(b);
                    return -1 === c ? null : a[c + 1]
                },
                g = function (a, b) {
                    var c = a.indexOf(b);
                    return -1 === c ? null : a[c - 1]
                },
                h = function (a, b) {
                    return b = b || d.self,
                    a.reduce(function (a, c) {
                        return a + b(c)
                    }, 0)
                },
                i = function (a) {
                    for (var b = [], c = -1, d = a.length; ++c < d;) b[c] = a[c];
                    return b
                },
                j = function (c, d) {
                    if (0 === c.length) return [];
                    var f = e(c);
                    return f.reduce(function (a, c) {
                        var e = b(a);
                        return d(b(e), c) ? e[e.length] = c : a[a.length] = [c],
                        a
                    }, [
                        [a(c)]
                    ])
                },
                k = function (a) {
                    for (var b = [], c = 0, d = a.length; d > c; c++) a[c] && b.push(a[c]);
                    return b
                };
            return {
                    "head": a,
                    "last": b,
                    "initial": c,
                    "tail": e,
                    "prev": g,
                    "next": f,
                    "sum": h,
                    "from": i,
                    "compact": k,
                    "clusterBy": j
                }
        }(),
        f = function () {
            var b = function (b) {
                return b && a(b).hasClass("note-editable")
            },
                g = function (b) {
                    return b && a(b).hasClass("note-control-sizing")
                },
                h = function (a) {
                    var b = function (b) {
                        return function () {
                            return a.find(b)
                        }
                    };
                    return {
                        "editor": function () {
                            return a
                        },
                        "dropzone": b(".note-dropzone"),
                        "toolbar": b(".note-toolbar"),
                        "editable": b(".note-editable"),
                        "codable": b(".note-codable"),
                        "statusbar": b(".note-statusbar"),
                        "popover": b(".note-popover"),
                        "handle": b(".note-handle"),
                        "dialog": b(".note-dialog")
                    }
                },
                i = function (a) {
                    return function (b) {
                        return b && b.nodeName === a
                    }
                },
                j = function (a) {
                    return a && /^DIV|^P|^LI|^H[1-7]/.test(a.nodeName)
                },
                k = function (a) {
                    return a && /^UL|^OL/.test(a.nodeName)
                },
                l = function (a) {
                    return a && /^TD|^TH/.test(a.nodeName)
                },
                m = function (a, c) {
                    for (; a;) {
                        if (c(a)) return a;
                        if (b(a)) break;
                        a = a.parentNode
                    }
                    return null
                },
                n = function (a, b) {
                    b = b || d.fail;
                    var c = [];
                    return m(a, function (a) {
                        return c.push(a),
                        b(a)
                    }),
                    c
                },
                o = function (b, c) {
                    for (var d = n(b), e = c; e; e = e.parentNode) if (a.inArray(e, d) > -1) return e;
                    return null
                },
                p = function (a, b) {
                    var c = [],
                        d = !1,
                        e = !1;
                    return function f(g) {
                            if (g) {
                                if (g === a && (d = !0), d && !e && c.push(g), g === b) return void(e = !0);
                                for (var h = 0, i = g.childNodes.length; i > h; h++) f(g.childNodes[h])
                            }
                        }(o(a, b)),
                    c
                },
                q = function (a, b) {
                    b = b || d.fail;
                    for (var c = []; a && (c.push(a), !b(a));) a = a.previousSibling;
                    return c
                },
                r = function (a, b) {
                    b = b || d.fail;
                    for (var c = []; a && (c.push(a), !b(a));) a = a.nextSibling;
                    return c
                },
                s = function (a, b) {
                    var c = [];
                    return b = b || d.ok,


                    function e(d) {
                        a !== d && b(d) && c.push(d);
                        for (var f = 0, g = d.childNodes.length; g > f; f++) e(d.childNodes[f])
                    }(a),
                    c
                },
                t = function (a, b) {
                    var c = b.nextSibling,
                        d = b.parentNode;
                    return c ? d.insertBefore(a, c) : d.appendChild(a),
                    a
                },
                u = function (b, c) {
                    return a.each(c, function (a, c) {
                        b.appendChild(c)
                    }),
                    b
                },
                v = i("#text"),
                w = function (a) {
                    return v(a) ? a.nodeValue.length : a.childNodes.length
                },
                x = function (a) {
                    for (var b = 0; a = a.previousSibling;) b += 1;
                    return b
                },
                y = function (b, c) {
                    var f = e.initial(n(c, d.eq(b)));
                    return a.map(f, x).reverse()
                },
                z = function (a, b) {
                    for (var c = a, d = 0, e = b.length; e > d; d++) c = c.childNodes[b[d]];
                    return c
                },
                A = function (a, b) {
                    if (0 === b) return a;
                    if (b >= w(a)) return a.nextSibling;
                    if (v(a)) return a.splitText(b);
                    var c = a.childNodes[b];
                    return a = t(a.cloneNode(!1), a),
                    u(a, r(c))
                },
                B = function (a, b, c) {
                    var e = n(b, d.eq(a));
                    return 1 === e.length ? A(b, c) : e.reduce(function (a, d) {
                        var e = d.cloneNode(!1);
                        return t(e, d),
                        a === b && (a = A(a, c)),
                        u(e, r(a)),
                        e
                    })
                },
                C = function (a, b) {
                    if (a && a.parentNode) {
                        if (a.removeNode) return a.removeNode(b);
                        var c = a.parentNode;
                        if (!b) {
                            var d, e, f = [];
                            for (d = 0, e = a.childNodes.length; e > d; d++) f.push(a.childNodes[d]);
                            for (d = 0, e = f.length; e > d; d++) c.insertBefore(f[d], a)
                        }
                        c.removeChild(a)
                    }
                },
                D = function (a) {
                    return f.isTextarea(a[0]) ? a.val() : a.html()
                };
            return {
                    "blank": c.bMSIE ? "&nbsp;" : "<br/>",
                    "emptyPara": "<p><br/></p>",
                    "isEditable": b,
                    "isControlSizing": g,
                    "buildLayoutInfo": h,
                    "isText": v,
                    "isPara": j,
                    "isList": k,
                    "isTable": i("TABLE"),
                    "isCell": l,
                    "isAnchor": i("A"),
                    "isDiv": i("DIV"),
                    "isLi": i("LI"),
                    "isSpan": i("SPAN"),
                    "isB": i("B"),
                    "isU": i("U"),
                    "isS": i("S"),
                    "isI": i("I"),
                    "isImg": i("IMG"),
                    "isTextarea": i("TEXTAREA"),
                    "ancestor": m,
                    "listAncestor": n,
                    "listNext": r,
                    "listPrev": q,
                    "listDescendant": s,
                    "commonAncestor": o,
                    "listBetween": p,
                    "insertAfter": t,
                    "position": x,
                    "makeOffsetPath": y,
                    "fromOffsetPath": z,
                    "split": B,
                    "remove": C,
                    "html": D
                }
        }(),
        g = {
            "version": "0.5.1",
            "options": {
                "width": null,
                "height": null,
                "focus": !1,
                "tabsize": null,
                "styleWithSpan": !0,
                "disableLinkTarget": !1,
                "disableDragAndDrop": !1,
                "codemirror": null,
                "lang": "en-US",
                "direction": null,
                "toolbar": [
                    ["style", ["style"]],
                    ["font", ["bold", "italic", "underline", "clear"]],
                    ["fontname", ["fontname"]],
                    ["color", ["color"]],
                    ["para", ["ul", "ol", "paragraph"]],
                    ["height", ["height"]],
                    ["table", ["table"]],
                    ["insert", ["link", "picture", "video"]],
                    ["view", ["fullscreen", "codeview"]],
                    ["help", ["help"]]
                ],
                "oninit": null,
                "onfocus": null,
                "onblur": null,
                "onenter": null,
                "onkeyup": null,
                "onkeydown": null,
                "onImageUpload": null,
                "onImageUploadError": null,
                "onToolbarClick": null
            },
            "lang": {
                "en-US": {
                    "font": {
                        "bold": "Bold",
                        "italic": "Italic",
                        "underline": "Underline",
                        "strike": "Strike",
                        "clear": "Remove Font Style",
                        "height": "Line Height",
                        "name": "Font Family",
                        "size": "Font Size"
                    },
                    "image": {
                        "image": "Picture",
                        "insert": "Insert Image",
                        "resizeFull": "Resize Full",
                        "resizeHalf": "Resize Half",
                        "resizeQuarter": "Resize Quarter",
                        "floatLeft": "Float Left",
                        "floatRight": "Float Right",
                        "floatNone": "Float None",
                        "dragImageHere": "Drag an image here",
                        "selectFromFiles": "Select from files",
                        "url": "Image URL",
                        "remove": "Remove Image"
                    },
                    "link": {
                        "link": "Link",
                        "insert": "Insert Link",
                        "unlink": "Unlink",
                        "edit": "Edit",
                        "textToDisplay": "Text to display",
                        "url": "To what URL should this link go?",
                        "openInNewWindow": "Open in new window"
                    },
                    "video": {
                        "video": "Video",
                        "videoLink": "Video Link",
                        "insert": "Insert Video",
                        "url": "Video URL?",
                        "providers": "(YouTube, Vimeo, Vine, Instagram, or DailyMotion)"
                    },
                    "table": {
                        "table": "Table"
                    },
                    "hr": {
                        "insert": "Insert Horizontal Rule"
                    },
                    "style": {
                        "style": "Style",
                        "normal": "Normal",
                        "blockquote": "Quote",
                        "pre": "Code",
                        "h1": "Header 1",
                        "h2": "Header 2",
                        "h3": "Header 3",
                        "h4": "Header 4",
                        "h5": "Header 5",
                        "h6": "Header 6"
                    },
                    "lists": {
                        "unordered": "Unordered list",
                        "ordered": "Ordered list"
                    },
                    "options": {
                        "help": "Help",
                        "fullscreen": "Full Screen",
                        "codeview": "Code View"
                    },
                    "paragraph": {
                        "paragraph": "Paragraph",
                        "outdent": "Outdent",
                        "indent": "Indent",
                        "left": "Align left",
                        "center": "Align center",
                        "right": "Align right",
                        "justify": "Justify full"
                    },
                    "color": {
                        "recent": "Recent Color",
                        "more": "More Color",
                        "background": "BackColor",
                        "foreground": "FontColor",
                        "transparent": "Transparent",
                        "setTransparent": "Set transparent",
                        "reset": "Reset",
                        "resetToDefault": "Reset to default"
                    },
                    "shortcut": {
                        "shortcuts": "Keyboard shortcuts",
                        "close": "Close",
                        "textFormatting": "Text formatting",
                        "action": "Action",
                        "paragraphFormatting": "Paragraph formatting",
                        "documentStyle": "Document Style"
                    },
                    "history": {
                        "undo": "Undo",
                        "redo": "Redo"
                    }
                }
            }
        },
        h = function () {
            var b = function (b) {
                return a.Deferred(function (c) {
                    a.extend(new FileReader, {
                        "onload": function (a) {
                            var b = a.target.result;
                            c.resolve(b)
                        },
                        "onerror": function () {
                            c.reject(this)
                        }
                    }).readAsDataURL(b)
                }).promise()
            },
                c = function (b) {
                    return a.Deferred(function (c) {
                        a.extend(new Image, {
                            "detachEvents": function () {
                                this.onload = null,
                                this.onerror = null,
                                this.onabort = null
                            },
                            "onload": function () {
                                this.detachEvents(),
                                c.resolve(this)
                            },
                            "onerror": function () {
                                this.detachEvents(),
                                c.reject(this)
                            },
                            "onabort": function () {
                                this.detachEvents(),
                                c.reject(this)
                            }
                        }).src = b
                    }).promise()
                };
            return {
                    "readFileAsDataURL": b,
                    "loadImage": c
                }
        }(),
        i = {
            "BACKSPACE": 8,
            "TAB": 9,
            "ENTER": 13,
            "SPACE": 32,
            "NUM0": 48,
            "NUM1": 49,
            "NUM6": 54,
            "NUM7": 55,
            "NUM8": 56,
            "B": 66,
            "E": 69,
            "I": 73,
            "J": 74,
            "K": 75,
            "L": 76,
            "R": 82,
            "S": 83,
            "U": 85,
            "Y": 89,
            "Z": 90,
            "SLASH": 191,
            "LEFTBRACKET": 219,
            "BACKSLACH": 220,
            "RIGHTBRACKET": 221
        },
        j = function () {
            var b = function (b, d) {
                if (c.jqueryVersion < 1.9) {
                    var e = {};
                    return a.each(d, function (a, c) {
                        e[c] = b.css(c)
                    }),
                    e
                }
                return b.css.call(b, d)
            };
            this.stylePara = function (b, c) {
                a.each(b.nodes(f.isPara), function (b, d) {
                    a(d).css(c)
                })
            },
            this.current = function (c, d) {
                var e = a(f.isText(c.sc) ? c.sc.parentNode : c.sc),
                    g = ["font-family", "font-size", "text-align", "list-style-type", "line-height"],
                    h = b(e, g) || {};
                if (h["font-size"] = parseInt(h["font-size"]), h["font-bold"] = document.queryCommandState("bold") ? "bold" : "normal", h["font-italic"] = document.queryCommandState("italic") ? "italic" : "normal", h["font-underline"] = document.queryCommandState("underline") ? "underline" : "normal", c.isOnList()) {
                        var i = ["circle", "disc", "disc-leading-zero", "square"],
                            j = a.inArray(h["list-style-type"], i) > -1;
                        h["list-style"] = j ? "unordered" : "ordered"
                    } else h["list-style"] = "none";
                var k = f.ancestor(c.sc, f.isPara);
                if (k && k.style["line-height"]) h["line-height"] = k.style.lineHeight;
                else {
                        var l = parseInt(h["line-height"]) / parseInt(h["font-size"]);
                        h["line-height"] = l.toFixed(1)
                    }
                return h.image = f.isImg(d) && d,
                h.anchor = c.isOnAnchor() && f.ancestor(c.sc, f.isAnchor),
                h.aAncestor = f.listAncestor(c.sc, f.isEditable),
                h
            }
        },
        k = function () {
            var b = !! document.createRange,
                c = function (a, b) {
                    var c, d, g = a.parentElement(),
                        h = document.body.createTextRange(),
                        i = e.from(g.childNodes);
                    for (c = 0; c < i.length; c++) if (!f.isText(i[c])) {
                            if (h.moveToElementText(i[c]), h.compareEndPoints("StartToStart", a) >= 0) break;
                            d = i[c]
                        }
                    if (0 !== c && f.isText(i[c - 1])) {
                            var j = document.body.createTextRange(),
                                k = null;
                            j.moveToElementText(d || g),
                            j.collapse(!d),
                            k = d ? d.nextSibling : g.firstChild;
                            var l = a.duplicate();
                            l.setEndPoint("StartToStart", j);
                            for (var m = l.text.replace(/[\r\n]/g, "").length; m > k.nodeValue.length && k.nextSibling;) m -= k.nodeValue.length,
                            k = k.nextSibling; {
                                    k.nodeValue
                                }
                            b && k.nextSibling && f.isText(k.nextSibling) && m === k.nodeValue.length && (m -= k.nodeValue.length, k = k.nextSibling),
                            g = k,
                            c = m
                        }
                    return {
                            "cont": g,
                            "offset": c
                        }
                },
                g = function (a) {
                    var b = function (a, c) {
                        var g, h;
                        if (f.isText(a)) {
                            var i = f.listPrev(a, d.not(f.isText)),
                                j = e.last(i).previousSibling;
                            g = j || a.parentNode,
                            c += e.sum(e.tail(i), f.length),
                            h = !j
                        } else {
                            if (g = a.childNodes[c] || a, f.isText(g)) return b(g, c);
                            c = 0,
                            h = !1
                        }
                        return {
                            "cont": g,
                            "collapseToStart": h,
                            "offset": c
                        }
                    },
                        c = document.body.createTextRange(),
                        g = b(a.cont, a.offset);
                    return c.moveToElementText(g.cont),
                    c.collapse(g.collapseToStart),
                    c.moveStart("character", g.offset),
                    c
                },
                h = function (c, h, i, j) {
                    this.sc = c,
                    this.so = h,
                    this.ec = i,
                    this.eo = j;
                    var k = function () {
                        if (b) {
                            var a = document.createRange();
                            return a.setStart(c, h),
                            a.setEnd(i, j),
                            a
                        }
                        var d = g({
                            "cont": c,
                            "offset": h
                        });
                        return d.setEndPoint("EndToEnd", g({
                            "cont": i,
                            "offset": j
                        })),
                        d
                    };
                    this.select = function () {
                        var a = k();
                        if (b) {
                            var c = document.getSelection();
                            c.rangeCount > 0 && c.removeAllRanges(),
                            c.addRange(a)
                        } else a.select()
                    },
                    this.nodes = function (b) {
                        var g = f.listBetween(c, i),
                            h = e.compact(a.map(g, function (a) {
                                return f.ancestor(a, b)
                            }));
                        return a.map(e.clusterBy(h, d.eq2), e.head)
                    },
                    this.commonAncestor = function () {
                        return f.commonAncestor(c, i)
                    };
                    var l = function (a) {
                        return function () {
                            var b = f.ancestor(c, a);
                            return !!b && b === f.ancestor(i, a)
                        }
                    };
                    this.isOnEditable = l(f.isEditable),
                    this.isOnList = l(f.isList),
                    this.isOnAnchor = l(f.isAnchor),
                    this.isOnCell = l(f.isCell),
                    this.isCollapsed = function () {
                        return c === i && h === j
                    },
                    this.insertNode = function (a) {
                        var c = k();
                        b ? c.insertNode(a) : c.pasteHTML(a.outerHTML)
                    },
                    this.toString = function () {
                        var a = k();
                        return b ? a.toString() : a.text
                    },
                    this.bookmark = function (a) {
                        return {
                            "s": {
                                "path": f.makeOffsetPath(a, c),
                                "offset": h
                            },
                            "e": {
                                "path": f.makeOffsetPath(a, i),
                                "offset": j
                            }
                        }
                    }
                };
            return {
                    "create": function (a, d, e, f) {
                        if (0 === arguments.length) if (b) {
                            var g = document.getSelection();
                            if (0 === g.rangeCount) return null;
                            var i = g.getRangeAt(0);
                            a = i.startContainer,
                            d = i.startOffset,
                            e = i.endContainer,
                            f = i.endOffset
                        } else {
                            var j = document.selection.createRange(),
                                k = j.duplicate();
                            k.collapse(!1);
                            var l = j;
                            l.collapse(!0);
                            var m = c(l, !0),
                                n = c(k, !1);
                            a = m.cont,
                            d = m.offset,
                            e = n.cont,
                            f = n.offset
                        } else 2 === arguments.length && (e = a, f = d);
                        return new h(a, d, e, f)
                    },
                    "createFromNode": function (a) {
                        return this.create(a, 0, a, 1)
                    },
                    "createFromBookmark": function (a, b) {
                        var c = f.fromOffsetPath(a, b.s.path),
                            d = b.s.offset,
                            e = f.fromOffsetPath(a, b.e.path),
                            g = b.e.offset;
                        return new h(c, d, e, g)
                    }
                }
        }(),
        l = function () {
            this.tab = function (a, b) {
                var c = f.ancestor(a.commonAncestor(), f.isCell),
                    d = f.ancestor(c, f.isTable),
                    g = f.listDescendant(d, f.isCell),
                    h = e[b ? "prev" : "next"](g, c);
                h && k.create(h, 0).select()
            },
            this.createTable = function (b, c) {
                for (var d, e = [], g = 0; b > g; g++) e.push("<td>" + f.blank + "</td>");
                d = e.join("");
                for (var h, i = [], j = 0; c > j; j++) i.push("<tr>" + d + "</tr>");
                h = i.join("");
                var k = '<table class="table table-bordered">' + h + "</table>";
                return a(k)[0]
            }
        },
        m = function () {
            var b = new j,
                d = new l;
            this.saveRange = function (a) {
                    a.data("range", k.create())
                },
            this.restoreRange = function (a) {
                    var b = a.data("range");
                    b && b.select()
                },
            this.currentStyle = function (a) {
                    var c = k.create();
                    return c && c.isOnEditable() && b.current(c, a)
                },
            this.undo = function (a) {
                    a.data("NoteHistory").undo(a)
                },
            this.redo = function (a) {
                    a.data("NoteHistory").redo(a)
                };
            for (var e = this.recordUndo = function (a) {
                    a.data("NoteHistory").recordUndo(a)
                }, g = ["bold", "italic", "underline", "strikethrough", "justifyLeft", "justifyCenter", "justifyRight", "justifyFull", "insertOrderedList", "insertUnorderedList", "indent", "outdent", "formatBlock", "removeFormat", "backColor", "foreColor", "insertHorizontalRule", "fontName"], i = 0, m = g.length; m > i; i++) this[g[i]] = function (a) {
                    return function (b, c) {
                        e(b),
                        document.execCommand(a, !1, c)
                    }
                }(g[i]);
            var n = function (b, c, d) {
                    e(b);
                    var g = new Array(d + 1).join("&nbsp;");
                    c.insertNode(a('<span id="noteTab">' + g + "</span>")[0]);
                    var h = a("#noteTab").removeAttr("id");
                    c = k.create(h[0], 1),
                    c.select(),
                    f.remove(h[0])
                };
            this.tab = function (a, b, c) {
                    var e = k.create();
                    e.isCollapsed() && e.isOnCell() ? d.tab(e, c) : n(a, e, b)
                },
            this.insertImage = function (b, c) {
                    h.loadImage(c).done(function (d) {
                        e(b);
                        var f = a("<img>").attr("src", c);
                        f.css("width", Math.min(b.width(), d.width)),
                        k.create().insertNode(f[0])
                    }).fail(function () {
                        var a = b.data("callbacks");
                        a.onImageUploadError && a.onImageUploadError()
                    })
                },
            this.insertVideo = function (b, c) {
                    e(b);
                    var d, f = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/,
                        g = c.match(f),
                        h = /\/\/instagram.com\/p\/(.[a-zA-Z0-9]*)/,
                        i = c.match(h),
                        j = /\/\/vine.co\/v\/(.[a-zA-Z0-9]*)/,
                        l = c.match(j),
                        m = /\/\/(player.)?vimeo.com\/([a-z]*\/)*([0-9]{6,11})[?]?.*/,
                        n = c.match(m),
                        o = /.+dailymotion.com\/(video|hub)\/([^_]+)[^#]*(#video=([^_&]+))?/,
                        p = c.match(o);
                    if (g && 11 === g[2].length) {
                            var q = g[2];
                            d = a("<iframe>").attr("src", "//www.youtube.com/embed/" + q).attr("width", "640").attr("height", "360")
                        } else i && i[0].length > 0 ? d = a("<iframe>").attr("src", i[0] + "/embed/").attr("width", "612").attr("height", "710").attr("scrolling", "no").attr("allowtransparency", "true") : l && l[0].length > 0 ? d = a("<iframe>").attr("src", l[0] + "/embed/simple").attr("width", "600").attr("height", "600").attr("class", "vine-embed") : n && n[3].length > 0 ? d = a("<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>").attr("src", "//player.vimeo.com/video/" + n[3]).attr("width", "640").attr("height", "360") : p && p[2].length > 0 && (d = a("<iframe>").attr("src", "//www.dailymotion.com/embed/video/" + p[2]).attr("width", "640").attr("height", "360"));
                    d && (d.attr("frameborder", 0), k.create().insertNode(d[0]))
                },
            this.formatBlock = function (a, b) {
                    e(a),
                    b = c.bMSIE ? "<" + b + ">" : b,
                    document.execCommand("FormatBlock", !1, b)
                },
            this.fontSize = function (a, b) {
                    e(a),
                    document.execCommand("fontSize", !1, 3),
                    c.bFF ? a.find("font[size=3]").removeAttr("size").css("font-size", b + "px") : a.find("span").filter(function () {
                        return "medium" === this.style.fontSize
                    }).css("font-size", b + "px")
                },
            this.lineHeight = function (a, c) {
                    e(a),
                    b.stylePara(k.create(), {
                        "lineHeight": c
                    })
                },
            this.unlink = function (a) {
                    var b = k.create();
                    if (b.isOnAnchor()) {
                        e(a);
                        var c = f.ancestor(b.sc, f.isAnchor);
                        b = k.createFromNode(c),
                        b.select(),
                        document.execCommand("unlink")
                    }
                },
            this.createLink = function (b, d, g) {
                    var h = k.create();
                    e(b);
                    var i = d;
                    if (-1 !== d.indexOf("@") && -1 === d.indexOf(":") ? i = "mailto:" + d : -1 === d.indexOf("://") && (i = "http://" + d), (c.bMSIE || c.bFF) && h.isCollapsed()) {
                        h.insertNode(a('<A id="linkAnchor">' + d + "</A>")[0]);
                        var j = a("#linkAnchor").attr("href", i).removeAttr("id");
                        h = k.createFromNode(j[0]),
                        h.select()
                    } else document.execCommand("createlink", !1, i),
                    h = k.create();
                    a.each(h.nodes(f.isAnchor), function (b, c) {
                        g ? a(c).attr("target", "_blank") : a(c).removeAttr("target")
                    })
                },
            this.setLinkDialog = function (b, c) {
                    var d = k.create(),
                        e = !0;
                    if (d.isOnAnchor()) {
                            var g = f.ancestor(d.sc, f.isAnchor);
                            d = k.createFromNode(g),
                            e = "_blank" === a(g).attr("target")
                        }
                    var h = this;
                    c({
                            "text": d.toString(),
                            "url": d.isOnAnchor() ? f.ancestor(d.sc, f.isAnchor).href : "",
                            "newWindow": e
                        }, function (a, c) {
                            d.select(),
                            h.createLink(b, a, c)
                        })
                },
            this.setVideoDialog = function (a, b) {
                    var c = k.create();
                    if (c.isOnAnchor()) {
                        var d = f.ancestor(c.sc, f.isAnchor);
                        c = k.createFromNode(d)
                    }
                    var e = this;
                    b({
                        "text": c.toString()
                    }, function (b) {
                        c.select(),
                        e.insertVideo(a, b)
                    })
                },
            this.color = function (a, b) {
                    var c = JSON.parse(b),
                        d = c.foreColor,
                        f = c.backColor;
                    e(a),
                    d && document.execCommand("foreColor", !1, d),
                    f && document.execCommand("backColor", !1, f)
                },
            this.insertTable = function (a, b) {
                    e(a);
                    var c = b.split("x");
                    k.create().insertNode(d.createTable(c[0], c[1]))
                },
            this.floatMe = function (a, b, c) {
                    e(a),
                    c.css("float", b)
                },
            this.resize = function (a, b, c) {
                    e(a),
                    c.css({
                        "width": a.width() * b + "px",
                        "height": ""
                    })
                },
            this.resizeTo = function (a, b, c) {
                    var d;
                    if (c) {
                        var e = a.y / a.x,
                            f = b.data("ratio");
                        d = {
                                "width": f > e ? a.x : a.y / f,
                                "height": f > e ? a.x * f : a.y
                            }
                    } else d = {
                        "width": a.x,
                        "height": a.y
                    };
                    b.css(d)
                },
            this.removeMedia = function (a, b, c) {
                    e(a),
                    c.detach()
                }
        },
        n = function () {
            var a = [],
                b = [],
                c = function (a) {
                    var b = a[0],
                        c = k.create();
                    return {
                            "contents": a.html(),
                            "bookmark": c.bookmark(b),
                            "scrollTop": a.scrollTop()
                        }
                },
                d = function (a, b) {
                    a.html(b.contents).scrollTop(b.scrollTop),
                    k.createFromBookmark(a[0], b.bookmark).select()
                };
            this.undo = function (e) {
                    var f = c(e);
                    0 !== a.length && (d(e, a.pop()), b.push(f))
                },
            this.redo = function (e) {
                    var f = c(e);
                    0 !== b.length && (d(e, b.pop()), a.push(f))
                },
            this.recordUndo = function (d) {
                    b = [],
                    a.push(c(d))
                }
        },
        o = function () {
            this.update = function (b, c) {
                var d = function (b, c) {
                    b.find(".dropdown-menu li a").each(function () {
                        var b = a(this).data("value") + "" == c + "";
                        this.className = b ? "checked" : ""
                    })
                },
                    f = function (a, c) {
                        var d = b.find(a);
                        d.toggleClass("active", c())
                    },
                    g = b.find(".note-fontname");
                if (g.length > 0) {
                        var h = c["font-family"];
                        h && (h = e.head(h.split(",")), h = h.replace(/\'/g, ""), g.find(".note-current-fontname").text(h), d(g, h))
                    }
                var i = b.find(".note-fontsize");
                i.find(".note-current-fontsize").text(c["font-size"]),
                d(i, parseFloat(c["font-size"]));
                var j = b.find(".note-height");
                d(j, parseFloat(c["line-height"])),
                f('button[data-event="bold"]', function () {
                        return "bold" === c["font-bold"]
                    }),
                f('button[data-event="italic"]', function () {
                        return "italic" === c["font-italic"]
                    }),
                f('button[data-event="underline"]', function () {
                        return "underline" === c["font-underline"]
                    }),
                f('button[data-event="justifyLeft"]', function () {
                        return "left" === c["text-align"] || "start" === c["text-align"]
                    }),
                f('button[data-event="justifyCenter"]', function () {
                        return "center" === c["text-align"]
                    }),
                f('button[data-event="justifyRight"]', function () {
                        return "right" === c["text-align"]
                    }),
                f('button[data-event="justifyFull"]', function () {
                        return "justify" === c["text-align"]
                    }),
                f('button[data-event="insertUnorderedList"]', function () {
                        return "unordered" === c["list-style"]
                    }),
                f('button[data-event="insertOrderedList"]', function () {
                        return "ordered" === c["list-style"]
                    })
            },
            this.updateRecentColor = function (b, c, d) {
                var e = a(b).closest(".note-color"),
                    f = e.find(".note-recent-color"),
                    g = JSON.parse(f.attr("data-value"));
                g[c] = d,
                f.attr("data-value", JSON.stringify(g));
                var h = "backColor" === c ? "background-color" : "color";
                f.find("i").css(h, d)
            },
            this.updateFullscreen = function (a, b) {
                var c = a.find('button[data-event="fullscreen"]');
                c.toggleClass("active", b)
            },
            this.updateCodeview = function (a, b) {
                var c = a.find('button[data-event="codeview"]');
                c.toggleClass("active", b)
            },
            this.activate = function (a) {
                a.find("button").not('button[data-event="codeview"]').removeClass("disabled")
            },
            this.deactivate = function (a) {
                a.find("button").not('button[data-event="codeview"]').addClass("disabled")
            }
        },
        p = function () {
            var b = function (b, c) {
                var d = a(c),
                    e = d.position(),
                    f = d.height();
                b.css({
                        "display": "block",
                        "left": e.left,
                        "top": e.top + f
                    })
            };
            this.update = function (a, c) {
                var d = a.find(".note-link-popover");
                if (c.anchor) {
                    var e = d.find("a");
                    e.attr("href", c.anchor.href).html(c.anchor.href),
                    b(d, c.anchor)
                } else d.hide();
                var f = a.find(".note-image-popover");
                c.image ? b(f, c.image) : f.hide()
            },
            this.hide = function (a) {
                a.children().hide()
            }
        },
        q = function () {
            this.update = function (b, c) {
                var d = b.find(".note-control-selection");
                if (c.image) {
                    var e = a(c.image),
                        f = e.position(),
                        g = {
                            "w": e.width(),
                            "h": e.height()
                        };
                    d.css({
                            "display": "block",
                            "left": f.left,
                            "top": f.top,
                            "width": g.w,
                            "height": g.h
                        }).data("target", c.image);
                    var h = g.w + "x" + g.h;
                    d.find(".note-control-selection-info").text(h)
                } else d.hide()
            },
            this.hide = function (a) {
                a.children().hide()
            }
        },
        r = function () {
            var b = function (a, b) {
                b ? a.removeClass("disabled").attr("disabled", !1) : a.addClass("disabled").attr("disabled", !0)
            };
            this.showImageDialog = function (c, d, e, f) {
                var g = d.find(".note-image-dialog"),
                    h = d.find(".note-image-input"),
                    i = d.find(".note-image-url"),
                    j = d.find(".note-image-btn");
                g.one("shown.bs.modal", function (c) {
                        c.stopPropagation(),
                        h.on("change", function () {
                            e(this.files),
                            a(this).val(""),
                            g.modal("hide")
                        }),
                        j.click(function (a) {
                            g.modal("hide"),
                            f(i.val()),
                            a.preventDefault()
                        }),
                        i.keyup(function () {
                            b(j, i.val())
                        }).val("").focus()
                    }).one("hidden.bs.modal", function () {
                        c.focus(),
                        h.off("change"),
                        i.off("keyup"),
                        j.off("click")
                    }).modal("show")
            },
            this.showVideoDialog = function (a, c, d, e) {
                var f = c.find(".note-video-dialog"),
                    g = f.find(".note-video-url"),
                    h = f.find(".note-video-btn");
                f.one("shown.bs.modal", function (a) {
                        a.stopPropagation(),
                        g.val(d.text).keyup(function () {
                            b(h, g.val())
                        }).trigger("keyup").trigger("focus"),
                        h.click(function (a) {
                            f.modal("hide"),
                            e(g.val()),
                            a.preventDefault()
                        })
                    }).one("hidden.bs.modal", function () {
                        a.focus(),
                        g.off("keyup"),
                        h.off("click")
                    }).modal("show")
            },
            this.showLinkDialog = function (a, c, d, e) {
                var f = c.find(".note-link-dialog"),
                    g = f.find(".note-link-text"),
                    h = f.find(".note-link-url"),
                    i = f.find(".note-link-btn"),
                    j = f.find("input[type=checkbox]");
                f.one("shown.bs.modal", function (a) {
                        a.stopPropagation(),
                        g.val(d.text),
                        h.val(d.url).keyup(function () {
                            b(i, h.val()),
                            d.text || g.val(h.val())
                        }).trigger("focus"),
                        j.prop("checked", d.newWindow),
                        i.click(function (a) {
                            f.modal("hide"),
                            e(h.val(), j.is(":checked")),
                            a.preventDefault()
                        })
                    }).one("hidden.bs.modal", function () {
                        a.focus(),
                        h.off("keyup"),
                        i.off("click")
                    }).modal("show")
            },
            this.showHelpDialog = function (a, b) {
                var c = b.find(".note-help-dialog");
                c.one("hidden.bs.modal", function () {
                    a.focus()
                }).modal("show")
            }
        },
        s = function () {
            var d = new m,
                e = new o,
                g = new p,
                j = new q,
                k = new r,
                l = function (b) {
                    var c = a(b).closest(".note-editor");
                    return c.length > 0 && f.buildLayoutInfo(c)
                },
                s = function (b, c) {
                    d.restoreRange(b);
                    var e = b.data("callbacks");
                    e.onImageUpload ? e.onImageUpload(c, d, b) : a.each(c, function (a, c) {
                        h.readFileAsDataURL(c).done(function (a) {
                            d.insertImage(b, a)
                        }).fail(function () {
                            e.onImageUploadError && e.onImageUploadError()
                        })
                    })
                },
                t = function (a) {
                    var b = c.bMac ? a.metaKey : a.ctrlKey,
                        e = a.shiftKey,
                        f = a.keyCode,
                        g = b || e || f === i.TAB,
                        h = g ? l(a.target) : null;
                    if (f === i.TAB) {
                            var j = h.editor().data("options").tabsize;
                            d.tab(h.editable(), j, e)
                        } else if (b && (e && f === i.Z || f === i.Y)) d.redo(h.editable());
                    else if (b && f === i.Z) d.undo(h.editable());
                    else if (b && f === i.B) d.bold(h.editable());
                    else if (b && f === i.I) d.italic(h.editable());
                    else if (b && f === i.U) d.underline(h.editable());
                    else if (b && e && f === i.S) d.strikethrough(h.editable());
                    else if (b && f === i.BACKSLACH) d.removeFormat(h.editable());
                    else if (b && f === i.K) d.setLinkDialog(h.editable(), function (a, b) {
                            k.showLinkDialog(h.editable(), h.dialog(), a, b)
                        });
                    else if (b && f === i.SLASH) k.showHelpDialog(h.editable(), h.dialog());
                    else if (b && e && f === i.L) d.justifyLeft(h.editable());
                    else if (b && e && f === i.E) d.justifyCenter(h.editable());
                    else if (b && e && f === i.R) d.justifyRight(h.editable());
                    else if (b && e && f === i.J) d.justifyFull(h.editable());
                    else if (b && e && f === i.NUM7) d.insertUnorderedList(h.editable());
                    else if (b && e && f === i.NUM8) d.insertOrderedList(h.editable());
                    else if (b && f === i.LEFTBRACKET) d.outdent(h.editable());
                    else if (b && f === i.RIGHTBRACKET) d.indent(h.editable());
                    else if (b && f === i.NUM0) d.formatBlock(h.editable(), "P");
                    else if (b && i.NUM1 <= f && f <= i.NUM6) {
                            var m = "H" + String.fromCharCode(f);
                            d.formatBlock(h.editable(), m)
                        } else {
                            if (!b || f !== i.ENTER) return void((f === i.BACKSPACE || f === i.ENTER || f === i.SPACE) && d.recordUndo(l(a.target).editable()));
                            d.insertHorizontalRule(h.editable())
                        }
                    a.preventDefault()
                },
                u = function (a) {
                    var b = a.originalEvent.dataTransfer;
                    if (b && b.files) {
                        var c = l(a.currentTarget || a.target);
                        c.editable().focus(),
                        s(c.editable(), b.files)
                    }
                    a.preventDefault()
                },
                v = function (a) {
                    f.isImg(a.target) && a.preventDefault()
                },
                w = function (a) {
                    var b = l(a.currentTarget || a.target),
                        c = d.currentStyle(a.target);
                    c && (e.update(b.toolbar(), c), g.update(b.popover(), c), j.update(b.handle(), c))
                },
                x = function (a) {
                    var b = l(a.currentTarget || a.target);
                    g.hide(b.popover()),
                    j.hide(b.handle())
                },
                y = function (b) {
                    if (f.isControlSizing(b.target)) {
                        var c = l(b.target),
                            e = c.handle(),
                            h = c.popover(),
                            i = c.editable(),
                            k = c.editor(),
                            m = e.find(".note-control-selection").data("target"),
                            n = a(m),
                            o = n.offset(),
                            p = a(document).scrollTop();
                        k.on("mousemove", function (a) {
                                d.resizeTo({
                                    "x": a.clientX - o.left,
                                    "y": a.clientY - (o.top - p)
                                }, n, !a.shiftKey),
                                j.update(e, {
                                    "image": m
                                }),
                                g.update(h, {
                                    "image": m
                                })
                            }).one("mouseup", function () {
                                k.off("mousemove")
                            }),
                        n.data("ratio") || n.data("ratio", n.height() / n.width()),
                        d.recordUndo(i),
                        b.stopPropagation(),
                        b.preventDefault()
                    }
                },
                z = function (b) {
                    var c = a(b.target).closest("[data-event]");
                    c.length > 0 && b.preventDefault()
                },
                A = function (g) {
                    var h = a(g.target).closest("[data-event]");
                    if (h.length > 0) {
                        var i, j, m, n = h.attr("data-event"),
                            o = h.attr("data-value"),
                            p = l(g.target),
                            q = p.editor(),
                            r = p.toolbar(),
                            t = p.dialog(),
                            u = p.editable(),
                            v = p.codable(),
                            x = q.data("options");
                        if (-1 !== a.inArray(n, ["resize", "floatMe", "removeMedia"])) {
                                var y = p.handle(),
                                    z = y.find(".note-control-selection");
                                m = a(z.data("target"))
                            }
                        if (d[n] && (u.trigger("focus"), d[n](u, o, m)), -1 !== a.inArray(n, ["backColor", "foreColor"])) e.updateRecentColor(h[0], n, o);
                        else if ("showLinkDialog" === n) u.focus(),
                        d.setLinkDialog(u, function (a, b) {
                                k.showLinkDialog(u, t, a, b)
                            });
                        else if ("showImageDialog" === n) u.focus(),
                        k.showImageDialog(u, t, function (a) {
                                s(u, a)
                            }, function (a) {
                                d.restoreRange(u),
                                d.insertImage(u, a)
                            });
                        else if ("showVideoDialog" === n) u.focus(),
                        d.setVideoDialog(u, function (a, b) {
                                k.showVideoDialog(u, t, a, b)
                            });
                        else if ("showHelpDialog" === n) k.showHelpDialog(u, t);
                        else if ("fullscreen" === n) {
                                q.toggleClass("fullscreen");
                                var A = function () {
                                    var b = a(window).width();
                                    q.css("width", b);
                                    var c = a(window).height() - r.outerHeight();
                                    u.css("height", c),
                                    v.css("height", c);
                                    var d = v.data("cmEditor");
                                    d && d.setSize(null, c)
                                },
                                    B = a("html, body"),
                                    C = q.hasClass("fullscreen");
                                if (C) q.data("orgWidth", q.width()),
                                u.data("orgHeight", u.css("height")),
                                a(window).on("resize", A).trigger("resize"),
                                B.css("overflow", "hidden");
                                else {
                                        var D = q.data("orgWidth"),
                                            E = D === a(window).width() ? "auto" : D;
                                        q.css("width", E);
                                        var F = u.data("orgHeight");
                                        u.css("height", F),
                                        v.css("height", F),
                                        j = v.data("cmEditor"),
                                        j && j.setSize(null, F),
                                        B.css("overflow", "auto"),
                                        a(window).off("resize")
                                    }
                                e.updateFullscreen(r, C)
                            } else if ("codeview" === n) {
                                q.toggleClass("codeview");
                                var G = q.hasClass("codeview");
                                if (G) {
                                    if (v.val(u.html()), v.height(u.height()), e.deactivate(r), v.focus(), c.bCodeMirror) {
                                        j = b.fromTextArea(v[0], a.extend({
                                            "mode": "text/html",
                                            "lineNumbers": !0
                                        }, x.codemirror));
                                        var H = q.data("options").codemirror.tern || !1;
                                        H && (i = new b.TernServer(H), j.ternServer = i, j.on("cursorActivity", function (a) {
                                            i.updateArgHints(a)
                                        })),
                                        j.setSize(null, u.outerHeight()),
                                        j.autoFormatRange && j.autoFormatRange({
                                            "line": 0,
                                            "ch": 0
                                        }, {
                                            "line": j.lineCount(),
                                            "ch": j.getTextArea().value.length
                                        }),
                                        v.data("cmEditor", j)
                                    }
                                } else c.bCodeMirror && (j = v.data("cmEditor"), v.val(j.getValue()), j.toTextArea()),
                                u.html(v.val() || f.emptyPara),
                                u.height(x.height ? v.height() : "auto"),
                                e.activate(r),
                                u.focus();
                                e.updateCodeview(p.toolbar(), G)
                            }
                        w(g)
                    }
                },
                B = 24,
                C = function (b) {
                    var c = a(document),
                        d = l(b.target).editable(),
                        e = d.offset().top - c.scrollTop();
                    c.on("mousemove", function (a) {
                            var b = a.clientY - (e + B);
                            d.height(b)
                        }).one("mouseup", function () {
                            c.off("mousemove")
                        }),
                    b.stopPropagation(),
                    b.preventDefault()
                },
                D = 18,
                E = function (b) {
                    var c, d = a(b.target.parentNode),
                        e = d.next(),
                        f = d.find(".note-dimension-picker-mousecatcher"),
                        g = d.find(".note-dimension-picker-highlighted"),
                        h = d.find(".note-dimension-picker-unhighlighted");
                    if (void 0 === b.offsetX) {
                            var i = a(b.target).offset();
                            c = {
                                "x": b.pageX - i.left,
                                "y": b.pageY - i.top
                            }
                        } else c = {
                            "x": b.offsetX,
                            "y": b.offsetY
                        };
                    var j = {
                            "c": Math.ceil(c.x / D) || 1,
                            "r": Math.ceil(c.y / D) || 1
                        };
                    g.css({
                            "width": j.c + "em",
                            "height": j.r + "em"
                        }),
                    f.attr("data-value", j.c + "x" + j.r),
                    3 < j.c && j.c < 10 && h.css({
                            "width": j.c + 1 + "em"
                        }),
                    3 < j.r && j.r < 10 && h.css({
                            "height": j.r + 1 + "em"
                        }),
                    e.html(j.c + " x " + j.r)
                },
                F = function (b) {
                    var c = a(),
                        d = b.dropzone,
                        e = b.dropzone.find(".note-dropzone-message");
                    a(document).on("dragenter", function (a) {
                            var f = b.editor.hasClass("codeview");
                            f || 0 !== c.length || (b.editor.addClass("dragover"), d.width(b.editor.width()), d.height(b.editor.height()), e.text("Drag Image Here")),
                            c = c.add(a.target)
                        }).on("dragleave", function (a) {
                            c = c.not(a.target),
                            0 === c.length && b.editor.removeClass("dragover")
                        }).on("drop", function () {
                            c = a(),
                            b.editor.removeClass("dragover")
                        }),
                    d.on("dragenter", function () {
                            d.addClass("hover"),
                            e.text("Drop Image")
                        }).on("dragleave", function () {
                            d.removeClass("hover"),
                            e.text("Drag Image Here")
                        }),
                    d.on("drop", function (a) {
                            u(a)
                        }).on("dragover", !1)
                };
            this.attach = function (a, b) {
                    a.editable.on("keydown", t),
                    a.editable.on("mousedown", v),
                    a.editable.on("keyup mouseup", w),
                    a.editable.on("scroll", x),
                    b.disableDragAndDrop || F(a),
                    a.handle.on("mousedown", y),
                    a.toolbar.on("click", A),
                    a.popover.on("click", A),
                    a.toolbar.on("mousedown", z),
                    a.popover.on("mousedown", z),
                    a.statusbar.on("mousedown", C);
                    var e = a.toolbar,
                        f = e.find(".note-dimension-picker-mousecatcher");
                    f.on("mousemove", E),
                    a.editable.on("blur", function () {
                            d.saveRange(a.editable)
                        }),
                    a.editor.data("options", b),
                    b.styleWithSpan && !c.bMSIE && setTimeout(function () {
                            document.execCommand("styleWithCSS", 0, !0)
                        }),
                    a.editable.data("NoteHistory", new n),
                    b.onenter && a.editable.keypress(function (a) {
                            a.keyCode === i.ENTER && b.onenter(a)
                        }),
                    b.onfocus && a.editable.focus(b.onfocus),
                    b.onblur && a.editable.blur(b.onblur),
                    b.onkeyup && a.editable.keyup(b.onkeyup),
                    b.onkeydown && a.editable.keydown(b.onkeydown),
                    b.onToolbarClick && a.toolbar.click(b.onToolbarClick),
                    a.editable.data("callbacks", {
                            "onChange": b.onChange,
                            "onAutoSave": b.onAutoSave,
                            "onPasteBefore": b.onPasteBefore,
                            "onPasteAfter": b.onPasteAfter,
                            "onImageUpload": b.onImageUpload,
                            "onImageUploadError": b.onImageUpload,
                            "onFileUpload": b.onFileUpload,
                            "onFileUploadError": b.onFileUpload
                        })
                },
            this.dettach = function (a) {
                    a.editable.off(),
                    a.toolbar.off(),
                    a.handle.off(),
                    a.popover.off()
                }
        },
        t = function () {
            var b, d, e, g, h;
            b = {
                "picture": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.image + '" data-event="showImageDialog" tabindex="-1"><i class="fa fa-picture-o icon-picture"></i></button>'
                },
                "link": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.link.link + '" data-event="showLinkDialog" data-shortcut="Ctrl+K" data-mac-shortcut="\u2318+K" tabindex="-1"><i class="fa fa-link icon-link"></i></button>'
                },
                "video": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.video.video + '" data-event="showVideoDialog" tabindex="-1"><i class="fa fa-youtube-play icon-play"></i></button>'
                },
                "table": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small dropdown-toggle" title="' + a.table.table + '" data-toggle="dropdown" tabindex="-1"><i class="fa fa-table icon-table"></i> <span class="caret"></span></button><ul class="dropdown-menu"><div class="note-dimension-picker"><div class="note-dimension-picker-mousecatcher" data-event="insertTable" data-value="1x1"></div><div class="note-dimension-picker-highlighted"></div><div class="note-dimension-picker-unhighlighted"></div></div><div class="note-dimension-display"> 1 x 1 </div></ul>'
                },
                "style": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small dropdown-toggle" title="' + a.style.style + '" data-toggle="dropdown" tabindex="-1"><i class="fa fa-magic icon-magic"></i> <span class="caret"></span></button><ul class="dropdown-menu"><li><a data-event="formatBlock" data-value="p">' + a.style.normal + '</a></li><li><a data-event="formatBlock" data-value="blockquote"><blockquote>' + a.style.blockquote + '</blockquote></a></li><li><a data-event="formatBlock" data-value="pre">' + a.style.pre + '</a></li><li><a data-event="formatBlock" data-value="h1"><h1>' + a.style.h1 + '</h1></a></li><li><a data-event="formatBlock" data-value="h2"><h2>' + a.style.h2 + '</h2></a></li><li><a data-event="formatBlock" data-value="h3"><h3>' + a.style.h3 + '</h3></a></li><li><a data-event="formatBlock" data-value="h4"><h4>' + a.style.h4 + '</h4></a></li><li><a data-event="formatBlock" data-value="h5"><h5>' + a.style.h5 + '</h5></a></li><li><a data-event="formatBlock" data-value="h6"><h6>' + a.style.h6 + "</h6></a></li></ul>"
                },
                "fontname": function (a) {
                    var b = ["Serif", "Sans", "Arial", "Arial Black", "Courier", "Courier New", "Comic Sans MS", "Helvetica", "Impact", "Microsoft Yahei", "Lucida Sans", "Tahoma", "Times", "Times New Roman", "Verdana"],
                        c = '<button type="button" class="btn btn-default btn-sm btn-small dropdown-toggle" data-toggle="dropdown" title="' + a.font.name + '" tabindex="-1"><span class="note-current-fontname">Arial</span> <b class="caret"></b></button>';
                    c += '<ul class="dropdown-menu">';
                    for (var d = 0; d < b.length; d++) c += '<li><a data-event="fontName" data-value="' + b[d] + '"><i class="fa fa-check icon-ok"></i> ' + b[d] + "</a></li>";
                    return c += "</ul>"
                },
                "fontsize": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small dropdown-toggle" data-toggle="dropdown" title="' + a.font.size + '" tabindex="-1"><span class="note-current-fontsize">11</span> <b class="caret"></b></button><ul class="dropdown-menu"><li><a data-event="fontSize" data-value="8"><i class="fa fa-check icon-ok"></i> 8</a></li><li><a data-event="fontSize" data-value="9"><i class="fa fa-check icon-ok"></i> 9</a></li><li><a data-event="fontSize" data-value="10"><i class="fa fa-check icon-ok"></i> 10</a></li><li><a data-event="fontSize" data-value="11"><i class="fa fa-check icon-ok"></i> 11</a></li><li><a data-event="fontSize" data-value="12"><i class="fa fa-check icon-ok"></i> 12</a></li><li><a data-event="fontSize" data-value="14"><i class="fa fa-check icon-ok"></i> 14</a></li><li><a data-event="fontSize" data-value="18"><i class="fa fa-check icon-ok"></i> 18</a></li><li><a data-event="fontSize" data-value="24"><i class="fa fa-check icon-ok"></i> 24</a></li><li><a data-event="fontSize" data-value="36"><i class="fa fa-check icon-ok"></i> 36</a></li></ul>'
                },
                "color": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small note-recent-color" title="' + a.color.recent + '" data-event="color" data-value=\'{"backColor":"yellow"}\' tabindex="-1"><i class="fa fa-font icon-font" style="color:black;background-color:yellow;"></i></button><button type="button" class="btn btn-default btn-sm btn-small dropdown-toggle" title="' + a.color.more + '" data-toggle="dropdown" tabindex="-1"><span class="caret"></span></button><ul class="dropdown-menu"><li><div class="btn-group"><div class="note-palette-title">' + a.color.background + '</div><div class="note-color-reset" data-event="backColor" data-value="inherit" title="' + a.color.transparent + '">' + a.color.setTransparent + '</div><div class="note-color-palette" data-target-event="backColor"></div></div><div class="btn-group"><div class="note-palette-title">' + a.color.foreground + '</div><div class="note-color-reset" data-event="foreColor" data-value="inherit" title="' + a.color.reset + '">' + a.color.resetToDefault + '</div><div class="note-color-palette" data-target-event="foreColor"></div></div></li></ul>'
                },
                "bold": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.font.bold + '" data-shortcut="Ctrl+B" data-mac-shortcut="\u2318+B" data-event="bold" tabindex="-1"><i class="fa fa-bold icon-bold"></i></button>'
                },
                "italic": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.font.italic + '" data-shortcut="Ctrl+I" data-mac-shortcut="\u2318+I" data-event="italic" tabindex="-1"><i class="fa fa-italic icon-italic"></i></button>'
                },
                "underline": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.font.underline + '" data-shortcut="Ctrl+U" data-mac-shortcut="\u2318+U" data-event="underline" tabindex="-1"><i class="fa fa-underline icon-underline"></i></button>'
                },
                "clear": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.font.clear + '" data-shortcut="Ctrl+\\" data-mac-shortcut="\u2318+\\" data-event="removeFormat" tabindex="-1"><i class="fa fa-eraser icon-eraser"></i></button>'
                },
                "ul": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.lists.unordered + '" data-shortcut="Ctrl+Shift+8" data-mac-shortcut="\u2318+\u21e7+7" data-event="insertUnorderedList" tabindex="-1"><i class="fa fa-list-ul icon-list-ul"></i></button>'
                },
                "ol": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.lists.ordered + '" data-shortcut="Ctrl+Shift+7" data-mac-shortcut="\u2318+\u21e7+8" data-event="insertOrderedList" tabindex="-1"><i class="fa fa-list-ol icon-list-ol"></i></button>'
                },
                "paragraph": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small dropdown-toggle" title="' + a.paragraph.paragraph + '" data-toggle="dropdown" tabindex="-1"><i class="fa fa-align-left icon-align-left"></i>  <span class="caret"></span></button><div class="dropdown-menu"><div class="note-align btn-group"><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.paragraph.left + '" data-shortcut="Ctrl+Shift+L" data-mac-shortcut="\u2318+\u21e7+L" data-event="justifyLeft" tabindex="-1"><i class="fa fa-align-left icon-align-left"></i></button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.paragraph.center + '" data-shortcut="Ctrl+Shift+E" data-mac-shortcut="\u2318+\u21e7+E" data-event="justifyCenter" tabindex="-1"><i class="fa fa-align-center icon-align-center"></i></button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.paragraph.right + '" data-shortcut="Ctrl+Shift+R" data-mac-shortcut="\u2318+\u21e7+R" data-event="justifyRight" tabindex="-1"><i class="fa fa-align-right icon-align-right"></i></button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.paragraph.justify + '" data-shortcut="Ctrl+Shift+J" data-mac-shortcut="\u2318+\u21e7+J" data-event="justifyFull" tabindex="-1"><i class="fa fa-align-justify icon-align-justify"></i></button></div><div class="note-list btn-group"><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.paragraph.outdent + '" data-shortcut="Ctrl+[" data-mac-shortcut="\u2318+[" data-event="outdent" tabindex="-1"><i class="fa fa-outdent icon-indent-left"></i></button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.paragraph.indent + '" data-shortcut="Ctrl+]" data-mac-shortcut="\u2318+]" data-event="indent" tabindex="-1"><i class="fa fa-indent icon-indent-right"></i></button></div></div>'
                },
                "height": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small dropdown-toggle" data-toggle="dropdown" title="' + a.font.height + '" tabindex="-1"><i class="fa fa-text-height icon-text-height"></i>&nbsp; <b class="caret"></b></button><ul class="dropdown-menu"><li><a data-event="lineHeight" data-value="1.0"><i class="fa fa-check icon-ok"></i> 1.0</a></li><li><a data-event="lineHeight" data-value="1.2"><i class="fa fa-check icon-ok"></i> 1.2</a></li><li><a data-event="lineHeight" data-value="1.4"><i class="fa fa-check icon-ok"></i> 1.4</a></li><li><a data-event="lineHeight" data-value="1.5"><i class="fa fa-check icon-ok"></i> 1.5</a></li><li><a data-event="lineHeight" data-value="1.6"><i class="fa fa-check icon-ok"></i> 1.6</a></li><li><a data-event="lineHeight" data-value="1.8"><i class="fa fa-check icon-ok"></i> 1.8</a></li><li><a data-event="lineHeight" data-value="2.0"><i class="fa fa-check icon-ok"></i> 2.0</a></li><li><a data-event="lineHeight" data-value="3.0"><i class="fa fa-check icon-ok"></i> 3.0</a></li></ul>'
                },
                "help": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.options.help + '" data-shortcut="Ctrl+/" data-mac-shortcut="\u2318+/" data-event="showHelpDialog" tabindex="-1"><i class="fa fa-question icon-question"></i></button>'
                },
                "fullscreen": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.options.fullscreen + '" data-event="fullscreen" tabindex="-1"><i class="fa fa-arrows-alt icon-fullscreen"></i></button>'
                },
                "codeview": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.options.codeview + '" data-event="codeview" tabindex="-1"><i class="fa fa-code icon-code"></i></button>'
                },
                "undo": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.history.undo + '" data-event="undo" tabindex="-1"><i class="fa fa-undo icon-undo"></i></button>'
                },
                "redo": function (a) {
                    return '<button type="button" class="btn btn-default btn-sm btn-small" title="' + a.history.redo + '" data-event="redo" tabindex="-1"><i class="fa fa-repeat icon-repeat"></i></button>'
                }
            },
            d = function (a) {
                return '<div class="note-popover"><div class="note-link-popover popover bottom in" style="display: none;"><div class="arrow"></div><div class="popover-content note-link-content"><a href="http://www.google.com" target="_blank">www.google.com</a>&nbsp;&nbsp;<div class="note-insert btn-group"><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.link.edit + '" data-event="showLinkDialog" tabindex="-1"><i class="fa fa-edit icon-edit"></i></button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.link.unlink + '" data-event="unlink" tabindex="-1"><i class="fa fa-unlink icon-unlink"></i></button></div></div></div><div class="note-image-popover popover bottom in" style="display: none;"><div class="arrow"></div><div class="popover-content note-image-content"><div class="btn-group"><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.resizeFull + '" data-event="resize" data-value="1" tabindex="-1"><span class="note-fontsize-10">100%</span> </button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.resizeHalf + '" data-event="resize" data-value="0.5" tabindex="-1"><span class="note-fontsize-10">50%</span> </button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.resizeQuarter + '" data-event="resize" data-value="0.25" tabindex="-1"><span class="note-fontsize-10">25%</span> </button></div><div class="btn-group"><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.floatLeft + '" data-event="floatMe" data-value="left" tabindex="-1"><i class="fa fa-align-left icon-align-left"></i></button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.floatRight + '" data-event="floatMe" data-value="right" tabindex="-1"><i class="fa fa-align-right icon-align-right"></i></button><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.floatNone + '" data-event="floatMe" data-value="none" tabindex="-1"><i class="fa fa-align-justify icon-align-justify"></i></button></div><div class="btn-group"><button type="button" class="btn btn-default btn-sm btn-small" title="' + a.image.remove + '" data-event="removeMedia" data-value="none" tabindex="-1"><i class="fa fa-trash-o icon-trash"></i></button></div></div></div></div>'
            };
            var e = function () {
                return '<div class="note-handle"><div class="note-control-selection"><div class="note-control-selection-bg"></div><div class="note-control-holder note-control-nw"></div><div class="note-control-holder note-control-ne"></div><div class="note-control-holder note-control-sw"></div><div class="note-control-sizing note-control-se"></div><div class="note-control-selection-info"></div></div></div>'
            },
                i = function (a) {
                    return '<table class="note-shortcut"><thead><tr><th></th><th>' + a.shortcut.textFormatting + "</th></tr></thead><tbody><tr><td>\u2318 + B</td><td>" + a.font.bold + "</td></tr><tr><td>\u2318 + I</td><td>" + a.font.italic + "</td></tr><tr><td>\u2318 + U</td><td>" + a.font.underline + "</td></tr><tr><td>\u2318 + \u21e7 + S</td><td>" + a.font.strike + "</td></tr><tr><td>\u2318 + \\</td><td>" + a.font.clear + "</td></tr></tr></tbody></table>"
                },
                j = function (a) {
                    return '<table class="note-shortcut"><thead><tr><th></th><th>' + a.shortcut.action + "</th></tr></thead><tbody><tr><td>\u2318 + Z</td><td>" + a.history.undo + "</td></tr><tr><td>\u2318 + \u21e7 + Z</td><td>" + a.history.redo + "</td></tr><tr><td>\u2318 + ]</td><td>" + a.paragraph.indent + "</td></tr><tr><td>\u2318 + [</td><td>" + a.paragraph.outdent + "</td></tr><tr><td>\u2318 + K</td><td>" + a.link.insert + "</td></tr><tr><td>\u2318 + ENTER</td><td>" + a.hr.insert + "</td></tr></tbody></table>"
                },
                k = function (a, b) {
                    var c = '<table class="note-shortcut"><thead><tr><th></th><th>' + a.shortcut.extraKeys + "</th></tr></thead><tbody>";
                    for (var d in b.extraKeys) b.extraKeys.hasOwnProperty(d) && (c += "<tr><td>" + d + "</td><td>" + b.extraKeys[d] + "</td></tr>");
                    return c += "</tbody></table>"
                },
                l = function (a) {
                    return '<table class="note-shortcut"><thead><tr><th></th><th>' + a.shortcut.paragraphFormatting + "</th></tr></thead><tbody><tr><td>\u2318 + \u21e7 + L</td><td>" + a.paragraph.left + "</td></tr><tr><td>\u2318 + \u21e7 + E</td><td>" + a.paragraph.center + "</td></tr><tr><td>\u2318 + \u21e7 + R</td><td>" + a.paragraph.right + "</td></tr><tr><td>\u2318 + \u21e7 + J</td><td>" + a.paragraph.justify + "</td></tr><tr><td>\u2318 + \u21e7 + NUM7</td><td>" + a.lists.ordered + "</td></tr><tr><td>\u2318 + \u21e7 + NUM8</td><td>" + a.lists.unordered + "</td></tr></tbody></table>"
                },
                m = function (a) {
                    return '<table class="note-shortcut"><thead><tr><th></th><th>' + a.shortcut.documentStyle + "</th></tr></thead><tbody><tr><td>\u2318 + NUM0</td><td>" + a.style.normal + "</td></tr><tr><td>\u2318 + NUM1</td><td>" + a.style.h1 + "</td></tr><tr><td>\u2318 + NUM2</td><td>" + a.style.h2 + "</td></tr><tr><td>\u2318 + NUM3</td><td>" + a.style.h3 + "</td></tr><tr><td>\u2318 + NUM4</td><td>" + a.style.h4 + "</td></tr><tr><td>\u2318 + NUM5</td><td>" + a.style.h5 + "</td></tr><tr><td>\u2318 + NUM6</td><td>" + a.style.h6 + "</td></tr></tbody></table>"
                },
                n = function (a, b) {
                    var c = '<table class="note-shortcut-layout"><tbody><tr><td>' + j(a, b) + "</td><td>" + i(a, b) + "</td></tr><tr><td>" + m(a, b) + "</td><td>" + l(a, b) + "</td></tr>";
                    return b.extraKeys && (c += '<tr><td colspan="2">' + k(a, b) + "</td></tr>"),
                    c += "</tbody</table>"
                },
                o = function (a) {
                    return a.replace(/\u2318/g, "Ctrl").replace(/\u21e7/g, "Shift")
                };
            g = function (a, b) {
                    var d = function () {
                        return '<div class="note-image-dialog modal" aria-hidden="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" aria-hidden="true" tabindex="-1">&times;</button><h4>' + a.image.insert + '</h4></div><div class="modal-body"><div class="row-fluid"><h5>' + a.image.selectFromFiles + '</h5><input class="note-image-input" type="file" name="files" accept="image/*" /><h5>' + a.image.url + '</h5><input class="note-image-url form-control span12" type="text" /></div></div><div class="modal-footer"><button href="#" class="btn btn-primary note-image-btn disabled" disabled="disabled">' + a.image.insert + "</button></div></div></div></div>"
                    },
                        e = function () {
                            return '<div class="note-link-dialog modal" aria-hidden="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" aria-hidden="true" tabindex="-1">&times;</button><h4>' + a.link.insert + '</h4></div><div class="modal-body"><div class="row-fluid"><div class="form-group"><label>' + a.link.textToDisplay + '</label><input class="note-link-text form-control span12" disabled type="text" /></div><div class="form-group"><label>' + a.link.url + '</label><input class="note-link-url form-control span12" type="text" /></div>' + (b.disableLinkTarget ? "" : '<div class="checkbox"><label><input type="checkbox" checked> ' + a.link.openInNewWindow + "</label></div>") + '</div></div><div class="modal-footer"><button href="#" class="btn btn-primary note-link-btn disabled" disabled="disabled">' + a.link.insert + "</button></div></div></div></div>"
                        },
                        f = function () {
                            return '<div class="note-video-dialog modal" aria-hidden="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" aria-hidden="true" tabindex="-1">&times;</button><h4>' + a.video.insert + '</h4></div><div class="modal-body"><div class="row-fluid"><div class="form-group"><label>' + a.video.url + '</label>&nbsp;<small class="text-muted">' + a.video.providers + '</small><input class="note-video-url form-control span12" type="text" /></div></div></div><div class="modal-footer"><button href="#" class="btn btn-primary note-video-btn disabled" disabled="disabled">' + a.video.insert + "</button></div></div></div></div>"
                        },
                        g = function () {
                            return '<div class="note-help-dialog modal" aria-hidden="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-body"><a class="modal-close pull-right" aria-hidden="true" tabindex="-1">' + a.shortcut.close + '</a><div class="title">' + a.shortcut.shortcuts + "</div>" + (c.bMac ? n(a, b) : o(n(a, b))) + '<p class="text-center"><a href="//hackerwins.github.io/summernote/" target="_blank">Summernote 0.5.1</a> \xb7 <a href="//github.com/HackerWins/summernote" target="_blank">Project</a> \xb7 <a href="//github.com/HackerWins/summernote/issues" target="_blank">Issues</a></p></div></div></div></div>'
                        };
                    return '<div class="note-dialog">' + d() + e() + f() + g() + "</div>"
                },
            h = function () {
                    return '<div class="note-resizebar"><div class="note-icon-bar"></div><div class="note-icon-bar"></div><div class="note-icon-bar"></div></div>'
                };
            var p = function (b, d) {
                    b.find("button").each(function (b, d) {
                        var e = a(d),
                            f = e.attr(c.bMac ? "data-mac-shortcut" : "data-shortcut");
                        f && e.attr("title", function (a, b) {
                                return b + " (" + f + ")"
                            })
                    }).tooltip({
                        "container": "body",
                        "trigger": "hover",
                        "placement": d || "top"
                    }).on("click", function () {
                        a(this).tooltip("hide")
                    })
                },
                q = [
                    ["#000000", "#424242", "#636363", "#9C9C94", "#CEC6CE", "#EFEFEF", "#F7F7F7", "#FFFFFF"],
                    ["#FF0000", "#FF9C00", "#FFFF00", "#00FF00", "#00FFFF", "#0000FF", "#9C00FF", "#FF00FF"],
                    ["#F7C6CE", "#FFE7CE", "#FFEFC6", "#D6EFD6", "#CEDEE7", "#CEE7F7", "#D6D6E7", "#E7D6DE"],
                    ["#E79C9C", "#FFC69C", "#FFE79C", "#B5D6A5", "#A5C6CE", "#9CC6EF", "#B5A5D6", "#D6A5BD"],
                    ["#E76363", "#F7AD6B", "#FFD663", "#94BD7B", "#73A5AD", "#6BADDE", "#8C7BC6", "#C67BA5"],
                    ["#CE0000", "#E79439", "#EFC631", "#6BA54A", "#4A7B8C", "#3984C6", "#634AA5", "#A54A7B"],
                    ["#9C0000", "#B56308", "#BD9400", "#397B21", "#104A5A", "#085294", "#311873", "#731842"],
                    ["#630000", "#7B3900", "#846300", "#295218", "#083139", "#003163", "#21104A", "#4A1031"]
            ],
                r = function (b) {
                    b.find(".note-color-palette").each(function () {
                        for (var b = a(this), c = b.attr("data-target-event"), d = [], e = 0, f = q.length; f > e; e++) {
                            for (var g = q[e], h = [], i = 0, j = g.length; j > i; i++) {
                                var k = g[i];
                                h.push(['<button type="button" class="note-color-btn" style="background-color:', k, ';" data-event="', c, '" data-value="', k, '" title="', k, '" data-toggle="button" tabindex="-1"></button>'].join(""))
                            }
                            d.push("<div>" + h.join("") + "</div>")
                        }
                        b.html(d.join(""))
                    })
                };
            this.createLayout = function (c, i) {
                    var j = c.next();
                    if (!j || !j.hasClass("note-editor")) {
                        var k = a('<div class="note-editor"></div>');
                        i.width && k.width(i.width),
                        i.height > 0 && a('<div class="note-statusbar">' + h() + "</div>").prependTo(k);
                        var l = !c.is(":disabled"),
                            m = a('<div class="note-editable" contentEditable="' + l + '"></div>').prependTo(k);
                        i.height && m.height(i.height),
                        i.direction && m.attr("dir", i.direction),
                        m.html(f.html(c) || f.emptyPara),
                        a('<textarea class="note-codable"></textarea>').prependTo(k);
                        for (var n = a.summernote.lang[i.lang], o = "", q = 0, s = i.toolbar.length; s > q; q++) {
                                var t = i.toolbar[q];
                                o += '<div class="note-' + t[0] + ' btn-group">';
                                for (var u = 0, v = t[1].length; v > u; u++) o += b[t[1][u]](n);
                                o += "</div>"
                            }
                        o = '<div class="note-toolbar btn-toolbar">' + o + "</div>";
                        var w = a(o).prependTo(k);
                        r(w),
                        p(w, "bottom");
                        var x = a(d(n)).prependTo(k);
                        p(x),
                        a(e()).prependTo(k);
                        var y = a(g(n, i)).prependTo(k);
                        y.find("button.close, a.modal-close").click(function () {
                                a(this).closest(".modal").modal("hide")
                            }),
                        a('<div class="note-dropzone"><div class="note-dropzone-message"></div></div>').prependTo(k),
                        k.insertAfter(c),
                        c.hide()
                    }
                },
            this.layoutInfoFromHolder = function (a) {
                    var b = a.next();
                    if (b.hasClass("note-editor")) {
                        var c = f.buildLayoutInfo(b);
                        for (var d in c) c.hasOwnProperty(d) && (c[d] = c[d].call());
                        return c
                    }
                },
            this.removeLayout = function (a) {
                    var b = this.layoutInfoFromHolder(a);
                    b && (a.html(b.editable.html()), b.editor.remove(), a.show())
                }
        };
    a.summernote = a.summernote || {},
    a.extend(a.summernote, g);
    var u = new t,
        v = new s;
    a.fn.extend({
            "summernote": function (b) {
                if (b = a.extend({}, a.summernote.options, b), this.each(function (c, d) {
                    var e = a(d);
                    u.createLayout(e, b);
                    var g = u.layoutInfoFromHolder(e);
                    v.attach(g, b),
                    f.isTextarea(e[0]) && e.closest("form").submit(function () {
                        e.html(e.code())
                    })
                }), this.first() && b.focus) {
                    var c = u.layoutInfoFromHolder(this.first());
                    c.editable.focus()
                }
                return this.length > 0 && b.oninit && b.oninit(),
                this
            },
            "code": function (b) {
                if (void 0 === b) {
                    var d = this.first();
                    if (0 === d.length) return;
                    var e = u.layoutInfoFromHolder(d);
                    if (e && e.editable) {
                        var f = e.editor.hasClass("codeview");
                        return f && c.bCodeMirror && e.codable.data("cmEditor").save(),
                        f ? e.codable.val() : e.editable.html()
                    }
                    return d.html()
                }
                return this.each(function (c, d) {
                    var e = u.layoutInfoFromHolder(a(d));
                    e && e.editable && e.editable.html(b)
                }),
                this
            },
            "destroy": function () {
                return this.each(function (b, c) {
                    var d = a(c),
                        e = u.layoutInfoFromHolder(d);
                    e && e.editable && (v.dettach(e), u.removeLayout(d))
                }),
                this
            }
        })
}),


function (b) {
    function c() {
        return "Markdown.mk_block( " + uneval(this.toString()) + ", " + uneval(this.trailing) + ", " + uneval(this.lineNumber) + " )"
    }
    function d() {
        var a = require("util");
        return "Markdown.mk_block( " + a.inspect(this.toString()) + ", " + a.inspect(this.trailing) + ", " + a.inspect(this.lineNumber) + " )"
    }
    function e(a) {
        for (var b = 0, c = -1; - 1 !== (c = a.indexOf("\n", c + 1));) b++;
        return b
    }
    function f(a, b) {
        function c(a) {
            this.len_after = a,
            this.name = "close_" + b
        }
        var d = a + "_state",
            e = "strong" == a ? "em_state" : "strong_state";
        return function (f) {
                if (this[d][0] == b) return this[d].shift(),
                [f.length, new c(f.length - b.length)];
                var g = this[e].slice(),
                    h = this[d].slice();
                this[d].unshift(b); {
                        var i = this.processInline(f.substr(b.length)),
                            j = i[i.length - 1];
                        this[d].shift()
                    }
                if (j instanceof c) {
                        i.pop();
                        var k = f.length - j.len_after;
                        return [k, [a].concat(i)]
                    }
                return this[e] = g,
                this[d] = h,
                [b.length, b]
            }
    }
    function g(a) {
        for (var b = a.split(""), c = [""], d = !1; b.length;) {
            var e = b.shift();
            switch (e) {
            case " ":
                d ? c[c.length - 1] += e : c.push("");
                break;
            case "'":
            case '"':
                d = !d;
                break;
            case "\\":
                e = b.shift();
            default:
                c[c.length - 1] += e
            }
        }
        return c
    }
    function h(a) {
        return q(a) && a.length > 1 && "object" == typeof a[1] && !q(a[1]) ? a[1] : void 0
    }
    function i(a) {
        return a.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
    }
    function j(a) {
        if ("string" == typeof a) return i(a);
        var b = a.shift(),
            c = {},
            d = [];
        for (!a.length || "object" != typeof a[0] || a[0] instanceof Array || (c = a.shift()); a.length;) d.push(arguments.callee(a.shift()));
        var e = "";
        for (var f in c) e += " " + f + '="' + i(c[f]) + '"';
        return "img" == b || "br" == b || "hr" == b ? "<" + b + e + "/>" : "<" + b + e + ">" + d.join("") + "</" + b + ">"
    }
    function k(a, b, c) {
        var d;
        c = c || {};
        var e = a.slice(0);
        "function" == typeof c.preprocessTreeNode && (e = c.preprocessTreeNode(e, b));
        var f = h(e);
        if (f) {
            e[1] = {};
            for (d in f) e[1][d] = f[d];
            f = e[1]
        }
        if ("string" == typeof e) return e;
        switch (e[0]) {
        case "header":
            e[0] = "h" + e[1].level,
            delete e[1].level;
            break;
        case "bulletlist":
            e[0] = "ul";
            break;
        case "numberlist":
            e[0] = "ol";
            break;
        case "listitem":
            e[0] = "li";
            break;
        case "para":
            e[0] = "p";
            break;
        case "markdown":
            e[0] = "html",
            f && delete f.references;
            break;
        case "code_block":
            e[0] = "pre",
            d = f ? 2 : 1;
            var g = ["code"];
            g.push.apply(g, e.splice(d)),
            e[d] = g;
            break;
        case "inlinecode":
            e[0] = "code";
            break;
        case "img":
            e[1].src = e[1].href,
            delete e[1].href;
            break;
        case "linebreak":
            e[0] = "br";
            break;
        case "link":
            e[0] = "a";
            break;
        case "link_ref":
            e[0] = "a";
            var i = b[f.ref];
            if (!i) return f.original;
            delete f.ref,
            f.href = i.href,
            i.title && (f.title = i.title),
            delete f.original;
            break;
        case "img_ref":
            e[0] = "img";
            var i = b[f.ref];
            if (!i) return f.original;
            delete f.ref,
            f.src = i.href,
            i.title && (f.title = i.title),
            delete f.original
        }
        if (d = 1, f) {
            for (var j in e[1]) d = 2;
            1 === d && e.splice(d, 1)
        }
        for (; d < e.length; ++d) e[d] = arguments.callee(e[d], b, c);
        return e
    }
    function l(a) {
        for (var b = h(a) ? 2 : 1; b < a.length;)"string" == typeof a[b] ? b + 1 < a.length && "string" == typeof a[b + 1] ? a[b] += a.splice(b + 1, 1)[0] : ++b : (arguments.callee(a[b]), ++b)
    }
    var m = b.Markdown = function r(a) {
        switch (typeof a) {
        case "undefined":
            this.dialect = r.dialects.Gruber;
            break;
        case "object":
            this.dialect = a;
            break;
        default:
            if (!(a in r.dialects)) throw new Error("Unknown Markdown dialect '" + String(a) + "'");
            this.dialect = r.dialects[a]
        }
        this.em_state = [],
        this.strong_state = [],
        this.debug_indent = ""
    };
    b.parse = function (a, b) {
        var c = new m(b);
        return c.toTree(a)
    },
    b.toHTML = function (a, c, d) {
        var e = b.toHTMLTree(a, c, d);
        return b.renderJsonML(e)
    },
    b.toHTMLTree = function (a, b, c) {
        "string" == typeof a && (a = this.parse(a, b));
        var d = h(a),
            e = {};
        d && d.references && (e = d.references);
        var f = k(a, e, c);
        return l(f),
        f
    };
    var n = m.mk_block = function (a, b, e) {
        1 == arguments.length && (b = "\n\n");
        var f = new String(a);
        return f.trailing = b,
        f.inspect = d,
        f.toSource = c,
        void 0 != e && (f.lineNumber = e),
        f
    };
    m.prototype.split_blocks = function (a) {
        var b, c = /([\s\S]+?)($|\n(?:\s*\n|$)+)/g,
            d = [],
            f = 1;
        for (null != (b = /^(\s*\n)/.exec(a)) && (f += e(b[0]), c.lastIndex = b[0].length); null !== (b = c.exec(a));) d.push(n(b[1], b[2], f)),
        f += e(b[0]);
        return d
    },
    m.prototype.processBlock = function (a, b) {
        var c = this.dialect.block,
            d = c.__order__;
        if ("__call__" in c) return c.__call__.call(this, a, b);
        for (var e = 0; e < d.length; e++) {
                var f = c[d[e]].call(this, a, b);
                if (f) return (!q(f) || f.length > 0 && !q(f[0])) && this.debug(d[e], "didn't return a proper array"),
                f
            }
        return []
    },
    m.prototype.processInline = function (a) {
        return this.dialect.inline.__call__.call(this, String(a))
    },
    m.prototype.toTree = function (a, b) {
        var c = a instanceof Array ? a : this.split_blocks(a),
            d = this.tree;
        try {
                for (this.tree = b || this.tree || ["markdown"]; c.length;) {
                    var e = this.processBlock(c.shift(), c);
                    e.length && this.tree.push.apply(this.tree, e)
                }
                return this.tree
            } finally {
                b && (this.tree = d)
            }
    },
    m.prototype.debug = function () {
        var a = Array.prototype.slice.call(arguments);
        a.unshift(this.debug_indent),
        "undefined" != typeof print && print.apply(print, a),
        "undefined" != typeof console && "undefined" != typeof console.log && console.log.apply(null, a)
    },
    m.prototype.loop_re_over_block = function (a, b, c) {
        for (var d, e = b.valueOf(); e.length && null != (d = a.exec(e));) e = e.substr(d[0].length),
        c.call(this, d);
        return e
    },
    m.dialects = {},
    m.dialects.Gruber = {
        "block": {
            "atxHeader": function (a, b) {
                var c = a.match(/^(#{1,6})\s*(.*?)\s*#*\s*(?:\n|$)/);
                if (!c) return void 0;
                var d = ["header", {
                    "level": c[1].length
                }];
                return Array.prototype.push.apply(d, this.processInline(c[2])),
                c[0].length < a.length && b.unshift(n(a.substr(c[0].length), a.trailing, a.lineNumber + 2)),
                [d]
            },
            "setextHeader": function (a, b) {
                var c = a.match(/^(.*)\n([-=])\2\2+(?:\n|$)/);
                if (!c) return void 0;
                var d = "=" === c[2] ? 1 : 2,
                    e = ["header", {
                        "level": d
                    },
                    c[1]];
                return c[0].length < a.length && b.unshift(n(a.substr(c[0].length), a.trailing, a.lineNumber + 2)),
                [e]
            },
            "code": function (a, b) {
                var c = [],
                    d = /^(?: {0,3}\t| {4})(.*)\n?/;
                if (!a.match(d)) return void 0;
                a: for (;;) {
                        var e = this.loop_re_over_block(d, a.valueOf(), function (a) {
                            c.push(a[1])
                        });
                        if (e.length) {
                            b.unshift(n(e, a.trailing));
                            break a
                        }
                        if (!b.length) break a;
                        if (!b[0].match(d)) break a;
                        c.push(a.trailing.replace(/[^\n]/g, "").substring(2)),
                        a = b.shift()
                    }
                return [["code_block", c.join("\n")]]
            },
            "horizRule": function (a, b) {
                var c = a.match(/^(?:([\s\S]*?)\n)?[ \t]*([-_*])(?:[ \t]*\2){2,}[ \t]*(?:\n([\s\S]*))?$/);
                if (!c) return void 0;
                var d = [
                    ["hr"]
                ];
                return c[1] && d.unshift.apply(d, this.processBlock(c[1], [])),
                c[3] && b.unshift(n(c[3])),
                d
            },
            "lists": function () {
                function a(a) {
                    return new RegExp("(?:^(" + i + "{0," + a + "} {0,3})(" + f + ")\\s+)|(^" + i + "{0," + (a - 1) + "}[ ]{0,4})")
                }
                function b(a) {
                    return a.replace(/ {0,3}\t/g, "    ")
                }
                function c(a, b, c, d) {
                    if (b) return void a.push(["para"].concat(c));
                    var e = a[a.length - 1] instanceof Array && "para" == a[a.length - 1][0] ? a[a.length - 1] : a;
                    d && a.length > 1 && c.unshift(d);
                    for (var f = 0; f < c.length; f++) {
                        var g = c[f],
                            h = "string" == typeof g;
                        h && e.length > 1 && "string" == typeof e[e.length - 1] ? e[e.length - 1] += g : e.push(g)
                    }
                }
                function d(a, b) {
                    for (var c = new RegExp("^(" + i + "{" + a + "}.*?\\n?)*$"), d = new RegExp("^" + i + "{" + a + "}", "gm"), e = []; b.length > 0;) {
                        if (c.exec(b[0])) {
                            var f = b.shift(),
                                g = f.replace(d, "");
                            e.push(n(g, f.trailing, f.lineNumber))
                        }
                        break
                    }
                    return e
                }
                function e(a, b, c) {
                    var d = a.list,
                        e = d[d.length - 1];
                    if (!(e[1] instanceof Array && "para" == e[1][0])) if (b + 1 == c.length) e.push(["para"].concat(e.splice(1)));
                    else {
                            var f = e.pop();
                            e.push(["para"].concat(e.splice(1)), f)
                        }
                }
                var f = "[*+-]|\\d+\\.",
                    g = /[*+-]/,
                    h = new RegExp("^( {0,3})(" + f + ")[ 	]+"),
                    i = "(?: {0,3}\\t| {4})";
                return function (f, i) {
                        function j(a) {
                            var b = g.exec(a[2]) ? ["bulletlist"] : ["numberlist"];
                            return n.push({
                                "list": b,
                                "indent": a[1]
                            }),
                            b
                        }
                        var k = f.match(h);
                        if (!k) return void 0;
                        for (var l, m, n = [], p = j(k), q = !1, r = [n[0].list];;) {
                            for (var s = f.split(/(?=\n)/), t = "", u = 0; u < s.length; u++) {
                                var v = "",
                                    w = s[u].replace(/^\n/, function (a) {
                                        return v = a,
                                        ""
                                    }),
                                    x = a(n.length);
                                if (k = w.match(x), void 0 !== k[1]) {
                                        t.length && (c(l, q, this.processInline(t), v), q = !1, t = ""),
                                        k[1] = b(k[1]);
                                        var y = Math.floor(k[1].length / 4) + 1;
                                        if (y > n.length) p = j(k),
                                        l.push(p),
                                        l = p[1] = ["listitem"];
                                        else {
                                            var z = !1;
                                            for (m = 0; m < n.length; m++) if (n[m].indent == k[1]) {
                                                p = n[m].list,
                                                n.splice(m + 1),
                                                z = !0;
                                                break
                                            }
                                            z || (y++, y <= n.length ? (n.splice(y), p = n[y - 1].list) : (p = j(k), l.push(p))),
                                            l = ["listitem"],
                                            p.push(l)
                                        }
                                        v = ""
                                    }
                                w.length > k[0].length && (t += v + w.substr(k[0].length))
                            }
                            t.length && (c(l, q, this.processInline(t), v), q = !1, t = "");
                            var A = d(n.length, i);
                            A.length > 0 && (o(n, e, this), l.push.apply(l, this.toTree(A, [])));
                            var B = i[0] && i[0].valueOf() || "";
                            if (!B.match(h) && !B.match(/^ /)) break;
                            f = i.shift();
                            var C = this.dialect.block.horizRule(f, i);
                            if (C) {
                                r.push.apply(r, C);
                                break
                            }
                            o(n, e, this),
                            q = !0
                        }
                        return r
                    }
            }(),
            "blockquote": function (a, b) {
                if (!a.match(/^>/m)) return void 0;
                var c = [];
                if (">" != a[0]) {
                    for (var d = a.split(/\n/), e = []; d.length && ">" != d[0][0];) e.push(d.shift());
                    a = d.join("\n"),
                    c.push.apply(c, this.processBlock(e.join("\n"), []))
                }
                for (; b.length && ">" == b[0][0];) {
                    var f = b.shift();
                    a = new String(a + a.trailing + f),
                    a.trailing = f.trailing
                } {
                    var g = a.replace(/^> ?/gm, "");
                    this.tree
                }
                return c.push(this.toTree(g, ["blockquote"])),
                c
            },
            "referenceDefn": function (a, b) {
                var c = /^\s*\[(.*?)\]:\s*(\S+)(?:\s+(?:(['"])(.*?)\3|\((.*?)\)))?\n?/;
                if (!a.match(c)) return void 0;
                h(this.tree) || this.tree.splice(1, 0, {});
                var d = h(this.tree);
                void 0 === d.references && (d.references = {});
                var e = this.loop_re_over_block(c, a, function (a) {
                    a[2] && "<" == a[2][0] && ">" == a[2][a[2].length - 1] && (a[2] = a[2].substring(1, a[2].length - 1));
                    var b = d.references[a[1].toLowerCase()] = {
                        "href": a[2]
                    };
                    void 0 !== a[4] ? b.title = a[4] : void 0 !== a[5] && (b.title = a[5])
                });
                return e.length && b.unshift(n(e, a.trailing)),
                []
            },
            "para": function (a) {
                return [["para"].concat(this.processInline(a))]
            }
        }
    },
    m.dialects.Gruber.inline = {
        "__oneElement__": function (a, b, c) {
            var d, e;
            b = b || this.dialect.inline.__patterns__;
            var f = new RegExp("([\\s\\S]*?)(" + (b.source || b) + ")");
            if (d = f.exec(a), !d) return [a.length, a];
            if (d[1]) return [d[1].length, d[1]];
            var e;
            return d[2] in this.dialect.inline && (e = this.dialect.inline[d[2]].call(this, a.substr(d.index), d, c || [])),
            e = e || [d[2].length, d[2]]
        },
        "__call__": function (a, b) {
            function c(a) {
                "string" == typeof a && "string" == typeof e[e.length - 1] ? e[e.length - 1] += a : e.push(a)
            }
            for (var d, e = []; a.length > 0;) d = this.dialect.inline.__oneElement__.call(this, a, b, e),
            a = a.substr(d.shift()),
            o(d, c);
            return e
        },
        "]": function () {},
        "}": function () {},
        "\\": function (a) {
            return a.match(/^\\[\\`\*_{}\[\]()#\+.!\-]/) ? [2, a[1]] : [1, "\\"]
        },
        "![": function (a) {
            var b = a.match(/^!\[(.*?)\][ \t]*\([ \t]*(\S*)(?:[ \t]+(["'])(.*?)\3)?[ \t]*\)/);
            if (b) {
                b[2] && "<" == b[2][0] && ">" == b[2][b[2].length - 1] && (b[2] = b[2].substring(1, b[2].length - 1)),
                b[2] = this.dialect.inline.__call__.call(this, b[2], /\\/)[0];
                var c = {
                    "alt": b[1],
                    "href": b[2] || ""
                };
                return void 0 !== b[4] && (c.title = b[4]),
                [b[0].length, ["img", c]]
            }
            return b = a.match(/^!\[(.*?)\][ \t]*\[(.*?)\]/),
            b ? [b[0].length, ["img_ref", {
                "alt": b[1],
                "ref": b[2].toLowerCase(),
                "original": b[0]
            }]] : [2, "!["]
        },
        "[": function s(a) {
            var b = String(a),
                c = m.DialectHelpers.inline_until_char.call(this, a.substr(1), "]");
            if (!c) return [1, "["];
            var s, d, e = 1 + c[0],
                f = c[1];
            a = a.substr(e);
            var g = a.match(/^\s*\([ \t]*(\S+)(?:[ \t]+(["'])(.*?)\2)?[ \t]*\)/);
            if (g) {
                    var h = g[1];
                    if (e += g[0].length, h && "<" == h[0] && ">" == h[h.length - 1] && (h = h.substring(1, h.length - 1)), !g[3]) for (var i = 1, j = 0; j < h.length; j++) switch (h[j]) {
                    case "(":
                        i++;
                        break;
                    case ")":
                        0 == --i && (e -= h.length - j, h = h.substring(0, j))
                    }
                    return h = this.dialect.inline.__call__.call(this, h, /\\/)[0],
                    d = {
                        "href": h || ""
                    },
                    void 0 !== g[3] && (d.title = g[3]),
                    s = ["link", d].concat(f),
                    [e, s]
                }
            return g = a.match(/^\s*\[(.*?)\]/),
            g ? (e += g[0].length, d = {
                    "ref": (g[1] || String(f)).toLowerCase(),
                    "original": b.substr(0, e)
                }, s = ["link_ref", d].concat(f), [e, s]) : 1 == f.length && "string" == typeof f[0] ? (d = {
                    "ref": f[0].toLowerCase(),
                    "original": b.substr(0, e)
                }, s = ["link_ref", d, f[0]], [e, s]) : [1, "["]
        },
        "<": function (a) {
            var b;
            return null != (b = a.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\.[a-zA-Z]+))>/)) ? b[3] ? [b[0].length, ["link", {
                "href": "mailto:" + b[3]
            },
            b[3]]] : "mailto" == b[2] ? [b[0].length, ["link", {
                "href": b[1]
            },
            b[1].substr("mailto:".length)]] : [b[0].length, ["link", {
                "href": b[1]
            },
            b[1]]] : [1, "<"]
        },
        "`": function (a) {
            var b = a.match(/(`+)(([\s\S]*?)\1)/);
            return b && b[2] ? [b[1].length + b[2].length, ["inlinecode", b[3]]] : [1, "`"]
        },
        "  \n": function () {
            return [3, ["linebreak"]]
        }
    },
    m.dialects.Gruber.inline["**"] = f("strong", "**"),
    m.dialects.Gruber.inline.__ = f("strong", "__"),
    m.dialects.Gruber.inline["*"] = f("em", "*"),
    m.dialects.Gruber.inline._ = f("em", "_"),
    m.buildBlockOrder = function (a) {
        var b = [];
        for (var c in a)"__order__" != c && "__call__" != c && b.push(c);
        a.__order__ = b
    },
    m.buildInlinePatterns = function (a) {
        var b = [];
        for (var c in a) if (!c.match(/^__.*__$/)) {
            var d = c.replace(/([\\.*+?|()\[\]{}])/g, "\\$1").replace(/\n/, "\\n");
            b.push(1 == c.length ? d : "(?:" + d + ")")
        }
        b = b.join("|"),
        a.__patterns__ = b;
        var e = a.__call__;
        a.__call__ = function (a, c) {
            return void 0 != c ? e.call(this, a, c) : e.call(this, a, b)
        }
    },
    m.DialectHelpers = {},
    m.DialectHelpers.inline_until_char = function (a, b) {
        for (var c = 0, d = [];;) {
            if (a[c] == b) return c++,
            [c, d];
            if (c >= a.length) return null;
            var e = this.dialect.inline.__oneElement__.call(this, a.substr(c));
            c += e[0],
            d.push.apply(d, e.slice(1))
        }
    },
    m.subclassDialect = function (a) {
        function b() {}
        function c() {}
        return b.prototype = a.block,
        c.prototype = a.inline,
        {
            "block": new b,
            "inline": new c
        }
    },
    m.buildBlockOrder(m.dialects.Gruber.block),
    m.buildInlinePatterns(m.dialects.Gruber.inline),
    m.dialects.Maruku = m.subclassDialect(m.dialects.Gruber),
    m.dialects.Maruku.processMetaHash = function (a) {
        for (var b = g(a), c = {}, d = 0; d < b.length; ++d) if (/^#/.test(b[d])) c.id = b[d].substring(1);
        else if (/^\./.test(b[d])) c["class"] = c["class"] ? c["class"] + b[d].replace(/./, " ") : b[d].substring(1);
        else if (/\=/.test(b[d])) {
            var e = b[d].split(/\=/);
            c[e[0]] = e[1]
        }
        return c
    },
    m.dialects.Maruku.block.document_meta = function (a) {
        if (a.lineNumber > 1) return void 0;
        if (!a.match(/^(?:\w+:.*\n)*\w+:.*$/)) return void 0;
        h(this.tree) || this.tree.splice(1, 0, {});
        var b = a.split(/\n/);
        for (p in b) {
            var c = b[p].match(/(\w+):\s*(.*)$/),
                d = c[1].toLowerCase(),
                e = c[2];
            this.tree[1][d] = e
        }
        return []
    },
    m.dialects.Maruku.block.block_meta = function (b) {
        var c = b.match(/(^|\n) {0,3}\{:\s*((?:\\\}|[^\}])*)\s*\}$/);
        if (!c) return void 0;
        var d, e = this.dialect.processMetaHash(c[2]);
        if ("" === c[1]) {
            var f = this.tree[this.tree.length - 1];
            if (d = h(f), "string" == typeof f) return void 0;
            d || (d = {}, f.splice(1, 0, d));
            for (a in e) d[a] = e[a];
            return []
        }
        var g = b.replace(/\n.*$/, ""),
            i = this.processBlock(g, []);
        d = h(i[0]),
        d || (d = {}, i[0].splice(1, 0, d));
        for (a in e) d[a] = e[a];
        return i
    },
    m.dialects.Maruku.block.definition_list = function (a, b) {
        var c, d = /^((?:[^\s:].*\n)+):\s+([\s\S]+)$/,
            e = ["dl"];
        if (!(h = a.match(d))) return void 0;
        for (var f = [a]; b.length && d.exec(b[0]);) f.push(b.shift());
        for (var g = 0; g < f.length; ++g) {
                var h = f[g].match(d),
                    i = h[1].replace(/\n$/, "").split(/\n/),
                    j = h[2].split(/\n:\s+/);
                for (c = 0; c < i.length; ++c) e.push(["dt", i[c]]);
                for (c = 0; c < j.length; ++c) e.push(["dd"].concat(this.processInline(j[c].replace(/(\n)\s+/, "$1"))))
            }
        return [e]
    },
    m.dialects.Maruku.inline["{:"] = function (a, b, c) {
        if (!c.length) return [2, "{:"];
        var d = c[c.length - 1];
        if ("string" == typeof d) return [2, "{:"];
        var e = a.match(/^\{:\s*((?:\\\}|[^\}])*)\s*\}/);
        if (!e) return [2, "{:"];
        var f = this.dialect.processMetaHash(e[1]),
            g = h(d);
        g || (g = {}, d.splice(1, 0, g));
        for (var i in f) g[i] = f[i];
        return [e[0].length, ""]
    },
    m.buildBlockOrder(m.dialects.Maruku.block),
    m.buildInlinePatterns(m.dialects.Maruku.inline);
    var o, q = Array.isArray ||
    function (a) {
        return "[object Array]" == Object.prototype.toString.call(a)
    };
    o = Array.prototype.forEach ?
    function (a, b, c) {
        return a.forEach(b, c)
    } : function (a, b, c) {
        for (var d = 0; d < a.length; d++) b.call(c || a, a[d], d, a)
    },
    b.renderJsonML = function (a, b) {
        b = b || {},
        b.root = b.root || !1;
        var c = [];
        if (b.root) c.push(j(a));
        else for (a.shift(), !a.length || "object" != typeof a[0] || a[0] instanceof Array || a.shift(); a.length;) c.push(j(a.shift()));
        return c.join("\n\n")
    }
}(function () {
    return "undefined" == typeof exports ? (window.markdown = {}, window.markdown) : exports
}());
var toMarkdown = function (a) {
    function b(a, b) {
        var c = "void" === b.type ? "<" + b.tag + "\\b([^>]*)\\/?>" : "<" + b.tag + "\\b([^>]*)>([\\s\\S]*?)<\\/" + b.tag + ">",
            d = new RegExp(c, "gi"),
            e = "";
        return e = "string" == typeof b.replacement ? a.replace(d, b.replacement) : a.replace(d, function (a, c, d, e) {
                return b.replacement.call(this, a, c, d, e)
            })
    }
    function c(a) {
        return new RegExp(a + "\\s*=\\s*[\"']?([^\"']*)[\"']?", "i")
    }
    function d(a) {
        return a = a.replace(/<(ul|ol)\b[^>]*>([\s\S]*?)<\/\1>/gi, function (a, b, c) {
            var d = c.split("</li>");
            for (d.splice(d.length - 1, 1), h = 0, i = d.length; i > h; h++) if (d[h]) {
                var e = "ol" === b ? h + 1 + ".  " : "*   ";
                d[h] = d[h].replace(/\s*<li[^>]*>([\s\S]*)/i, function (a, b) {
                    return b = b.replace(/^\s+/, ""),
                    b = b.replace(/\n\n/g, "\n\n    "),
                    b = b.replace(/\n([ ]*)+(\*|\d+\.) /g, "\n$1    $2 "),
                    e + b
                })
            }
            return d.join("\n")
        }),
        "\n\n" + a.replace(/[ \t]+\n|\s+$/g, "")
    }
    function e(a) {
        return a = a.replace(/<blockquote\b[^>]*>([\s\S]*?)<\/blockquote>/gi, function (a, b) {
            return b = b.replace(/^\s+|\s+$/g, ""),
            b = f(b),
            b = b.replace(/^/gm, "> "),
            b = b.replace(/^(>([ \t]{2,}>)+)/gm, "> >")
        })
    }
    function f(a) {
        return a = a.replace(/^[\t\r\n]+|[\t\r\n]+$/g, ""),
        a = a.replace(/\n\s+\n/g, "\n\n"),
        a = a.replace(/\n{3,}/g, "\n\n")
    }
    for (var g = [{
        "patterns": "p",
        "replacement": function (a, b, c) {
            return c ? "\n\n" + c + "\n" : ""
        }
    },
    {
        "patterns": "br",
        "type": "void",
        "replacement": "\n"
    },
    {
        "patterns": "h([1-6])",
        "replacement": function (a, b, c, d) {
            for (var e = "", f = 0; b > f; f++) e += "#";
            return "\n\n" + e + " " + d + "\n"
        }
    },
    {
        "patterns": "hr",
        "type": "void",
        "replacement": "\n\n* * *\n"
    },
    {
        "patterns": "a",
        "replacement": function (a, b, d) {
            var e = b.match(c("href")),
                f = b.match(c("title"));
            return e ? "[" + d + "](" + e[1] + (f && f[1] ? ' "' + f[1] + '"' : "") + ")" : a
        }
    },
    {
        "patterns": ["b", "strong"],
        "replacement": function (a, b, c) {
            return c ? "**" + c + "**" : ""
        }
    },
    {
        "patterns": ["i", "em"],
        "replacement": function (a, b, c) {
            return c ? "_" + c + "_" : ""
        }
    },
    {
        "patterns": "code",
        "replacement": function (a, b, c) {
            return c ? "`" + c + "`" : ""
        }
    },
    {
        "patterns": "img",
        "type": "void",
        "replacement": function (a, b) {
            var d = b.match(c("src")),
                e = b.match(c("alt")),
                f = b.match(c("title"));
            return "![" + (e && e[1] ? e[1] : "") + "](" + d[1] + (f && f[1] ? ' "' + f[1] + '"' : "") + ")"
        }
    }], h = 0, i = g.length; i > h; h++) if ("string" == typeof g[h].patterns) a = b(a, {
        "tag": g[h].patterns,
        "replacement": g[h].replacement,
        "type": g[h].type
    });
    else for (var j = 0, k = g[h].patterns.length; k > j; j++) a = b(a, {
        "tag": g[h].patterns[j],
        "replacement": g[h].replacement,
        "type": g[h].type
    });
    a = a.replace(/<pre\b[^>]*>`([\s\S]*)`<\/pre>/gi, function (a, b) {
        return b = b.replace(/^\t+/g, "  "),
        b = b.replace(/\n/g, "\n    "),
        "\n\n    " + b + "\n"
    }),
    a = a.replace(/^(\s{0,3}\d+)\. /g, "$1\\. ");
    for (var l = /<(ul|ol)\b[^>]*>(?:(?!<ul|<ol)[\s\S])*?<\/\1>/gi; a.match(l);) a = a.replace(l, function (a) {
        return d(a)
    });
    for (var m = /<blockquote\b[^>]*>((?:(?!<blockquote)[\s\S])*?)<\/blockquote>/gi; a.match(m);) a = a.replace(m, function (a) {
        return e(a)
    });
    return f(a)
};
"object" == typeof exports && (exports.toMarkdown = toMarkdown),
!
function (a) {
    "use strict";
    var b = function (b, c) {
        this.$ns = "bootstrap-markdown",
        this.$element = a(b),
        this.$editable = {
            "el": null,
            "type": null,
            "attrKeys": [],
            "attrValues": [],
            "content": null
        },
        this.$options = a.extend(!0, {}, a.fn.markdown.defaults, c),
        this.$oldContent = null,
        this.$isPreview = !1,
        this.$editor = null,
        this.$textarea = null,
        this.$handler = [],
        this.$callback = [],
        this.$nextTab = [],
        this.showEditor()
    };
    b.prototype = {
        "constructor": b,
        "__alterButtons": function (b, c) {
            var d = this.$handler,
                e = "all" == b,
                f = this;
            a.each(d, function (a, d) {
                    var g = !0;
                    g = e ? !1 : d.indexOf(b) < 0,
                    0 == g && c(f.$editor.find('button[data-handler="' + d + '"]'))
                })
        },
        "__buildButtons": function (b, c) {
            var d, e = this.$ns,
                f = this.$handler,
                g = this.$callback;
            for (d = 0; d < b.length; d++) {
                    var h, i = b[d];
                    for (h = 0; h < i.length; h++) {
                        var j, k = i[h].data,
                            l = a("<div/>", {
                                "class": "btn-group"
                            });
                        for (j = 0; j < k.length; j++) {
                                var m = k[j],
                                    n = "",
                                    o = e + "-" + m.name,
                                    p = m.icon instanceof Object ? m.icon[this.$options.iconlibrary] : m.icon,
                                    q = m.btnText ? m.btnText : "",
                                    r = m.btnClass ? m.btnClass : "btn",
                                    s = m.tabIndex ? m.tabIndex : "-1";
                                1 == m.toggle && (n = ' data-toggle="button"'),
                                l.append('<button type="button" class="' + r + ' btn-default btn-sm" title="' + m.title + '" tabindex="' + s + '" data-provider="' + e + '" data-handler="' + o + '"' + n + '><span class="' + p + '"></span> ' + q + "</button>"),
                                f.push(o),
                                g.push(m.callback)
                            }
                        c.append(l)
                    }
                }
            return c
        },
        "__setListener": function () {
            var b = "undefined" != typeof this.$textarea.attr("rows"),
                c = this.$textarea.val().split("\n").length > 5 ? this.$textarea.val().split("\n").length : "5",
                d = b ? this.$textarea.attr("rows") : c;
            this.$textarea.attr("rows", d),
            this.$textarea.css("resize", "none"),
            this.$textarea.on("focus", a.proxy(this.focus, this)).on("keypress", a.proxy(this.keypress, this)).on("keyup", a.proxy(this.keyup, this)),
            this.eventSupported("keydown") && this.$textarea.on("keydown", a.proxy(this.keydown, this)),
            this.$textarea.data("markdown", this)
        },
        "__handle": function (b) {
            var c = a(b.currentTarget),
                d = this.$handler,
                e = this.$callback,
                f = c.attr("data-handler"),
                g = d.indexOf(f),
                h = e[g];
            a(b.currentTarget).focus(),
            h(this),
            f.indexOf("cmdSave") < 0 && this.$textarea.focus(),
            b.preventDefault()
        },
        "showEditor": function () {
            var b, c = this,
                d = this.$ns,
                e = this.$element,
                f = (e.css("height"), e.css("width"), this.$editable),
                g = this.$handler,
                h = this.$callback,
                i = this.$options,
                j = a("<div/>", {
                    "class": "md-editor",
                    "click": function () {
                        c.focus()
                    }
                });
            if (null == this.$editor) {
                    var k = a("<div/>", {
                        "class": "md-header btn-toolbar"
                    });
                    if (i.buttons.length > 0 && (k = this.__buildButtons(i.buttons, k)), i.additionalButtons.length > 0 && (k = this.__buildButtons(i.additionalButtons, k)), j.append(k), e.is("textarea")) e.before(j),
                    b = e,
                    b.addClass("md-input"),
                    j.append(b);
                    else {
                        var l = "function" == typeof toMarkdown ? toMarkdown(e.html()) : e.html(),
                            m = a.trim(l);
                        b = a("<textarea/>", {
                                "class": "md-input",
                                "val": m
                            }),
                        j.append(b),
                        f.el = e,
                        f.type = e.prop("tagName").toLowerCase(),
                        f.content = e.html(),
                        a(e[0].attributes).each(function () {
                                f.attrKeys.push(this.nodeName),
                                f.attrValues.push(this.nodeValue)
                            }),
                        e.replaceWith(j)
                    }
                    if (i.savable) {
                        var n = a("<div/>", {
                            "class": "md-footer"
                        }),
                            o = "cmdSave";
                        g.push(o),
                        h.push(i.onSave),
                        n.append('<button class="btn btn-success" data-provider="' + d + '" data-handler="' + o + '"><i class="icon icon-white icon-ok"></i> Save</button>'),
                        j.append(n)
                    }
                    a.each(["height", "width"], function (a, b) {
                        "inherit" != i[b] && (jQuery.isNumeric(i[b]) ? j.css(b, i[b] + "px") : j.addClass(i[b]))
                    }),
                    this.$editor = j,
                    this.$textarea = b,
                    this.$editable = f,
                    this.$oldContent = this.getContent(),
                    this.__setListener(),
                    this.$editor.attr("id", (new Date).getTime()),
                    this.$editor.on("click", '[data-provider="bootstrap-markdown"]', a.proxy(this.__handle, this))
                } else this.$editor.show();
            return i.autofocus && (this.$textarea.focus(), this.$editor.addClass("active")),
            i.onShow(this),
            this
        },
        "showPreview": function () {
            var b, c = this.$options,
                d = c.onPreview(this),
                e = this.$textarea,
                f = e.next(),
                g = a("<div/>", {
                    "class": "md-preview",
                    "data-provider": "markdown-preview"
                });
            if (this.$isPreview = !0, this.disableButtons("all").enableButtons("cmdPreview"), "string" == typeof d) b = d;
            else {
                    var h = e.val();
                    b = "object" == typeof markdown ? markdown.toHTML(h) : "function" == typeof marked ? marked(h) : h
                }
            return g.html(b),
            f && "md-footer" == f.attr("class") ? g.insertBefore(f) : e.parent().append(g),
            e.hide(),
            g.data("markdown", this),
            this
        },
        "hidePreview": function () {
            this.$isPreview = !1;
            var a = this.$editor.find('div[data-provider="markdown-preview"]');
            return a.remove(),
            this.enableButtons("all"),
            this.$textarea.show(),
            this.__setListener(),
            this
        },
        "isDirty": function () {
            return this.$oldContent != this.getContent()
        },
        "getContent": function () {
            return this.$textarea.val()
        },
        "setContent": function (a) {
            return this.$textarea.val(a),
            this
        },
        "findSelection": function (a) {
            var b, c = this.getContent();
            if (b = c.indexOf(a), b >= 0 && a.length > 0) {
                var d, e = this.getSelection();
                return this.setSelection(b, b + a.length),
                d = this.getSelection(),
                this.setSelection(e.start, e.end),
                d
            }
            return null
        },
        "getSelection": function () {
            var a = this.$textarea[0];
            return ("selectionStart" in a &&
            function () {
                var b = a.selectionEnd - a.selectionStart;
                return {
                    "start": a.selectionStart,
                    "end": a.selectionEnd,
                    "length": b,
                    "text": a.value.substr(a.selectionStart, b)
                }
            } ||
            function () {
                return null
            })()
        },
        "setSelection": function (a, b) {
            var c = this.$textarea[0];
            return ("selectionStart" in c &&
            function () {
                c.selectionStart = a,
                c.selectionEnd = b
            } ||
            function () {
                return null
            })()
        },
        "replaceSelection": function (a) {
            var b = this.$textarea[0];
            return ("selectionStart" in b &&
            function () {
                return b.value = b.value.substr(0, b.selectionStart) + a + b.value.substr(b.selectionEnd, b.value.length),
                b.selectionStart = b.value.length,
                this
            } ||
            function () {
                return b.value += a,
                jQuery(b)
            })()
        },
        "getNextTab": function () {
            if (0 == this.$nextTab.length) return null;
            var a, b = this.$nextTab.shift();
            return "function" == typeof b ? a = b() : "object" == typeof b && b.length > 0 && (a = b),
            a
        },
        "setNextTab": function (a, b) {
            if ("string" == typeof a) {
                var c = this;
                this.$nextTab.push(function () {
                    return c.findSelection(a)
                })
            } else if ("numeric" == typeof a && "numeric" == typeof b) {
                var d = this.getSelection();
                this.setSelection(a, b),
                this.$nextTab.push(this.getSelection()),
                this.setSelection(d.start, d.end)
            }
        },
        "enableButtons": function (a) {
            var b = function (a) {
                a.removeAttr("disabled")
            };
            return this.__alterButtons(a, b),
            this
        },
        "disableButtons": function (a) {
            var b = function (a) {
                a.attr("disabled", "disabled")
            };
            return this.__alterButtons(a, b),
            this
        },
        "eventSupported": function (a) {
            var b = a in this.$element;
            return b || (this.$element.setAttribute(a, "return;"), b = "function" == typeof this.$element[a]),
            b
        },
        "keydown": function (b) {
            this.suppressKeyPressRepeat = ~a.inArray(b.keyCode, [40, 38, 9, 13, 27]),
            this.keyup(b)
        },
        "keypress": function (a) {
            this.suppressKeyPressRepeat || this.keyup(a)
        },
        "keyup": function (a) {
            var b = !1;
            switch (a.keyCode) {
            case 40:
            case 38:
            case 16:
            case 17:
            case 18:
                break;
            case 9:
                var c;
                if (c = this.getNextTab(), null != c) {
                    var d = this;
                    setTimeout(function () {
                        d.setSelection(c.start, c.end)
                    }, 500),
                    b = !0
                } else {
                    var e = this.getSelection();
                    e.start == e.end && e.end == this.getContent().length ? b = !1 : (this.setSelection(this.getContent().length, this.getContent().length), b = !0)
                }
                break;
            case 13:
            case 27:
                b = !1;
                break;
            default:
                b = !1
            }
            b && (a.stopPropagation(), a.preventDefault())
        },
        "focus": function () {
            var b = this.$options,
                c = (b.hideable, this.$editor);
            return c.addClass("active"),
            a(document).find(".md-editor").each(function () {
                    if (a(this).attr("id") != c.attr("id")) {
                        var b;
                        b = a(this).find("textarea").data("markdown"),
                        null == b && (b = a(this).find('div[data-provider="markdown-preview"]').data("markdown")),
                        b && b.blur()
                    }
                }),
            b.onFocus(this),
            this
        },
        "blur": function () {
            var b = this.$options,
                c = b.hideable,
                d = this.$editor,
                e = this.$editable;
            if (d.hasClass("active") || 0 == this.$element.parent().length) {
                    if (d.removeClass("active"), c) if (null != e.el) {
                        var f = a("<" + e.type + "/>"),
                            g = this.getContent(),
                            h = "object" == typeof markdown ? markdown.toHTML(g) : g;
                        a(e.attrKeys).each(function (a) {
                                f.attr(e.attrKeys[a], e.attrValues[a])
                            }),
                        f.html(h),
                        d.replaceWith(f)
                    } else d.hide();
                    b.onBlur(this)
                }
            return this
        }
    };
    var c = a.fn.markdown;
    a.fn.markdown = function (c) {
        return this.each(function () {
            var d = a(this),
                e = d.data("markdown"),
                f = "object" == typeof c && c;
            e || d.data("markdown", e = new b(this, f))
        })
    },
    a.fn.markdown.defaults = {
        "autofocus": !1,
        "hideable": !1,
        "savable": !1,
        "width": "inherit",
        "height": "inherit",
        "iconlibrary": "glyph",
        "buttons": [
            [{
                "name": "groupFont",
                "data": [{
                    "name": "cmdBold",
                    "title": "Bold",
                    "icon": {
                        "glyph": "glyphicon glyphicon-bold",
                        "fa": "fa fa-bold"
                    },
                    "callback": function (a) {
                        var b, c, d = a.getSelection(),
                            e = a.getContent();
                        b = 0 == d.length ? "strong text" : d.text,
                        "**" == e.substr(d.start - 2, 2) && "**" == e.substr(d.end, 2) ? (a.setSelection(d.start - 2, d.end + 2), a.replaceSelection(b), c = d.start - 2) : (a.replaceSelection("**" + b + "**"), c = d.start + 2),
                        a.setSelection(c, c + b.length)
                    }
                },
                {
                    "name": "cmdItalic",
                    "title": "Italic",
                    "icon": {
                        "glyph": "glyphicon glyphicon-italic",
                        "fa": "fa fa-italic"
                    },
                    "callback": function (a) {
                        var b, c, d = a.getSelection(),
                            e = a.getContent();
                        b = 0 == d.length ? "emphasized text" : d.text,
                        "*" == e.substr(d.start - 1, 1) && "*" == e.substr(d.end, 1) ? (a.setSelection(d.start - 1, d.end + 1), a.replaceSelection(b), c = d.start - 1) : (a.replaceSelection("*" + b + "*"), c = d.start + 1),
                        a.setSelection(c, c + b.length)
                    }
                },
                {
                    "name": "cmdHeading",
                    "title": "Heading",
                    "icon": {
                        "glyph": "glyphicon glyphicon-header",
                        "fa": "fa fa-font"
                    },
                    "callback": function (a) {
                        var b, c, d, e, f = a.getSelection(),
                            g = a.getContent();
                        b = 0 == f.length ? "heading text" : f.text + "\n",
                        d = 4,
                        "### " == g.substr(f.start - d, d) || (d = 3, "###" == g.substr(f.start - d, d)) ? (a.setSelection(f.start - d, f.end), a.replaceSelection(b), c = f.start - d) : f.start > 0 && (e = g.substr(f.start - 1, 1), !! e && "\n" != e) ? (a.replaceSelection("\n\n### " + b), c = f.start + 6) : (a.replaceSelection("### " + b), c = f.start + 4),
                        a.setSelection(c, c + b.length)
                    }
                }]
            },
            {
                "name": "groupLink",
                "data": [{
                    "name": "cmdUrl",
                    "title": "URL/Link",
                    "icon": {
                        "glyph": "glyphicon glyphicon-globe",
                        "fa": "fa fa-globe"
                    },
                    "callback": function (a) {
                        {
                            var b, c, d, e = a.getSelection();
                            a.getContent()
                        }
                        b = 0 == e.length ? "enter link description here" : e.text,
                        d = prompt("Insert Hyperlink", "http://"),
                        null != d && "" != d && "http://" != d && (a.replaceSelection("[" + b + "](" + d + ")"), c = e.start + 1, a.setSelection(c, c + b.length))
                    }
                },
                {
                    "name": "cmdImage",
                    "title": "Image",
                    "icon": {
                        "glyph": "glyphicon glyphicon-picture",
                        "fa": "fa fa-picture-o"
                    },
                    "callback": function (a) {
                        {
                            var b, c, d, e = a.getSelection();
                            a.getContent()
                        }
                        b = 0 == e.length ? "enter image description here" : e.text,
                        d = prompt("Insert Image Hyperlink", "http://"),
                        null != d && (a.replaceSelection("![" + b + "](" + d + ' "enter image title here")'), c = e.start + 2, a.setNextTab("enter image title here"), a.setSelection(c, c + b.length))
                    }
                }]
            },
            {
                "name": "groupMisc",
                "data": [{
                    "name": "cmdList",
                    "title": "List",
                    "icon": {
                        "glyph": "glyphicon glyphicon-list",
                        "fa": "fa fa-list"
                    },
                    "callback": function (b) {
                        {
                            var c, d, e = b.getSelection();
                            b.getContent()
                        }
                        if (0 == e.length) c = "list text here",
                        b.replaceSelection("- " + c),
                        d = e.start + 2;
                        else if (e.text.indexOf("\n") < 0) c = e.text,
                        b.replaceSelection("- " + c),
                        d = e.start + 2;
                        else {
                            var f = [];
                            f = e.text.split("\n"),
                            c = f[0],
                            a.each(f, function (a, b) {
                                f[a] = "- " + b
                            }),
                            b.replaceSelection("\n\n" + f.join("\n")),
                            d = e.start + 4
                        }
                        b.setSelection(d, d + c.length)
                    }
                }]
            },
            {
                "name": "groupUtil",
                "data": [{
                    "name": "cmdPreview",
                    "toggle": !0,
                    "title": "Preview",
                    "btnText": "Preview",
                    "btnClass": "btn btn-primary btn-sm",
                    "icon": {
                        "glyph": "glyphicon glyphicon-search",
                        "fa": "fa fa-search"
                    },
                    "callback": function (a) {
                        var b = a.$isPreview;
                        0 == b ? a.showPreview() : a.hidePreview()
                    }
                }]
            }]
        ],
        "additionalButtons": [],
        "onShow": function () {},
        "onPreview": function () {},
        "onSave": function () {},
        "onBlur": function () {},
        "onFocus": function () {}
    },
    a.fn.markdown.Constructor = b,
    a.fn.markdown.noConflict = function () {
        return a.fn.markdown = c,
        this
    };
    var d = function (a) {
        var b = a;
        return b.data("markdown") ? void b.data("markdown").showEditor() : void b.markdown(b.data())
    },
        e = function (b) {
            var c, d = !1,
                e = a(b.currentTarget);
            "focusin" != b.type && "click" != b.type || 1 != e.length || "object" != typeof e[0] || (c = e[0].activeElement, a(c).data("markdown") || ("undefined" == typeof a(c).parent().parent().parent().attr("class") || a(c).parent().parent().parent().attr("class").indexOf("md-editor") < 0 ? ("undefined" == typeof a(c).parent().parent().attr("class") || a(c).parent().parent().attr("class").indexOf("md-editor") < 0) && (d = !0) : d = !1), d && a(document).find(".md-editor").each(function () {
                    var b = a(c).parent();
                    if (a(this).attr("id") != b.attr("id")) {
                        var d;
                        d = a(this).find("textarea").data("markdown"),
                        null == d && (d = a(this).find('div[data-provider="markdown-preview"]').data("markdown")),
                        d && d.blur()
                    }
                }), b.stopPropagation())
        };
    a(document).on("click.markdown.data-api", '[data-provide="markdown-editable"]', function (b) {
            d(a(this)),
            b.preventDefault()
        }).on("click", function (a) {
            e(a)
        }).on("focusin", function (a) {
            e(a)
        }).ready(function () {
            a('textarea[data-provide="markdown"]').each(function () {
                d(a(this))
            })
        })
}(window.jQuery),



function (a) {
    a.color = {},
    a.color.make = function (b, c, d, e) {
        var f = {};
        return f.r = b || 0,
        f.g = c || 0,
        f.b = d || 0,
        f.a = null != e ? e : 1,
        f.add = function (a, b) {
            for (var c = 0; c < a.length; ++c) f[a.charAt(c)] += b;
            return f.normalize()
        },
        f.scale = function (a, b) {
            for (var c = 0; c < a.length; ++c) f[a.charAt(c)] *= b;
            return f.normalize()
        },
        f.toString = function () {
            return f.a >= 1 ? "rgb(" + [f.r, f.g, f.b].join(",") + ")" : "rgba(" + [f.r, f.g, f.b, f.a].join(",") + ")"
        },
        f.normalize = function () {
            function a(a, b, c) {
                return a > b ? a : b > c ? c : b
            }
            return f.r = a(0, parseInt(f.r), 255),
            f.g = a(0, parseInt(f.g), 255),
            f.b = a(0, parseInt(f.b), 255),
            f.a = a(0, f.a, 1),
            f
        },
        f.clone = function () {
            return a.color.make(f.r, f.b, f.g, f.a)
        },
        f.normalize()
    },
    a.color.extract = function (b, c) {
        var d;
        do {
            if (d = b.css(c).toLowerCase(), "" != d && "transparent" != d) break;
            b = b.parent()
        } while (b.length && !a.nodeName(b.get(0), "body"));
        return "rgba(0, 0, 0, 0)" == d && (d = "transparent"),
        a.color.parse(d)
    },
    a.color.parse = function (c) {
        var d, e = a.color.make;
        if (d = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(c)) return e(parseInt(d[1], 10), parseInt(d[2], 10), parseInt(d[3], 10));
        if (d = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(c)) return e(parseInt(d[1], 10), parseInt(d[2], 10), parseInt(d[3], 10), parseFloat(d[4]));
        if (d = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(c)) return e(2.55 * parseFloat(d[1]), 2.55 * parseFloat(d[2]), 2.55 * parseFloat(d[3]));
        if (d = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(c)) return e(2.55 * parseFloat(d[1]), 2.55 * parseFloat(d[2]), 2.55 * parseFloat(d[3]), parseFloat(d[4]));
        if (d = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(c)) return e(parseInt(d[1], 16), parseInt(d[2], 16), parseInt(d[3], 16));
        if (d = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(c)) return e(parseInt(d[1] + d[1], 16), parseInt(d[2] + d[2], 16), parseInt(d[3] + d[3], 16));
        var f = a.trim(c).toLowerCase();
        return "transparent" == f ? e(255, 255, 255, 0) : (d = b[f] || [0, 0, 0], e(d[0], d[1], d[2]))
    };
    var b = {
        "aqua": [0, 255, 255],
        "azure": [240, 255, 255],
        "beige": [245, 245, 220],
        "black": [0, 0, 0],
        "blue": [0, 0, 255],
        "brown": [165, 42, 42],
        "cyan": [0, 255, 255],
        "darkblue": [0, 0, 139],
        "darkcyan": [0, 139, 139],
        "darkgrey": [169, 169, 169],
        "darkgreen": [0, 100, 0],
        "darkkhaki": [189, 183, 107],
        "darkmagenta": [139, 0, 139],
        "darkolivegreen": [85, 107, 47],
        "darkorange": [255, 140, 0],
        "darkorchid": [153, 50, 204],
        "darkred": [139, 0, 0],
        "darksalmon": [233, 150, 122],
        "darkviolet": [148, 0, 211],
        "fuchsia": [255, 0, 255],
        "gold": [255, 215, 0],
        "green": [0, 128, 0],
        "indigo": [75, 0, 130],
        "khaki": [240, 230, 140],
        "lightblue": [173, 216, 230],
        "lightcyan": [224, 255, 255],
        "lightgreen": [144, 238, 144],
        "lightgrey": [211, 211, 211],
        "lightpink": [255, 182, 193],
        "lightyellow": [255, 255, 224],
        "lime": [0, 255, 0],
        "magenta": [255, 0, 255],
        "maroon": [128, 0, 0],
        "navy": [0, 0, 128],
        "olive": [128, 128, 0],
        "orange": [255, 165, 0],
        "pink": [255, 192, 203],
        "purple": [128, 0, 128],
        "violet": [128, 0, 128],
        "red": [255, 0, 0],
        "silver": [192, 192, 192],
        "white": [255, 255, 255],
        "yellow": [255, 255, 0]
    }
}(jQuery),


function (a) {
    function b(b, c) {
        var d = c.children("." + b)[0];
        if (null == d && (d = document.createElement("canvas"), d.className = b, a(d).css({
            "direction": "ltr",
            "position": "absolute",
            "left": 0,
            "top": 0
        }).appendTo(c), !d.getContext)) {
            if (!window.G_vmlCanvasManager) throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
            d = window.G_vmlCanvasManager.initElement(d)
        }
        this.element = d;
        var e = this.context = d.getContext("2d"),
            f = window.devicePixelRatio || 1,
            g = e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1;
        this.pixelRatio = f / g,
        this.resize(c.width(), c.height()),
        this.textContainer = null,
        this.text = {},
        this._textCache = {}
    }
    function c(c, e, f, g) {
        function h(a, b) {
            b = [qb].concat(b);
            for (var c = 0; c < a.length; ++c) a[c].apply(this, b)
        }
        function i() {
            for (var c = {
                "Canvas": b
            }, d = 0; d < g.length; ++d) {
                var e = g[d];
                e.init(qb, c),
                e.options && a.extend(!0, eb, e.options)
            }
        }
        function j(b) {
            a.extend(!0, eb, b),
            b && b.colors && (eb.colors = b.colors),
            null == eb.xaxis.color && (eb.xaxis.color = a.color.parse(eb.grid.color).scale("a", .22).toString()),
            null == eb.yaxis.color && (eb.yaxis.color = a.color.parse(eb.grid.color).scale("a", .22).toString()),
            null == eb.xaxis.tickColor && (eb.xaxis.tickColor = eb.grid.tickColor || eb.xaxis.color),
            null == eb.yaxis.tickColor && (eb.yaxis.tickColor = eb.grid.tickColor || eb.yaxis.color),
            null == eb.grid.borderColor && (eb.grid.borderColor = eb.grid.color),
            null == eb.grid.tickColor && (eb.grid.tickColor = a.color.parse(eb.grid.color).scale("a", .22).toString());
            var d, e, f, g = c.css("font-size"),
                i = g ? +g.replace("px", "") : 13,
                j = {
                    "style": c.css("font-style"),
                    "size": Math.round(.8 * i),
                    "variant": c.css("font-variant"),
                    "weight": c.css("font-weight"),
                    "family": c.css("font-family")
                };
            for (f = eb.xaxes.length || 1, d = 0; f > d; ++d) e = eb.xaxes[d],
            e && !e.tickColor && (e.tickColor = e.color),
            e = a.extend(!0, {}, eb.xaxis, e),
            eb.xaxes[d] = e,
            e.font && (e.font = a.extend({}, j, e.font), e.font.color || (e.font.color = e.color), e.font.lineHeight || (e.font.lineHeight = Math.round(1.15 * e.font.size)));
            for (f = eb.yaxes.length || 1, d = 0; f > d; ++d) e = eb.yaxes[d],
            e && !e.tickColor && (e.tickColor = e.color),
            e = a.extend(!0, {}, eb.yaxis, e),
            eb.yaxes[d] = e,
            e.font && (e.font = a.extend({}, j, e.font), e.font.color || (e.font.color = e.color), e.font.lineHeight || (e.font.lineHeight = Math.round(1.15 * e.font.size)));
            for (eb.xaxis.noTicks && null == eb.xaxis.ticks && (eb.xaxis.ticks = eb.xaxis.noTicks), eb.yaxis.noTicks && null == eb.yaxis.ticks && (eb.yaxis.ticks = eb.yaxis.noTicks), eb.x2axis && (eb.xaxes[1] = a.extend(!0, {}, eb.xaxis, eb.x2axis), eb.xaxes[1].position = "top"), eb.y2axis && (eb.yaxes[1] = a.extend(!0, {}, eb.yaxis, eb.y2axis), eb.yaxes[1].position = "right"), eb.grid.coloredAreas && (eb.grid.markings = eb.grid.coloredAreas), eb.grid.coloredAreasColor && (eb.grid.markingsColor = eb.grid.coloredAreasColor), eb.lines && a.extend(!0, eb.series.lines, eb.lines), eb.points && a.extend(!0, eb.series.points, eb.points), eb.bars && a.extend(!0, eb.series.bars, eb.bars), null != eb.shadowSize && (eb.series.shadowSize = eb.shadowSize), null != eb.highlightColor && (eb.series.highlightColor = eb.highlightColor), d = 0; d < eb.xaxes.length; ++d) q(kb, d + 1).options = eb.xaxes[d];
            for (d = 0; d < eb.yaxes.length; ++d) q(lb, d + 1).options = eb.yaxes[d];
            for (var k in pb) eb.hooks[k] && eb.hooks[k].length && (pb[k] = pb[k].concat(eb.hooks[k]));
            h(pb.processOptions, [eb])
        }
        function k(a) {
            db = l(a),
            r(),
            s()
        }
        function l(b) {
            for (var c = [], d = 0; d < b.length; ++d) {
                var e = a.extend(!0, {}, eb.series);
                null != b[d].data ? (e.data = b[d].data, delete b[d].data, a.extend(!0, e, b[d]), b[d].data = e.data) : e.data = b[d],
                c.push(e)
            }
            return c
        }
        function m(a, b) {
            var c = a[b + "axis"];
            return "object" == typeof c && (c = c.n),
            "number" != typeof c && (c = 1),
            c
        }
        function n() {
            return a.grep(kb.concat(lb), function (a) {
                return a
            })
        }
        function o(a) {
            var b, c, d = {};
            for (b = 0; b < kb.length; ++b) c = kb[b],
            c && c.used && (d["x" + c.n] = c.c2p(a.left));
            for (b = 0; b < lb.length; ++b) c = lb[b],
            c && c.used && (d["y" + c.n] = c.c2p(a.top));
            return void 0 !== d.x1 && (d.x = d.x1),
            void 0 !== d.y1 && (d.y = d.y1),
            d
        }
        function p(a) {
            var b, c, d, e = {};
            for (b = 0; b < kb.length; ++b) if (c = kb[b], c && c.used && (d = "x" + c.n, null == a[d] && 1 == c.n && (d = "x"), null != a[d])) {
                e.left = c.p2c(a[d]);
                break
            }
            for (b = 0; b < lb.length; ++b) if (c = lb[b], c && c.used && (d = "y" + c.n, null == a[d] && 1 == c.n && (d = "y"), null != a[d])) {
                e.top = c.p2c(a[d]);
                break
            }
            return e
        }
        function q(b, c) {
            return b[c - 1] || (b[c - 1] = {
                "n": c,
                "direction": b == kb ? "x" : "y",
                "options": a.extend(!0, {}, b == kb ? eb.xaxis : eb.yaxis)
            }),
            b[c - 1]
        }
        function r() {
            var b, c = db.length,
                d = -1;
            for (b = 0; b < db.length; ++b) {
                    var e = db[b].color;
                    null != e && (c--, "number" == typeof e && e > d && (d = e))
                }
            d >= c && (c = d + 1);
            var f, g = [],
                h = eb.colors,
                i = h.length,
                j = 0;
            for (b = 0; c > b; b++) f = a.color.parse(h[b % i] || "#666"),
            b % i == 0 && b && (j = j >= 0 ? .5 > j ? -j - .2 : 0 : -j),
            g[b] = f.scale("rgb", 1 + j);
            var k, l = 0;
            for (b = 0; b < db.length; ++b) {
                    if (k = db[b], null == k.color ? (k.color = g[l].toString(), ++l) : "number" == typeof k.color && (k.color = g[k.color].toString()), null == k.lines.show) {
                        var n, o = !0;
                        for (n in k) if (k[n] && k[n].show) {
                            o = !1;
                            break
                        }
                        o && (k.lines.show = !0)
                    }
                    null == k.lines.zero && (k.lines.zero = !! k.lines.fill),
                    k.xaxis = q(kb, m(k, "x")),
                    k.yaxis = q(lb, m(k, "y"))
                }
        }
        function s() {
            function b(a, b, c) {
                b < a.datamin && b != -s && (a.datamin = b),
                c > a.datamax && c != s && (a.datamax = c)
            }
            var c, d, e, f, g, i, j, k, l, m, o, p, q = Number.POSITIVE_INFINITY,
                r = Number.NEGATIVE_INFINITY,
                s = Number.MAX_VALUE;
            for (a.each(n(), function (a, b) {
                    b.datamin = q,
                    b.datamax = r,
                    b.used = !1
                }), c = 0; c < db.length; ++c) g = db[c],
            g.datapoints = {
                    "points": []
                },
            h(pb.processRawData, [g, g.data, g.datapoints]);
            for (c = 0; c < db.length; ++c) {
                    if (g = db[c], o = g.data, p = g.datapoints.format, !p) {
                        if (p = [], p.push({
                            "x": !0,
                            "number": !0,
                            "required": !0
                        }), p.push({
                            "y": !0,
                            "number": !0,
                            "required": !0
                        }), g.bars.show || g.lines.show && g.lines.fill) {
                            var t = !! (g.bars.show && g.bars.zero || g.lines.show && g.lines.zero);
                            p.push({
                                "y": !0,
                                "number": !0,
                                "required": !1,
                                "defaultValue": 0,
                                "autoscale": t
                            }),
                            g.bars.horizontal && (delete p[p.length - 1].y, p[p.length - 1].x = !0)
                        }
                        g.datapoints.format = p
                    }
                    if (null == g.datapoints.pointsize) {
                        g.datapoints.pointsize = p.length,
                        j = g.datapoints.pointsize,
                        i = g.datapoints.points;
                        var u = g.lines.show && g.lines.steps;
                        for (g.xaxis.used = g.yaxis.used = !0, d = e = 0; d < o.length; ++d, e += j) {
                            m = o[d];
                            var v = null == m;
                            if (!v) for (f = 0; j > f; ++f) k = m[f],
                            l = p[f],
                            l && (l.number && null != k && (k = +k, isNaN(k) ? k = null : 1 / 0 == k ? k = s : k == -1 / 0 && (k = -s)), null == k && (l.required && (v = !0), null != l.defaultValue && (k = l.defaultValue))),
                            i[e + f] = k;
                            if (v) for (f = 0; j > f; ++f) k = i[e + f],
                            null != k && (l = p[f], l.autoscale !== !1 && (l.x && b(g.xaxis, k, k), l.y && b(g.yaxis, k, k))),
                            i[e + f] = null;
                            else if (u && e > 0 && null != i[e - j] && i[e - j] != i[e] && i[e - j + 1] != i[e + 1]) {
                                for (f = 0; j > f; ++f) i[e + j + f] = i[e + f];
                                i[e + 1] = i[e - j + 1],
                                e += j
                            }
                        }
                    }
                }
            for (c = 0; c < db.length; ++c) g = db[c],
            h(pb.processDatapoints, [g, g.datapoints]);
            for (c = 0; c < db.length; ++c) {
                    g = db[c],
                    i = g.datapoints.points,
                    j = g.datapoints.pointsize,
                    p = g.datapoints.format;
                    var w = q,
                        x = q,
                        y = r,
                        z = r;
                    for (d = 0; d < i.length; d += j) if (null != i[d]) for (f = 0; j > f; ++f) k = i[d + f],
                    l = p[f],
                    l && l.autoscale !== !1 && k != s && k != -s && (l.x && (w > k && (w = k), k > y && (y = k)), l.y && (x > k && (x = k), k > z && (z = k)));
                    if (g.bars.show) {
                            var A;
                            switch (g.bars.align) {
                            case "left":
                                A = 0;
                                break;
                            case "right":
                                A = -g.bars.barWidth;
                                break;
                            default:
                                A = -g.bars.barWidth / 2
                            }
                            g.bars.horizontal ? (x += A, z += A + g.bars.barWidth) : (w += A, y += A + g.bars.barWidth)
                        }
                    b(g.xaxis, w, y),
                    b(g.yaxis, x, z)
                }
            a.each(n(), function (a, b) {
                    b.datamin == q && (b.datamin = null),
                    b.datamax == r && (b.datamax = null)
                })
        }
        function t() {
            c.css("padding", 0).children().filter(function () {
                return !a(this).hasClass("flot-overlay") && !a(this).hasClass("flot-base")
            }).remove(),
            "static" == c.css("position") && c.css("position", "relative"),
            fb = new b("flot-base", c),
            gb = new b("flot-overlay", c),
            ib = fb.context,
            jb = gb.context,
            hb = a(gb.element).unbind();
            var d = c.data("plot");
            d && (d.shutdown(), gb.clear()),
            c.data("plot", qb)
        }
        function u() {
            eb.grid.hoverable && (hb.mousemove(T), hb.bind("mouseleave", U)),
            eb.grid.clickable && hb.click(V),
            h(pb.bindEvents, [hb])
        }
        function v() {
            sb && clearTimeout(sb),
            hb.unbind("mousemove", T),
            hb.unbind("mouseleave", U),
            hb.unbind("click", V),
            h(pb.shutdown, [hb])
        }
        function w(a) {
            function b(a) {
                return a
            }
            var c, d, e = a.options.transform || b,
                f = a.options.inverseTransform;
            "x" == a.direction ? (c = a.scale = nb / Math.abs(e(a.max) - e(a.min)), d = Math.min(e(a.max), e(a.min))) : (c = a.scale = ob / Math.abs(e(a.max) - e(a.min)), c = -c, d = Math.max(e(a.max), e(a.min))),
            a.p2c = e == b ?
            function (a) {
                    return (a - d) * c
                } : function (a) {
                    return (e(a) - d) * c
                },
            a.c2p = f ?
            function (a) {
                    return f(d + a / c)
                } : function (a) {
                    return d + a / c
                }
        }
        function x(a) {
            for (var b = a.options, c = a.ticks || [], d = b.labelWidth || 0, e = b.labelHeight || 0, f = d || ("x" == a.direction ? Math.floor(fb.width / (c.length || 1)) : null), g = a.direction + "Axis " + a.direction + a.n + "Axis", h = "flot-" + a.direction + "-axis flot-" + a.direction + a.n + "-axis " + g, i = b.font || "flot-tick-label tickLabel", j = 0; j < c.length; ++j) {
                var k = c[j];
                if (k.label) {
                    var l = fb.getTextInfo(h, k.label, i, null, f);
                    d = Math.max(d, l.width),
                    e = Math.max(e, l.height)
                }
            }
            a.labelWidth = b.labelWidth || d,
            a.labelHeight = b.labelHeight || e
        }
        function y(b) {
            var c = b.labelWidth,
                d = b.labelHeight,
                e = b.options.position,
                f = "x" === b.direction,
                g = b.options.tickLength,
                h = eb.grid.axisMargin,
                i = eb.grid.labelMargin,
                j = !0,
                k = !0,
                l = !0,
                m = !1;
            a.each(f ? kb : lb, function (a, c) {
                    c && c.reserveSpace && (c === b ? m = !0 : c.options.position === e && (m ? k = !1 : j = !1), m || (l = !1))
                }),
            k && (h = 0),
            null == g && (g = l ? "full" : 5),
            isNaN(+g) || (i += +g),
            f ? (d += i, "bottom" == e ? (mb.bottom += d + h, b.box = {
                    "top": fb.height - mb.bottom,
                    "height": d
                }) : (b.box = {
                    "top": mb.top + h,
                    "height": d
                }, mb.top += d + h)) : (c += i, "left" == e ? (b.box = {
                    "left": mb.left + h,
                    "width": c
                }, mb.left += c + h) : (mb.right += c + h, b.box = {
                    "left": fb.width - mb.right,
                    "width": c
                })),
            b.position = e,
            b.tickLength = g,
            b.box.padding = i,
            b.innermost = j
        }
        function z(a) {
            "x" == a.direction ? (a.box.left = mb.left - a.labelWidth / 2, a.box.width = fb.width - mb.left - mb.right + a.labelWidth) : (a.box.top = mb.top - a.labelHeight / 2, a.box.height = fb.height - mb.bottom - mb.top + a.labelHeight)
        }
        function A() {
            var b, c = eb.grid.minBorderMargin;
            if (null == c) for (c = 0, b = 0; b < db.length; ++b) c = Math.max(c, 2 * (db[b].points.radius + db[b].points.lineWidth / 2));
            var d = {
                "left": c,
                "right": c,
                "top": c,
                "bottom": c
            };
            a.each(n(), function (a, b) {
                if (b.reserveSpace && b.ticks && b.ticks.length) {
                    var c = b.ticks[b.ticks.length - 1];
                    "x" === b.direction ? (d.left = Math.max(d.left, b.labelWidth / 2), c.v <= b.max && (d.right = Math.max(d.right, b.labelWidth / 2))) : (d.bottom = Math.max(d.bottom, b.labelHeight / 2), c.v <= b.max && (d.top = Math.max(d.top, b.labelHeight / 2)))
                }
            }),
            mb.left = Math.ceil(Math.max(d.left, mb.left)),
            mb.right = Math.ceil(Math.max(d.right, mb.right)),
            mb.top = Math.ceil(Math.max(d.top, mb.top)),
            mb.bottom = Math.ceil(Math.max(d.bottom, mb.bottom))
        }
        function B() {
            var b, c = n(),
                d = eb.grid.show;
            for (var e in mb) {
                    var f = eb.grid.margin || 0;
                    mb[e] = "number" == typeof f ? f : f[e] || 0
                }
            h(pb.processOffset, [mb]);
            for (var e in mb) mb[e] += "object" == typeof eb.grid.borderWidth ? d ? eb.grid.borderWidth[e] : 0 : d ? eb.grid.borderWidth : 0;
            if (a.each(c, function (a, b) {
                    b.show = b.options.show,
                    null == b.show && (b.show = b.used),
                    b.reserveSpace = b.show || b.options.reserveSpace,
                    C(b)
                }), d) {
                    var g = a.grep(c, function (a) {
                        return a.reserveSpace
                    });
                    for (a.each(g, function (a, b) {
                        D(b),
                        E(b),
                        F(b, b.ticks),
                        x(b)
                    }), b = g.length - 1; b >= 0; --b) y(g[b]);
                    A(),
                    a.each(g, function (a, b) {
                        z(b)
                    })
                }
            nb = fb.width - mb.left - mb.right,
            ob = fb.height - mb.bottom - mb.top,
            a.each(c, function (a, b) {
                    w(b)
                }),
            d && K(),
            R()
        }
        function C(a) {
            var b = a.options,
                c = +(null != b.min ? b.min : a.datamin),
                d = +(null != b.max ? b.max : a.datamax),
                e = d - c;
            if (0 == e) {
                    var f = 0 == d ? 1 : .01;
                    null == b.min && (c -= f),
                    (null == b.max || null != b.min) && (d += f)
                } else {
                    var g = b.autoscaleMargin;
                    null != g && (null == b.min && (c -= e * g, 0 > c && null != a.datamin && a.datamin >= 0 && (c = 0)), null == b.max && (d += e * g, d > 0 && null != a.datamax && a.datamax <= 0 && (d = 0)))
                }
            a.min = c,
            a.max = d
        }
        function D(b) {
            var c, e = b.options;
            c = "number" == typeof e.ticks && e.ticks > 0 ? e.ticks : .3 * Math.sqrt("x" == b.direction ? fb.width : fb.height);
            var f = (b.max - b.min) / c,
                g = -Math.floor(Math.log(f) / Math.LN10),
                h = e.tickDecimals;
            null != h && g > h && (g = h);
            var i, j = Math.pow(10, -g),
                k = f / j;
            if (1.5 > k ? i = 1 : 3 > k ? (i = 2, k > 2.25 && (null == h || h >= g + 1) && (i = 2.5, ++g)) : i = 7.5 > k ? 5 : 10, i *= j, null != e.minTickSize && i < e.minTickSize && (i = e.minTickSize), b.delta = f, b.tickDecimals = Math.max(0, null != h ? h : g), b.tickSize = e.tickSize || i, "time" == e.mode && !b.tickGenerator) throw new Error("Time mode requires the flot.time plugin.");
            if (b.tickGenerator || (b.tickGenerator = function (a) {
                    var b, c = [],
                        e = d(a.min, a.tickSize),
                        f = 0,
                        g = Number.NaN;
                    do b = g,
                    g = e + f * a.tickSize,
                    c.push(g),
                    ++f;
                    while (g < a.max && g != b);
                    return c
                }, b.tickFormatter = function (a, b) {
                    var c = b.tickDecimals ? Math.pow(10, b.tickDecimals) : 1,
                        d = "" + Math.round(a * c) / c;
                    if (null != b.tickDecimals) {
                            var e = d.indexOf("."),
                                f = -1 == e ? 0 : d.length - e - 1;
                            if (f < b.tickDecimals) return (f ? d : d + ".") + ("" + c).substr(1, b.tickDecimals - f)
                        }
                    return d
                }), a.isFunction(e.tickFormatter) && (b.tickFormatter = function (a, b) {
                    return "" + e.tickFormatter(a, b)
                }), null != e.alignTicksWithAxis) {
                    var l = ("x" == b.direction ? kb : lb)[e.alignTicksWithAxis - 1];
                    if (l && l.used && l != b) {
                        var m = b.tickGenerator(b);
                        if (m.length > 0 && (null == e.min && (b.min = Math.min(b.min, m[0])), null == e.max && m.length > 1 && (b.max = Math.max(b.max, m[m.length - 1]))), b.tickGenerator = function (a) {
                            var b, c, d = [];
                            for (c = 0; c < l.ticks.length; ++c) b = (l.ticks[c].v - l.min) / (l.max - l.min),
                            b = a.min + b * (a.max - a.min),
                            d.push(b);
                            return d
                        }, !b.mode && null == e.tickDecimals) {
                            var n = Math.max(0, -Math.floor(Math.log(b.delta) / Math.LN10) + 1),
                                o = b.tickGenerator(b);
                            o.length > 1 && /\..*0$/.test((o[1] - o[0]).toFixed(n)) || (b.tickDecimals = n)
                        }
                    }
                }
        }
        function E(b) {
            var c = b.options.ticks,
                d = [];
            null == c || "number" == typeof c && c > 0 ? d = b.tickGenerator(b) : c && (d = a.isFunction(c) ? c(b) : c);
            var e, f;
            for (b.ticks = [], e = 0; e < d.length; ++e) {
                    var g = null,
                        h = d[e];
                    "object" == typeof h ? (f = +h[0], h.length > 1 && (g = h[1])) : f = +h,
                    null == g && (g = b.tickFormatter(f, b)),
                    isNaN(f) || b.ticks.push({
                            "v": f,
                            "label": g
                        })
                }
        }
        function F(a, b) {
            a.options.autoscaleMargin && b.length > 0 && (null == a.options.min && (a.min = Math.min(a.min, b[0].v)), null == a.options.max && b.length > 1 && (a.max = Math.max(a.max, b[b.length - 1].v)))
        }
        function G() {
            fb.clear(),
            h(pb.drawBackground, [ib]);
            var a = eb.grid;
            a.show && a.backgroundColor && I(),
            a.show && !a.aboveData && J();
            for (var b = 0; b < db.length; ++b) h(pb.drawSeries, [ib, db[b]]),
            L(db[b]);
            h(pb.draw, [ib]),
            a.show && a.aboveData && J(),
            fb.render(),
            X()
        }
        function H(a, b) {
            for (var c, d, e, f, g = n(), h = 0; h < g.length; ++h) if (c = g[h], c.direction == b && (f = b + c.n + "axis", a[f] || 1 != c.n || (f = b + "axis"), a[f])) {
                d = a[f].from,
                e = a[f].to;
                break
            }
            if (a[f] || (c = "x" == b ? kb[0] : lb[0], d = a[b + "1"], e = a[b + "2"]), null != d && null != e && d > e) {
                var i = d;
                d = e,
                e = i
            }
            return {
                "from": d,
                "to": e,
                "axis": c
            }
        }
        function I() {
            ib.save(),
            ib.translate(mb.left, mb.top),
            ib.fillStyle = cb(eb.grid.backgroundColor, ob, 0, "rgba(255, 255, 255, 0)"),
            ib.fillRect(0, 0, nb, ob),
            ib.restore()
        }
        function J() {
            var b, c, d, e;
            ib.save(),
            ib.translate(mb.left, mb.top);
            var f = eb.grid.markings;
            if (f) for (a.isFunction(f) && (c = qb.getAxes(), c.xmin = c.xaxis.min, c.xmax = c.xaxis.max, c.ymin = c.yaxis.min, c.ymax = c.yaxis.max, f = f(c)), b = 0; b < f.length; ++b) {
                var g = f[b],
                    h = H(g, "x"),
                    i = H(g, "y");
                null == h.from && (h.from = h.axis.min),
                null == h.to && (h.to = h.axis.max),
                null == i.from && (i.from = i.axis.min),
                null == i.to && (i.to = i.axis.max),
                h.to < h.axis.min || h.from > h.axis.max || i.to < i.axis.min || i.from > i.axis.max || (h.from = Math.max(h.from, h.axis.min), h.to = Math.min(h.to, h.axis.max), i.from = Math.max(i.from, i.axis.min), i.to = Math.min(i.to, i.axis.max), (h.from != h.to || i.from != i.to) && (h.from = h.axis.p2c(h.from), h.to = h.axis.p2c(h.to), i.from = i.axis.p2c(i.from), i.to = i.axis.p2c(i.to), h.from == h.to || i.from == i.to ? (ib.beginPath(), ib.strokeStyle = g.color || eb.grid.markingsColor, ib.lineWidth = g.lineWidth || eb.grid.markingsLineWidth, ib.moveTo(h.from, i.from), ib.lineTo(h.to, i.to), ib.stroke()) : (ib.fillStyle = g.color || eb.grid.markingsColor, ib.fillRect(h.from, i.to, h.to - h.from, i.from - i.to))))
            }
            c = n(),
            d = eb.grid.borderWidth;
            for (var j = 0; j < c.length; ++j) {
                var k, l, m, o, p = c[j],
                    q = p.box,
                    r = p.tickLength;
                if (p.show && 0 != p.ticks.length) {
                        for (ib.lineWidth = 1, "x" == p.direction ? (k = 0, l = "full" == r ? "top" == p.position ? 0 : ob : q.top - mb.top + ("top" == p.position ? q.height : 0)) : (l = 0, k = "full" == r ? "left" == p.position ? 0 : nb : q.left - mb.left + ("left" == p.position ? q.width : 0)), p.innermost || (ib.strokeStyle = p.options.color, ib.beginPath(), m = o = 0, "x" == p.direction ? m = nb + 1 : o = ob + 1, 1 == ib.lineWidth && ("x" == p.direction ? l = Math.floor(l) + .5 : k = Math.floor(k) + .5), ib.moveTo(k, l), ib.lineTo(k + m, l + o), ib.stroke()), ib.strokeStyle = p.options.tickColor, ib.beginPath(), b = 0; b < p.ticks.length; ++b) {
                            var s = p.ticks[b].v;
                            m = o = 0,
                            isNaN(s) || s < p.min || s > p.max || "full" == r && ("object" == typeof d && d[p.position] > 0 || d > 0) && (s == p.min || s == p.max) || ("x" == p.direction ? (k = p.p2c(s), o = "full" == r ? -ob : r, "top" == p.position && (o = -o)) : (l = p.p2c(s), m = "full" == r ? -nb : r, "left" == p.position && (m = -m)), 1 == ib.lineWidth && ("x" == p.direction ? k = Math.floor(k) + .5 : l = Math.floor(l) + .5), ib.moveTo(k, l), ib.lineTo(k + m, l + o))
                        }
                        ib.stroke()
                    }
            }
            d && (e = eb.grid.borderColor, "object" == typeof d || "object" == typeof e ? ("object" != typeof d && (d = {
                "top": d,
                "right": d,
                "bottom": d,
                "left": d
            }), "object" != typeof e && (e = {
                "top": e,
                "right": e,
                "bottom": e,
                "left": e
            }), d.top > 0 && (ib.strokeStyle = e.top, ib.lineWidth = d.top, ib.beginPath(), ib.moveTo(0 - d.left, 0 - d.top / 2), ib.lineTo(nb, 0 - d.top / 2), ib.stroke()), d.right > 0 && (ib.strokeStyle = e.right, ib.lineWidth = d.right, ib.beginPath(), ib.moveTo(nb + d.right / 2, 0 - d.top), ib.lineTo(nb + d.right / 2, ob), ib.stroke()), d.bottom > 0 && (ib.strokeStyle = e.bottom, ib.lineWidth = d.bottom, ib.beginPath(), ib.moveTo(nb + d.right, ob + d.bottom / 2), ib.lineTo(0, ob + d.bottom / 2), ib.stroke()), d.left > 0 && (ib.strokeStyle = e.left, ib.lineWidth = d.left, ib.beginPath(), ib.moveTo(0 - d.left / 2, ob + d.bottom), ib.lineTo(0 - d.left / 2, 0), ib.stroke())) : (ib.lineWidth = d, ib.strokeStyle = eb.grid.borderColor, ib.strokeRect(-d / 2, -d / 2, nb + d, ob + d))),
            ib.restore()
        }
        function K() {
            a.each(n(), function (a, b) {
                var c, d, e, f, g, h = b.box,
                    i = b.direction + "Axis " + b.direction + b.n + "Axis",
                    j = "flot-" + b.direction + "-axis flot-" + b.direction + b.n + "-axis " + i,
                    k = b.options.font || "flot-tick-label tickLabel";
                if (fb.removeText(j), b.show && 0 != b.ticks.length) for (var l = 0; l < b.ticks.length; ++l) c = b.ticks[l],
                !c.label || c.v < b.min || c.v > b.max || ("x" == b.direction ? (f = "center", d = mb.left + b.p2c(c.v), "bottom" == b.position ? e = h.top + h.padding : (e = h.top + h.height - h.padding, g = "bottom")) : (g = "middle", e = mb.top + b.p2c(c.v), "left" == b.position ? (d = h.left + h.width - h.padding, f = "right") : d = h.left + h.padding), fb.addText(j, d, e, c.label, k, null, null, f, g))
            })
        }
        function L(a) {
            a.lines.show && M(a),
            a.bars.show && P(a),
            a.points.show && N(a)
        }
        function M(a) {
            function b(a, b, c, d, e) {
                var f = a.points,
                    g = a.pointsize,
                    h = null,
                    i = null;
                ib.beginPath();
                for (var j = g; j < f.length; j += g) {
                        var k = f[j - g],
                            l = f[j - g + 1],
                            m = f[j],
                            n = f[j + 1];
                        if (null != k && null != m) {
                                if (n >= l && l < e.min) {
                                    if (n < e.min) continue;
                                    k = (e.min - l) / (n - l) * (m - k) + k,
                                    l = e.min
                                } else if (l >= n && n < e.min) {
                                    if (l < e.min) continue;
                                    m = (e.min - l) / (n - l) * (m - k) + k,
                                    n = e.min
                                }
                                if (l >= n && l > e.max) {
                                    if (n > e.max) continue;
                                    k = (e.max - l) / (n - l) * (m - k) + k,
                                    l = e.max
                                } else if (n >= l && n > e.max) {
                                    if (l > e.max) continue;
                                    m = (e.max - l) / (n - l) * (m - k) + k,
                                    n = e.max
                                }
                                if (m >= k && k < d.min) {
                                    if (m < d.min) continue;
                                    l = (d.min - k) / (m - k) * (n - l) + l,
                                    k = d.min
                                } else if (k >= m && m < d.min) {
                                    if (k < d.min) continue;
                                    n = (d.min - k) / (m - k) * (n - l) + l,
                                    m = d.min
                                }
                                if (k >= m && k > d.max) {
                                    if (m > d.max) continue;
                                    l = (d.max - k) / (m - k) * (n - l) + l,
                                    k = d.max
                                } else if (m >= k && m > d.max) {
                                    if (k > d.max) continue;
                                    n = (d.max - k) / (m - k) * (n - l) + l,
                                    m = d.max
                                }(k != h || l != i) && ib.moveTo(d.p2c(k) + b, e.p2c(l) + c),
                                h = m,
                                i = n,
                                ib.lineTo(d.p2c(m) + b, e.p2c(n) + c)
                            }
                    }
                ib.stroke()
            }
            function c(a, b, c) {
                for (var d = a.points, e = a.pointsize, f = Math.min(Math.max(0, c.min), c.max), g = 0, h = !1, i = 1, j = 0, k = 0;;) {
                    if (e > 0 && g > d.length + e) break;
                    g += e;
                    var l = d[g - e],
                        m = d[g - e + i],
                        n = d[g],
                        o = d[g + i];
                    if (h) {
                            if (e > 0 && null != l && null == n) {
                                k = g,
                                e = -e,
                                i = 2;
                                continue
                            }
                            if (0 > e && g == j + e) {
                                ib.fill(),
                                h = !1,
                                e = -e,
                                i = 1,
                                g = j = k + e;
                                continue
                            }
                        }
                    if (null != l && null != n) {
                            if (n >= l && l < b.min) {
                                if (n < b.min) continue;
                                m = (b.min - l) / (n - l) * (o - m) + m,
                                l = b.min
                            } else if (l >= n && n < b.min) {
                                if (l < b.min) continue;
                                o = (b.min - l) / (n - l) * (o - m) + m,
                                n = b.min
                            }
                            if (l >= n && l > b.max) {
                                if (n > b.max) continue;
                                m = (b.max - l) / (n - l) * (o - m) + m,
                                l = b.max
                            } else if (n >= l && n > b.max) {
                                if (l > b.max) continue;
                                o = (b.max - l) / (n - l) * (o - m) + m,
                                n = b.max
                            }
                            if (h || (ib.beginPath(), ib.moveTo(b.p2c(l), c.p2c(f)), h = !0), m >= c.max && o >= c.max) ib.lineTo(b.p2c(l), c.p2c(c.max)),
                            ib.lineTo(b.p2c(n), c.p2c(c.max));
                            else if (m <= c.min && o <= c.min) ib.lineTo(b.p2c(l), c.p2c(c.min)),
                            ib.lineTo(b.p2c(n), c.p2c(c.min));
                            else {
                                var p = l,
                                    q = n;
                                o >= m && m < c.min && o >= c.min ? (l = (c.min - m) / (o - m) * (n - l) + l, m = c.min) : m >= o && o < c.min && m >= c.min && (n = (c.min - m) / (o - m) * (n - l) + l, o = c.min),
                                m >= o && m > c.max && o <= c.max ? (l = (c.max - m) / (o - m) * (n - l) + l, m = c.max) : o >= m && o > c.max && m <= c.max && (n = (c.max - m) / (o - m) * (n - l) + l, o = c.max),
                                l != p && ib.lineTo(b.p2c(p), c.p2c(m)),
                                ib.lineTo(b.p2c(l), c.p2c(m)),
                                ib.lineTo(b.p2c(n), c.p2c(o)),
                                n != q && (ib.lineTo(b.p2c(n), c.p2c(o)), ib.lineTo(b.p2c(q), c.p2c(o)))
                            }
                        }
                }
            }
            ib.save(),
            ib.translate(mb.left, mb.top),
            ib.lineJoin = "round";
            var d = a.lines.lineWidth,
                e = a.shadowSize;
            if (d > 0 && e > 0) {
                    ib.lineWidth = e,
                    ib.strokeStyle = "rgba(0,0,0,0.1)";
                    var f = Math.PI / 18;
                    b(a.datapoints, Math.sin(f) * (d / 2 + e / 2), Math.cos(f) * (d / 2 + e / 2), a.xaxis, a.yaxis),
                    ib.lineWidth = e / 2,
                    b(a.datapoints, Math.sin(f) * (d / 2 + e / 4), Math.cos(f) * (d / 2 + e / 4), a.xaxis, a.yaxis)
                }
            ib.lineWidth = d,
            ib.strokeStyle = a.color;
            var g = Q(a.lines, a.color, 0, ob);
            g && (ib.fillStyle = g, c(a.datapoints, a.xaxis, a.yaxis)),
            d > 0 && b(a.datapoints, 0, 0, a.xaxis, a.yaxis),
            ib.restore()
        }
        function N(a) {
            function b(a, b, c, d, e, f, g, h) {
                for (var i = a.points, j = a.pointsize, k = 0; k < i.length; k += j) {
                    var l = i[k],
                        m = i[k + 1];
                    null == l || l < f.min || l > f.max || m < g.min || m > g.max || (ib.beginPath(), l = f.p2c(l), m = g.p2c(m) + d, "circle" == h ? ib.arc(l, m, b, 0, e ? Math.PI : 2 * Math.PI, !1) : h(ib, l, m, b, e), ib.closePath(), c && (ib.fillStyle = c, ib.fill()), ib.stroke())
                }
            }
            ib.save(),
            ib.translate(mb.left, mb.top);
            var c = a.points.lineWidth,
                d = a.shadowSize,
                e = a.points.radius,
                f = a.points.symbol;
            if (0 == c && (c = 1e-4), c > 0 && d > 0) {
                    var g = d / 2;
                    ib.lineWidth = g,
                    ib.strokeStyle = "rgba(0,0,0,0.1)",
                    b(a.datapoints, e, null, g + g / 2, !0, a.xaxis, a.yaxis, f),
                    ib.strokeStyle = "rgba(0,0,0,0.2)",
                    b(a.datapoints, e, null, g / 2, !0, a.xaxis, a.yaxis, f)
                }
            ib.lineWidth = c,
            ib.strokeStyle = a.color,
            b(a.datapoints, e, Q(a.points, a.color), 0, !1, a.xaxis, a.yaxis, f),
            ib.restore()
        }
        function O(a, b, c, d, e, f, g, h, i, j, k) {
            var l, m, n, o, p, q, r, s, t;
            j ? (s = q = r = !0, p = !1, l = c, m = a, o = b + d, n = b + e, l > m && (t = m, m = l, l = t, p = !0, q = !1)) : (p = q = r = !0, s = !1, l = a + d, m = a + e, n = c, o = b, n > o && (t = o, o = n, n = t, s = !0, r = !1)),
            m < g.min || l > g.max || o < h.min || n > h.max || (l < g.min && (l = g.min, p = !1), m > g.max && (m = g.max, q = !1), n < h.min && (n = h.min, s = !1), o > h.max && (o = h.max, r = !1), l = g.p2c(l), n = h.p2c(n), m = g.p2c(m), o = h.p2c(o), f && (i.fillStyle = f(n, o), i.fillRect(l, o, m - l, n - o)), k > 0 && (p || q || r || s) && (i.beginPath(), i.moveTo(l, n), p ? i.lineTo(l, o) : i.moveTo(l, o), r ? i.lineTo(m, o) : i.moveTo(m, o), q ? i.lineTo(m, n) : i.moveTo(m, n), s ? i.lineTo(l, n) : i.moveTo(l, n), i.stroke()))
        }
        function P(a) {
            function b(b, c, d, e, f, g) {
                for (var h = b.points, i = b.pointsize, j = 0; j < h.length; j += i) null != h[j] && O(h[j], h[j + 1], h[j + 2], c, d, e, f, g, ib, a.bars.horizontal, a.bars.lineWidth)
            }
            ib.save(),
            ib.translate(mb.left, mb.top),
            ib.lineWidth = a.bars.lineWidth,
            ib.strokeStyle = a.color;
            var c;
            switch (a.bars.align) {
            case "left":
                c = 0;
                break;
            case "right":
                c = -a.bars.barWidth;
                break;
            default:
                c = -a.bars.barWidth / 2
            }
            var d = a.bars.fill ?
            function (b, c) {
                return Q(a.bars, a.color, b, c)
            } : null;
            b(a.datapoints, c, c + a.bars.barWidth, d, a.xaxis, a.yaxis),
            ib.restore()
        }
        function Q(b, c, d, e) {
            var f = b.fill;
            if (!f) return null;
            if (b.fillColor) return cb(b.fillColor, d, e, c);
            var g = a.color.parse(c);
            return g.a = "number" == typeof f ? f : .4,
            g.normalize(),
            g.toString()
        }
        function R() {
            if (null != eb.legend.container ? a(eb.legend.container).html("") : c.find(".legend").remove(), eb.legend.show) {
                for (var b, d, e = [], f = [], g = !1, h = eb.legend.labelFormatter, i = 0; i < db.length; ++i) b = db[i],
                b.label && (d = h ? h(b.label, b) : b.label, d && f.push({
                    "label": d,
                    "color": b.color
                }));
                if (eb.legend.sorted) if (a.isFunction(eb.legend.sorted)) f.sort(eb.legend.sorted);
                else if ("reverse" == eb.legend.sorted) f.reverse();
                else {
                    var j = "descending" != eb.legend.sorted;
                    f.sort(function (a, b) {
                        return a.label == b.label ? 0 : a.label < b.label != j ? 1 : -1
                    })
                }
                for (var i = 0; i < f.length; ++i) {
                    var k = f[i];
                    i % eb.legend.noColumns == 0 && (g && e.push("</tr>"), e.push("<tr>"), g = !0),
                    e.push('<td class="legendColorBox"><div style="border:1px solid ' + eb.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + k.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + k.label + "</td>")
                }
                if (g && e.push("</tr>"), 0 != e.length) {
                    var l = '<table style="font-size:smaller;color:' + eb.grid.color + '">' + e.join("") + "</table>";
                    if (null != eb.legend.container) a(eb.legend.container).html(l);
                    else {
                        var m = "",
                            n = eb.legend.position,
                            o = eb.legend.margin;
                        null == o[0] && (o = [o, o]),
                        "n" == n.charAt(0) ? m += "top:" + (o[1] + mb.top) + "px;" : "s" == n.charAt(0) && (m += "bottom:" + (o[1] + mb.bottom) + "px;"),
                        "e" == n.charAt(1) ? m += "right:" + (o[0] + mb.right) + "px;" : "w" == n.charAt(1) && (m += "left:" + (o[0] + mb.left) + "px;");
                        var p = a('<div class="legend">' + l.replace('style="', 'style="position:absolute;' + m + ";") + "</div>").appendTo(c);
                        if (0 != eb.legend.backgroundOpacity) {
                                var q = eb.legend.backgroundColor;
                                null == q && (q = eb.grid.backgroundColor, q = q && "string" == typeof q ? a.color.parse(q) : a.color.extract(p, "background-color"), q.a = 1, q = q.toString());
                                var r = p.children();
                                a('<div style="position:absolute;width:' + r.width() + "px;height:" + r.height() + "px;" + m + "background-color:" + q + ';"> </div>').prependTo(p).css("opacity", eb.legend.backgroundOpacity)
                            }
                    }
                }
            }
        }
        function S(a, b, c) {
            var d, e, f, g = eb.grid.mouseActiveRadius,
                h = g * g + 1,
                i = null;
            for (d = db.length - 1; d >= 0; --d) if (c(db[d])) {
                    var j = db[d],
                        k = j.xaxis,
                        l = j.yaxis,
                        m = j.datapoints.points,
                        n = k.c2p(a),
                        o = l.c2p(b),
                        p = g / k.scale,
                        q = g / l.scale;
                    if (f = j.datapoints.pointsize, k.options.inverseTransform && (p = Number.MAX_VALUE), l.options.inverseTransform && (q = Number.MAX_VALUE), j.lines.show || j.points.show) for (e = 0; e < m.length; e += f) {
                            var r = m[e],
                                s = m[e + 1];
                            if (null != r && !(r - n > p || -p > r - n || s - o > q || -q > s - o)) {
                                    var t = Math.abs(k.p2c(r) - a),
                                        u = Math.abs(l.p2c(s) - b),
                                        v = t * t + u * u;
                                    h > v && (h = v, i = [d, e / f])
                                }
                        }
                    if (j.bars.show && !i) {
                            var w, x;
                            switch (j.bars.align) {
                            case "left":
                                w = 0;
                                break;
                            case "right":
                                w = -j.bars.barWidth;
                                break;
                            default:
                                w = -j.bars.barWidth / 2
                            }
                            for (x = w + j.bars.barWidth, e = 0; e < m.length; e += f) {
                                var r = m[e],
                                    s = m[e + 1],
                                    y = m[e + 2];
                                null != r && (db[d].bars.horizontal ? n <= Math.max(y, r) && n >= Math.min(y, r) && o >= s + w && s + x >= o : n >= r + w && r + x >= n && o >= Math.min(y, s) && o <= Math.max(y, s)) && (i = [d, e / f])
                            }
                        }
                }
            return i ? (d = i[0], e = i[1], f = db[d].datapoints.pointsize, {
                    "datapoint": db[d].datapoints.points.slice(e * f, (e + 1) * f),
                    "dataIndex": e,
                    "series": db[d],
                    "seriesIndex": d
                }) : null
        }
        function T(a) {
            eb.grid.hoverable && W("plothover", a, function (a) {
                return 0 != a.hoverable
            })
        }
        function U(a) {
            eb.grid.hoverable && W("plothover", a, function () {
                return !1
            })
        }
        function V(a) {
            W("plotclick", a, function (a) {
                return 0 != a.clickable
            })
        }
        function W(a, b, d) {
            var e = hb.offset(),
                f = b.pageX - e.left - mb.left,
                g = b.pageY - e.top - mb.top,
                h = o({
                    "left": f,
                    "top": g
                });
            h.pageX = b.pageX,
            h.pageY = b.pageY;
            var i = S(f, g, d);
            if (i && (i.pageX = parseInt(i.series.xaxis.p2c(i.datapoint[0]) + e.left + mb.left, 10), i.pageY = parseInt(i.series.yaxis.p2c(i.datapoint[1]) + e.top + mb.top, 10)), eb.grid.autoHighlight) {
                    for (var j = 0; j < rb.length; ++j) {
                        var k = rb[j];
                        k.auto != a || i && k.series == i.series && k.point[0] == i.datapoint[0] && k.point[1] == i.datapoint[1] || $(k.series, k.point)
                    }
                    i && Z(i.series, i.datapoint, a)
                }
            c.trigger(a, [h, i])
        }
        function X() {
            var a = eb.interaction.redrawOverlayInterval;
            return -1 == a ? void Y() : void(sb || (sb = setTimeout(Y, a)))
        }
        function Y() {
            sb = null,
            jb.save(),
            gb.clear(),
            jb.translate(mb.left, mb.top);
            var a, b;
            for (a = 0; a < rb.length; ++a) b = rb[a],
            b.series.bars.show ? bb(b.series, b.point) : ab(b.series, b.point);
            jb.restore(),
            h(pb.drawOverlay, [jb])
        }
        function Z(a, b, c) {
            if ("number" == typeof a && (a = db[a]), "number" == typeof b) {
                var d = a.datapoints.pointsize;
                b = a.datapoints.points.slice(d * b, d * (b + 1))
            }
            var e = _(a, b); - 1 == e ? (rb.push({
                "series": a,
                "point": b,
                "auto": c
            }), X()) : c || (rb[e].auto = !1)
        }
        function $(a, b) {
            if (null == a && null == b) return rb = [],
            void X();
            if ("number" == typeof a && (a = db[a]), "number" == typeof b) {
                var c = a.datapoints.pointsize;
                b = a.datapoints.points.slice(c * b, c * (b + 1))
            }
            var d = _(a, b); - 1 != d && (rb.splice(d, 1), X())
        }
        function _(a, b) {
            for (var c = 0; c < rb.length; ++c) {
                var d = rb[c];
                if (d.series == a && d.point[0] == b[0] && d.point[1] == b[1]) return c
            }
            return -1
        }
        function ab(b, c) {
            var d = c[0],
                e = c[1],
                f = b.xaxis,
                g = b.yaxis,
                h = "string" == typeof b.highlightColor ? b.highlightColor : a.color.parse(b.color).scale("a", .5).toString();
            if (!(d < f.min || d > f.max || e < g.min || e > g.max)) {
                    var i = b.points.radius + b.points.lineWidth / 2;
                    jb.lineWidth = i,
                    jb.strokeStyle = h;
                    var j = 1.5 * i;
                    d = f.p2c(d),
                    e = g.p2c(e),
                    jb.beginPath(),
                    "circle" == b.points.symbol ? jb.arc(d, e, j, 0, 2 * Math.PI, !1) : b.points.symbol(jb, d, e, j, !1),
                    jb.closePath(),
                    jb.stroke()
                }
        }
        function bb(b, c) {
            var d, e = "string" == typeof b.highlightColor ? b.highlightColor : a.color.parse(b.color).scale("a", .5).toString(),
                f = e;
            switch (b.bars.align) {
                case "left":
                    d = 0;
                    break;
                case "right":
                    d = -b.bars.barWidth;
                    break;
                default:
                    d = -b.bars.barWidth / 2
                }
            jb.lineWidth = b.bars.lineWidth,
            jb.strokeStyle = e,
            O(c[0], c[1], c[2] || 0, d, d + b.bars.barWidth, function () {
                    return f
                }, b.xaxis, b.yaxis, jb, b.bars.horizontal, b.bars.lineWidth)
        }
        function cb(b, c, d, e) {
            if ("string" == typeof b) return b;
            for (var f = ib.createLinearGradient(0, d, 0, c), g = 0, h = b.colors.length; h > g; ++g) {
                var i = b.colors[g];
                if ("string" != typeof i) {
                    var j = a.color.parse(e);
                    null != i.brightness && (j = j.scale("rgb", i.brightness)),
                    null != i.opacity && (j.a *= i.opacity),
                    i = j.toString()
                }
                f.addColorStop(g / (h - 1), i)
            }
            return f
        }
        var db = [],
            eb = {
                "colors": ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
                "legend": {
                    "show": !0,
                    "noColumns": 1,
                    "labelFormatter": null,
                    "labelBoxBorderColor": "#ccc",
                    "container": null,
                    "position": "ne",
                    "margin": 5,
                    "backgroundColor": null,
                    "backgroundOpacity": .85,
                    "sorted": null
                },
                "xaxis": {
                    "show": null,
                    "position": "bottom",
                    "mode": null,
                    "font": null,
                    "color": null,
                    "tickColor": null,
                    "transform": null,
                    "inverseTransform": null,
                    "min": null,
                    "max": null,
                    "autoscaleMargin": null,
                    "ticks": null,
                    "tickFormatter": null,
                    "labelWidth": null,
                    "labelHeight": null,
                    "reserveSpace": null,
                    "tickLength": null,
                    "alignTicksWithAxis": null,
                    "tickDecimals": null,
                    "tickSize": null,
                    "minTickSize": null
                },
                "yaxis": {
                    "autoscaleMargin": .02,
                    "position": "left"
                },
                "xaxes": [],
                "yaxes": [],
                "series": {
                    "points": {
                        "show": !1,
                        "radius": 3,
                        "lineWidth": 2,
                        "fill": !0,
                        "fillColor": "#ffffff",
                        "symbol": "circle"
                    },
                    "lines": {
                        "lineWidth": 2,
                        "fill": !1,
                        "fillColor": null,
                        "steps": !1
                    },
                    "bars": {
                        "show": !1,
                        "lineWidth": 2,
                        "barWidth": 1,
                        "fill": !0,
                        "fillColor": null,
                        "align": "left",
                        "horizontal": !1,
                        "zero": !0
                    },
                    "shadowSize": 3,
                    "highlightColor": null
                },
                "grid": {
                    "show": !0,
                    "aboveData": !1,
                    "color": "#545454",
                    "backgroundColor": null,
                    "borderColor": null,
                    "tickColor": null,
                    "margin": 0,
                    "labelMargin": 5,
                    "axisMargin": 8,
                    "borderWidth": 2,
                    "minBorderMargin": null,
                    "markings": null,
                    "markingsColor": "#f4f4f4",
                    "markingsLineWidth": 2,
                    "clickable": !1,
                    "hoverable": !1,
                    "autoHighlight": !0,
                    "mouseActiveRadius": 10
                },
                "interaction": {
                    "redrawOverlayInterval": 1e3 / 60
                },
                "hooks": {}
            },
            fb = null,
            gb = null,
            hb = null,
            ib = null,
            jb = null,
            kb = [],
            lb = [],
            mb = {
                "left": 0,
                "right": 0,
                "top": 0,
                "bottom": 0
            },
            nb = 0,
            ob = 0,
            pb = {
                "processOptions": [],
                "processRawData": [],
                "processDatapoints": [],
                "processOffset": [],
                "drawBackground": [],
                "drawSeries": [],
                "draw": [],
                "bindEvents": [],
                "drawOverlay": [],
                "shutdown": []
            },
            qb = this;
        qb.setData = k,
        qb.setupGrid = B,
        qb.draw = G,
        qb.getPlaceholder = function () {
                return c
            },
        qb.getCanvas = function () {
                return fb.element
            },
        qb.getPlotOffset = function () {
                return mb
            },
        qb.width = function () {
                return nb
            },
        qb.height = function () {
                return ob
            },
        qb.offset = function () {
                var a = hb.offset();
                return a.left += mb.left,
                a.top += mb.top,
                a
            },
        qb.getData = function () {
                return db
            },
        qb.getAxes = function () {
                var b = {};
                return a.each(kb.concat(lb), function (a, c) {
                    c && (b[c.direction + (1 != c.n ? c.n : "") + "axis"] = c)
                }),
                b
            },
        qb.getXAxes = function () {
                return kb
            },
        qb.getYAxes = function () {
                return lb
            },
        qb.c2p = o,
        qb.p2c = p,
        qb.getOptions = function () {
                return eb
            },
        qb.highlight = Z,
        qb.unhighlight = $,
        qb.triggerRedrawOverlay = X,
        qb.pointOffset = function (a) {
                return {
                    "left": parseInt(kb[m(a, "x") - 1].p2c(+a.x) + mb.left, 10),
                    "top": parseInt(lb[m(a, "y") - 1].p2c(+a.y) + mb.top, 10)
                }
            },
        qb.shutdown = v,
        qb.destroy = function () {
                v(),
                c.removeData("plot").empty(),
                db = [],
                eb = null,
                fb = null,
                gb = null,
                hb = null,
                ib = null,
                jb = null,
                kb = [],
                lb = [],
                pb = null,
                rb = [],
                qb = null
            },
        qb.resize = function () {
                var a = c.width(),
                    b = c.height();
                fb.resize(a, b),
                gb.resize(a, b)
            },
        qb.hooks = pb,
        i(qb),
        j(f),
        t(),
        k(e),
        B(),
        G(),
        u();
        var rb = [],
            sb = null
    }
    function d(a, b) {
        return b * Math.floor(a / b)
    }
    var e = Object.prototype.hasOwnProperty;
    b.prototype.resize = function (a, b) {
        if (0 >= a || 0 >= b) throw new Error("Invalid dimensions for plot, width = " + a + ", height = " + b);
        var c = this.element,
            d = this.context,
            e = this.pixelRatio;
        this.width != a && (c.width = a * e, c.style.width = a + "px", this.width = a),
        this.height != b && (c.height = b * e, c.style.height = b + "px", this.height = b),
        d.restore(),
        d.save(),
        d.scale(e, e)
    },
    b.prototype.clear = function () {
        this.context.clearRect(0, 0, this.width, this.height)
    },
    b.prototype.render = function () {
        var a = this._textCache;
        for (var b in a) if (e.call(a, b)) {
            var c = this.getTextLayer(b),
                d = a[b];
            c.hide();
            for (var f in d) if (e.call(d, f)) {
                    var g = d[f];
                    for (var h in g) if (e.call(g, h)) {
                        for (var i, j = g[h].positions, k = 0; i = j[k]; k++) i.active ? i.rendered || (c.append(i.element), i.rendered = !0) : (j.splice(k--, 1), i.rendered && i.element.detach());
                        0 == j.length && delete g[h]
                    }
                }
            c.show()
        }
    },
    b.prototype.getTextLayer = function (b) {
        var c = this.text[b];
        return null == c && (null == this.textContainer && (this.textContainer = a("<div class='flot-text'></div>").css({
            "position": "absolute",
            "top": 0,
            "left": 0,
            "bottom": 0,
            "right": 0,
            "font-size": "smaller",
            "color": "#545454"
        }).insertAfter(this.element)), c = this.text[b] = a("<div></div>").addClass(b).css({
            "position": "absolute",
            "top": 0,
            "left": 0,
            "bottom": 0,
            "right": 0
        }).appendTo(this.textContainer)),
        c
    },
    b.prototype.getTextInfo = function (b, c, d, e, f) {
        var g, h, i, j;
        if (c = "" + c, g = "object" == typeof d ? d.style + " " + d.variant + " " + d.weight + " " + d.size + "px/" + d.lineHeight + "px " + d.family : d, h = this._textCache[b], null == h && (h = this._textCache[b] = {}), i = h[g], null == i && (i = h[g] = {}), j = i[c], null == j) {
            var k = a("<div></div>").html(c).css({
                "position": "absolute",
                "max-width": f,
                "top": -9999
            }).appendTo(this.getTextLayer(b));
            "object" == typeof d ? k.css({
                "font": g,
                "color": d.color
            }) : "string" == typeof d && k.addClass(d),
            j = i[c] = {
                "width": k.outerWidth(!0),
                "height": k.outerHeight(!0),
                "element": k,
                "positions": []
            },
            k.detach()
        }
        return j
    },
    b.prototype.addText = function (a, b, c, d, e, f, g, h, i) {
        var j = this.getTextInfo(a, d, e, f, g),
            k = j.positions;
        "center" == h ? b -= j.width / 2 : "right" == h && (b -= j.width),
        "middle" == i ? c -= j.height / 2 : "bottom" == i && (c -= j.height);
        for (var l, m = 0; l = k[m]; m++) if (l.x == b && l.y == c) return void(l.active = !0);
        l = {
                "active": !0,
                "rendered": !1,
                "element": k.length ? j.element.clone() : j.element,
                "x": b,
                "y": c
            },
        k.push(l),
        l.element.css({
                "top": Math.round(c),
                "left": Math.round(b),
                "text-align": h
            })
    },
    b.prototype.removeText = function (a, b, c, d, f, g) {
        if (null == d) {
            var h = this._textCache[a];
            if (null != h) for (var i in h) if (e.call(h, i)) {
                var j = h[i];
                for (var k in j) if (e.call(j, k)) for (var l, m = j[k].positions, n = 0; l = m[n]; n++) l.active = !1
            }
        } else for (var l, m = this.getTextInfo(a, d, f, g).positions, n = 0; l = m[n]; n++) l.x == b && l.y == c && (l.active = !1)
    },
    a.plot = function (b, d, e) {
        var f = new c(a(b), d, e, a.plot.plugins);
        return f
    },
    a.plot.version = "0.8.2",
    a.plot.plugins = [],
    a.fn.plot = function (b, c) {
        return this.each(function () {
            a.plot(this, b, c)
        })
    }
}(jQuery),


function (a) {
    function b(b) {
        function e(b) {
            x || (x = !0, r = b.getCanvas(), s = a(r).parent(), t = b.getOptions(), b.setData(f(b.getData())))
        }
        function f(b) {
            for (var c = 0, d = 0, e = 0, f = t.series.pie.combine.color, g = [], h = 0; h < b.length; ++h) {
                var i = b[h].data;
                a.isArray(i) && 1 == i.length && (i = i[0]),
                a.isArray(i) ? i[1] = !isNaN(parseFloat(i[1])) && isFinite(i[1]) ? +i[1] : 0 : i = !isNaN(parseFloat(i)) && isFinite(i) ? [1, +i] : [1, 0],
                b[h].data = [i]
            }
            for (var h = 0; h < b.length; ++h) c += b[h].data[0][1];
            for (var h = 0; h < b.length; ++h) {
                var i = b[h].data[0][1];
                i / c <= t.series.pie.combine.threshold && (d += i, e++, f || (f = b[h].color))
            }
            for (var h = 0; h < b.length; ++h) {
                var i = b[h].data[0][1];
                (2 > e || i / c > t.series.pie.combine.threshold) && g.push({
                    "data": [
                        [1, i]
                    ],
                    "color": b[h].color,
                    "label": b[h].label,
                    "angle": i * Math.PI * 2 / c,
                    "percent": i / (c / 100)
                })
            }
            return e > 1 && g.push({
                "data": [
                    [1, d]
                ],
                "color": f,
                "label": t.series.pie.combine.label,
                "angle": d * Math.PI * 2 / c,
                "percent": d / (c / 100)
            }),
            g
        }
        function g(b, e) {
            function f() {
                y.clearRect(0, 0, j, k),
                s.children().filter(".pieLabel, .pieLabelBackground").remove()
            }
            function g() {
                var a = t.series.pie.shadow.left,
                    b = t.series.pie.shadow.top,
                    c = 10,
                    d = t.series.pie.shadow.alpha,
                    e = t.series.pie.radius > 1 ? t.series.pie.radius : u * t.series.pie.radius;
                if (!(e >= j / 2 - a || e * t.series.pie.tilt >= k / 2 - b || c >= e)) {
                        y.save(),
                        y.translate(a, b),
                        y.globalAlpha = d,
                        y.fillStyle = "#000",
                        y.translate(v, w),
                        y.scale(1, t.series.pie.tilt);
                        for (var f = 1; c >= f; f++) y.beginPath(),
                        y.arc(0, 0, e, 0, 2 * Math.PI, !1),
                        y.fill(),
                        e -= f;
                        y.restore()
                    }
            }
            function i() {
                function b(a, b, c) {
                    0 >= a || isNaN(a) || (c ? y.fillStyle = b : (y.strokeStyle = b, y.lineJoin = "round"), y.beginPath(), Math.abs(a - 2 * Math.PI) > 1e-9 && y.moveTo(0, 0), y.arc(0, 0, e, f, f + a / 2, !1), y.arc(0, 0, e, f + a / 2, f + a, !1), y.closePath(), f += a, c ? y.fill() : y.stroke())
                }
                function c() {
                    function b(b, c, d) {
                        if (0 == b.data[0][1]) return !0;
                        var f, g = t.legend.labelFormatter,
                            h = t.series.pie.label.formatter;
                        f = g ? g(b.label, b) : b.label,
                        h && (f = h(f, b));
                        var i = (c + b.angle + c) / 2,
                            l = v + Math.round(Math.cos(i) * e),
                            m = w + Math.round(Math.sin(i) * e) * t.series.pie.tilt,
                            n = "<span class='pieLabel' id='pieLabel" + d + "' style='position:absolute;top:" + m + "px;left:" + l + "px;'>" + f + "</span>";
                        s.append(n);
                        var o = s.children("#pieLabel" + d),
                            p = m - o.height() / 2,
                            q = l - o.width() / 2;
                        if (o.css("top", p), o.css("left", q), 0 - p > 0 || 0 - q > 0 || k - (p + o.height()) < 0 || j - (q + o.width()) < 0) return !1;
                        if (0 != t.series.pie.label.background.opacity) {
                                var r = t.series.pie.label.background.color;
                                null == r && (r = b.color);
                                var u = "top:" + p + "px;left:" + q + "px;";
                                a("<div class='pieLabelBackground' style='position:absolute;width:" + o.width() + "px;height:" + o.height() + "px;" + u + "background-color:" + r + ";'></div>").css("opacity", t.series.pie.label.background.opacity).insertBefore(o)
                            }
                        return !0
                    }
                    for (var c = d, e = t.series.pie.label.radius > 1 ? t.series.pie.label.radius : u * t.series.pie.label.radius, f = 0; f < m.length; ++f) {
                        if (m[f].percent >= 100 * t.series.pie.label.threshold && !b(m[f], c, f)) return !1;
                        c += m[f].angle
                    }
                    return !0
                }
                var d = Math.PI * t.series.pie.startAngle,
                    e = t.series.pie.radius > 1 ? t.series.pie.radius : u * t.series.pie.radius;
                y.save(),
                y.translate(v, w),
                y.scale(1, t.series.pie.tilt),
                y.save();
                for (var f = d, g = 0; g < m.length; ++g) m[g].startAngle = f,
                b(m[g].angle, m[g].color, !0);
                if (y.restore(), t.series.pie.stroke.width > 0) {
                        y.save(),
                        y.lineWidth = t.series.pie.stroke.width,
                        f = d;
                        for (var g = 0; g < m.length; ++g) b(m[g].angle, t.series.pie.stroke.color, !1);
                        y.restore()
                    }
                return h(y),
                y.restore(),
                t.series.pie.label.show ? c() : !0
            }
            if (s) {
                var j = b.getPlaceholder().width(),
                    k = b.getPlaceholder().height(),
                    l = s.children().filter(".legend").children().width() || 0;
                y = e,
                x = !1,
                u = Math.min(j, k / t.series.pie.tilt) / 2,
                w = k / 2 + t.series.pie.offset.top,
                v = j / 2,
                "auto" == t.series.pie.offset.left ? (t.legend.position.match("w") ? v += l / 2 : v -= l / 2, u > v ? v = u : v > j - u && (v = j - u)) : v += t.series.pie.offset.left;
                var m = b.getData(),
                    n = 0;
                do n > 0 && (u *= d),
                n += 1,
                f(),
                t.series.pie.tilt <= .8 && g();
                while (!i() && c > n);
                n >= c && (f(), s.prepend("<div class='error'>Could not draw pie with labels contained inside canvas</div>")),
                b.setSeries && b.insertLegend && (b.setSeries(m), b.insertLegend())
            }
        }
        function h(a) {
            if (t.series.pie.innerRadius > 0) {
                a.save();
                var b = t.series.pie.innerRadius > 1 ? t.series.pie.innerRadius : u * t.series.pie.innerRadius;
                a.globalCompositeOperation = "destination-out",
                a.beginPath(),
                a.fillStyle = t.series.pie.stroke.color,
                a.arc(0, 0, b, 0, 2 * Math.PI, !1),
                a.fill(),
                a.closePath(),
                a.restore(),
                a.save(),
                a.beginPath(),
                a.strokeStyle = t.series.pie.stroke.color,
                a.arc(0, 0, b, 0, 2 * Math.PI, !1),
                a.stroke(),
                a.closePath(),
                a.restore()
            }
        }
        function i(a, b) {
            for (var c = !1, d = -1, e = a.length, f = e - 1; ++d < e; f = d)(a[d][1] <= b[1] && b[1] < a[f][1] || a[f][1] <= b[1] && b[1] < a[d][1]) && b[0] < (a[f][0] - a[d][0]) * (b[1] - a[d][1]) / (a[f][1] - a[d][1]) + a[d][0] && (c = !c);
            return c
        }
        function j(a, c) {
            for (var d, e, f = b.getData(), g = b.getOptions(), h = g.series.pie.radius > 1 ? g.series.pie.radius : u * g.series.pie.radius, j = 0; j < f.length; ++j) {
                var k = f[j];
                if (k.pie.show) {
                    if (y.save(), y.beginPath(), y.moveTo(0, 0), y.arc(0, 0, h, k.startAngle, k.startAngle + k.angle / 2, !1), y.arc(0, 0, h, k.startAngle + k.angle / 2, k.startAngle + k.angle, !1), y.closePath(), d = a - v, e = c - w, y.isPointInPath) {
                        if (y.isPointInPath(a - v, c - w)) return y.restore(),
                        {
                            "datapoint": [k.percent, k.data],
                            "dataIndex": 0,
                            "series": k,
                            "seriesIndex": j
                        }
                    } else {
                        var l = h * Math.cos(k.startAngle),
                            m = h * Math.sin(k.startAngle),
                            n = h * Math.cos(k.startAngle + k.angle / 4),
                            o = h * Math.sin(k.startAngle + k.angle / 4),
                            p = h * Math.cos(k.startAngle + k.angle / 2),
                            q = h * Math.sin(k.startAngle + k.angle / 2),
                            r = h * Math.cos(k.startAngle + k.angle / 1.5),
                            s = h * Math.sin(k.startAngle + k.angle / 1.5),
                            t = h * Math.cos(k.startAngle + k.angle),
                            x = h * Math.sin(k.startAngle + k.angle),
                            z = [
                                [0, 0],
                                [l, m],
                                [n, o],
                                [p, q],
                                [r, s],
                                [t, x]
                        ],
                            A = [d, e];
                        if (i(z, A)) return y.restore(),
                        {
                                "datapoint": [k.percent, k.data],
                                "dataIndex": 0,
                                "series": k,
                                "seriesIndex": j
                            }
                    }
                    y.restore()
                }
            }
            return null
        }
        function k(a) {
            m("plothover", a)
        }
        function l(a) {
            m("plotclick", a)
        }
        function m(a, c) {
            var d = b.offset(),
                e = parseInt(c.pageX - d.left),
                f = parseInt(c.pageY - d.top),
                g = j(e, f);
            if (t.grid.autoHighlight) for (var h = 0; h < z.length; ++h) {
                    var i = z[h];
                    i.auto != a || g && i.series == g.series || o(i.series)
                }
            g && n(g.series, a);
            var k = {
                    "pageX": c.pageX,
                    "pageY": c.pageY
                };
            s.trigger(a, [k, g])
        }
        function n(a, c) {
            var d = p(a); - 1 == d ? (z.push({
                "series": a,
                "auto": c
            }), b.triggerRedrawOverlay()) : c || (z[d].auto = !1)
        }
        function o(a) {
            null == a && (z = [], b.triggerRedrawOverlay());
            var c = p(a); - 1 != c && (z.splice(c, 1), b.triggerRedrawOverlay())
        }
        function p(a) {
            for (var b = 0; b < z.length; ++b) {
                var c = z[b];
                if (c.series == a) return b
            }
            return -1
        }
        function q(a, b) {
            function c(a) {
                a.angle <= 0 || isNaN(a.angle) || (b.fillStyle = "rgba(255, 255, 255, " + d.series.pie.highlight.opacity + ")", b.beginPath(), Math.abs(a.angle - 2 * Math.PI) > 1e-9 && b.moveTo(0, 0), b.arc(0, 0, e, a.startAngle, a.startAngle + a.angle / 2, !1), b.arc(0, 0, e, a.startAngle + a.angle / 2, a.startAngle + a.angle, !1), b.closePath(), b.fill())
            }
            var d = a.getOptions(),
                e = d.series.pie.radius > 1 ? d.series.pie.radius : u * d.series.pie.radius;
            b.save(),
            b.translate(v, w),
            b.scale(1, d.series.pie.tilt);
            for (var f = 0; f < z.length; ++f) c(z[f].series);
            h(b),
            b.restore()
        }
        var r = null,
            s = null,
            t = null,
            u = null,
            v = null,
            w = null,
            x = !1,
            y = null,
            z = [];
        b.hooks.processOptions.push(function (a, b) {
                b.series.pie.show && (b.grid.show = !1, "auto" == b.series.pie.label.show && (b.series.pie.label.show = b.legend.show ? !1 : !0), "auto" == b.series.pie.radius && (b.series.pie.radius = b.series.pie.label.show ? .75 : 1), b.series.pie.tilt > 1 ? b.series.pie.tilt = 1 : b.series.pie.tilt < 0 && (b.series.pie.tilt = 0))
            }),
        b.hooks.bindEvents.push(function (a, b) {
                var c = a.getOptions();
                c.series.pie.show && (c.grid.hoverable && b.unbind("mousemove").mousemove(k), c.grid.clickable && b.unbind("click").click(l))
            }),
        b.hooks.processDatapoints.push(function (a, b, c, d) {
                var f = a.getOptions();
                f.series.pie.show && e(a, b, c, d)
            }),
        b.hooks.drawOverlay.push(function (a, b) {
                var c = a.getOptions();
                c.series.pie.show && q(a, b)
            }),
        b.hooks.draw.push(function (a, b) {
                var c = a.getOptions();
                c.series.pie.show && g(a, b)
            })
    }
    var c = 10,
        d = .95,
        e = {
            "series": {
                "pie": {
                    "show": !1,
                    "radius": "auto",
                    "innerRadius": 0,
                    "startAngle": 1.5,
                    "tilt": 1,
                    "shadow": {
                        "left": 5,
                        "top": 15,
                        "alpha": .02
                    },
                    "offset": {
                        "top": 0,
                        "left": "auto"
                    },
                    "stroke": {
                        "color": "#fff",
                        "width": 1
                    },
                    "label": {
                        "show": "auto",
                        "formatter": function (a, b) {
                            return "<div style='font-size:x-small;text-align:center;padding:2px;color:" + b.color + ";'>" + a + "<br/>" + Math.round(b.percent) + "%</div>"
                        },
                        "radius": 1,
                        "background": {
                            "color": null,
                            "opacity": 0
                        },
                        "threshold": 0
                    },
                    "combine": {
                        "threshold": -1,
                        "color": null,
                        "label": "Other"
                    },
                    "highlight": {
                        "opacity": .5
                    }
                }
            }
        };
    a.plot.plugins.push({
            "init": b,
            "options": e,
            "name": "pie",
            "version": "1.1"
        })
}(jQuery),


function () {
    var PixelPlot;
    if (!$.fn.plot) throw new Error("jquery.flot.js required");
    PixelPlot = function ($graph, graph_data, plot_options, options) {
        var available_colors, d, data, dataItem, previousPoint, timer, _i, _j, _len, _len1;
        for (null == options && (options = {}), this.options = $.extend(!0, {}, PixelPlot.DEFAULTS, options || {}), this.plot_options = $.extend(!0, {}, PixelPlot.PLOT_DEFAULTS, plot_options || {}), data = [], this.current_width = null, this.plot_obj = null, timer = null, available_colors = window.TinyAdmin.settings.consts.COLORS.slice(0), _i = 0, _len = graph_data.length; _len > _i; _i++) d = graph_data[_i],
        data.push($.extend({}, d));
        if (this.$graph = $graph.addClass("pa-flot-graph"), this.$graph_container = $('<div class="pa-flot-container"></div>'), this.$graph_info = $('<div class="pa-flot-info"></div>'), this.$graph_container.insertAfter(this.$graph).append(this.$graph_info).append(this.$graph), this.resizeContainer(), data.length) {
            for (_j = 0, _len1 = data.length; _len1 > _j; _j++) dataItem = data[_j],
            void 0 === dataItem.color && (dataItem.color = available_colors.shift()),
            dataItem.filledPoints === !0 && ($.extend(!0, dataItem, {
                "points": {
                    "radius": this.options.pointRadius,
                    "fillColor": dataItem.color
                }
            }), delete dataItem.filledPoints),
            this.$graph_info.append($('<span><i style="background: ' + dataItem.color + '"></i>' + dataItem.label + "</span>"));
            return this.plot_obj = $.plot($graph, data, this.plot_options),
            void 0 === this.plot_options.series.pie && (previousPoint = null, $graph.bind("plothover", function (_this) {
                return function (event, pos, item) {
                    var x, y;
                    return item ? previousPoint !== item.dataIndex ? (previousPoint = item.dataIndex, $(".pa-flot-tooltip").remove(), x = item.datapoint[0], y = item.datapoint[1], _this.showTooltip(item.pageX, item.pageY, eval(_this.options.tooltipText))) : void 0 : ($(".pa-flot-tooltip").remove(), previousPoint = null)
                }
            }(this))),
            $(window).on("pa.resize", $.proxy(this.resizeContainer, this))
        }
    },
    PixelPlot.prototype.resizeContainer = function () {
        var a, b;
        return b = this.$graph_container.innerWidth(),
        b !== this.current_width ? (a = null === this.options.height ? Math.ceil(b * this.options.heightRatio) : this.options.height, this.$graph.css({
            "width": b,
            "height": a
        }), this.current_width = b, this.plot_obj ? (this.plot_obj.getPlaceholder().css({
            "width": b,
            "height": a
        }), this.plot_obj.resize(), this.plot_obj.setupGrid(), this.plot_obj.draw()) : void 0) : void 0
    },
    PixelPlot.prototype.showTooltip = function (a, b, c) {
        var d;
        return d = $('<div class="pa-flot-tooltip">' + c + "</div>").appendTo("body"),
        a + 20 + d.width() > this.$graph_container.offset().left + this.$graph_container.width() ? a -= 40 + d.width() : a += 20,
        d.css({
            "top": b - 16,
            "left": a
        }).fadeIn()
    },
    PixelPlot.DEFAULTS = {
        "pointRadius": 4,
        "height": null,
        "heightRatio": .5,
        "tooltipText": "x - y"
    },
    PixelPlot.PLOT_DEFAULTS = {
        "series": {
            "shadowSize": 0
        },
        "grid": {
            "color": "#999",
            "borderColor": "#fff",
            "borderWidth": 1,
            "hoverable": !0
        },
        "xaxis": {
            "tickColor": "#fff"
        },
        "legend": {
            "show": !1
        }
    },
    $.fn.pixelPlot = function (a, b, c) {
        return this.each(function () {
            var d;
            return d = $.data(this, "PixelPlot"),
            d ? "resizeContainer" === b ? d.resizeContainer() : void 0 : $.data(this, "PixelPlot", new PixelPlot($(this), a, b, c))
        })
    },
    $.fn.pixelPlot.Constructor = PixelPlot
}.call(this),




function () {
    var a;
    if (!$.fn.datepicker) throw new Error("bootstrap-datepicker.js required");
    a = $.fn.datepicker,
    $.fn.datepicker = function (b) {
        return b = $.extend({
            "rtl": $("body").hasClass("right-to-left")
        }, b || {}),
        a.call($(this), b)
    }
}.call(this),



function () {
    var a;
    if (!$.fn.datepaginator) throw new Error("bootstrap-datepaginator.js required");
    a = $.fn.datepaginator,
    $.fn.datepaginator = function (b, c) {
        return a.call(this, $.extend({}, {
            "injectStyle": !1,
            "itemWidth": 45,
            "selectedItemWidth": 160
        }, b || {}), c)
    }
}.call(this),

function () {
    var a;
    if (!$.fn.knob) throw new Error("jquery.knob.js required");
    a = $.fn.knob,
    $.fn.knob = function (b) {
        var c;
        return c = $("body"),
        a.call(this, b).each(function () {
            var a;
            return c.hasClass("right-to-left") ? (a = $(this).find("input"), a.css({
                "margin-left": 0,
                "margin-right": a.css("margin-left")
            })) : void 0
        })
    }
}.call(this),


function () {
    var a;
    if (!$.fn.sparkline) throw new Error("jquery.sparkline.js required");
    a = function (a, b, c) {
        var d, e;
        return e = a.outerWidth(),
        d = parseInt(c) * (b - 1),
        Math.floor((e - d) / b)
    },
    $.fn.pixelSparkline = function () {
        var b, c, d, e;
        return c = arguments,
        d = !1,
        e = 0,
        b = "2px",
        c[0] instanceof Array && c[1] instanceof Object && "bar" === c[1].type && "100%" === c[1].width && (d = !0, e = c[0].length, c[1].barSpacing && (b = c[1].barSpacing), c[1].barWidth = a($(this), e, b)),
        $.fn.sparkline.apply(this, c),
        $(window).on("pa.resize", function (f) {
            return function () {
                return d && (c[1].barWidth = a($(f), e, b)),
                $.fn.sparkline.apply(f, c)
            }
        }(this))
    }
}.call(this)
/*end tiny-admin.min.js*/