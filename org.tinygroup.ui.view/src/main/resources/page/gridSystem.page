#@uiPageTitle()栅格系统#end

#*<h2>为何要栅格？</h2>

<p>做网页就像盖楼，地皮有了，这一块干啥，那一块干啥，中间留多宽的道路，提前规划很重要，只有精确到像素才能让网页看上去更规范，更便于统一维护，扩展。同时保持网站的整体风格。</p>*#
<p>Bootstrap 提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列。通过不同的行列组合我们可以实现各种布局，内容就放在一个个的格子中，就像收纳盒一样。</p>

<h2>简介</h2>
<p>栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，你的内容就可以放入这些创建好的布局中。下面就介绍一下 Bootstrap 栅格系统的工作原理：</p>
<ul>
	<li>“行（row）”必须包含在 <code>.container</code> （固定宽度）或 <code>.container-fluid</code> （100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。</li>
    <li>通过“行（row）”在水平方向创建一组“列（column）”。</li>
    <li>你的内容应当放置于“列（column）”内，并且，只有“列（column）”可以作为行（row）”的直接子元素。</li>
    <li>类似 <code>.row</code> 和 <code>.col-xs-4</code> 这种预定义的类，可以用来快速创建栅格布局。Bootstrap 源码中定义的 mixin 也可以用来创建语义化的布局。</li>
    <li>通过为“列（column）”设置 <code>padding</code> 属性，从而创建列与列之间的间隔（gutter）。通过为 <code>.row</code> 元素设置负值 <code>margin</code> 从而抵消掉为 <code>.container</code> 元素设置的 <code>padding</code>，也就间接为“行（row）”所包含的“列（column）”抵消掉了<code>padding</code>。</li>
    <li>负值的 margin就是下面的示例为什么是向外突出的原因。在栅格列中的内容排成一行。</li>
    <li>栅格系统中的列是通过指定1到12的值来表示其跨越的范围。例如，三个等宽的列可以使用三个 .col-xs-4 来创建。</li>
    <li>如果一“行（row）”中包含了的“列（column）”大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列。</li>
    <li>栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 <code>.col-md-*</code> 栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 <code>.col-lg-*</code> 不存在， 也影响大屏幕设备。</li>
</ul>

<h2>1 从堆叠到水平排列</h2>
#@p()使用单一的一组 <code>.col-md-*</code> 栅格类，就可以创建一个基本的栅格系统，在手机和平板设备上一开始是堆叠在一起的（超小屏幕到小屏幕这一范围），在桌面（中等）屏幕设备上变为水平排列。所有“列（column）必须放在 ” .row 内。#end
#showExample("/page/gridSystem/1.1.page")
#showExample("/page/gridSystem/1.2.page" "栅格系统")
<h2>3  响应式栅格系统</h2>
<p>默认栅格，不支持移动端响应式。如果需要支持，需要在.row 的父级增加个responsive 样式，让栅格支持移动端（宽度小于767px）响应式布局。</p>
#showExample("/page/gridSystem/1.3.page")
#@showPack() org.tinygroup.ui.gridsystems #end

##以下是为了直观演示，故加了背景颜色、上下间距、文字颜色，其框架本身没有样式。
<style type="text/css">
.row-demo .row,.row-demo .col-1{ margin-top:10px}
.row-demo [class^="col-"],.row-demo [class*=" col-"]{background-color:#f7f7f9;border: 1px solid #ddd;padding: 5px 0;text-align: center;}
ul li{list-style-type:disc;line-height:2;}
.show-grid{margin-bottom:15px;}
.show-grid [class^=col-] {padding-top:10px;padding-bottom: 10px;background:#f7f7f9;border: 1px solid #ddd;}
</style>