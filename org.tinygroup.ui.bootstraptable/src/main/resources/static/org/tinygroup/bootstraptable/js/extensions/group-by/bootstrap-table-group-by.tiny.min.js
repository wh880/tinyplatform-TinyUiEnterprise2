!function(f){var q,d="data-tt-id",j="data-tt-parent-id",e={},h=undefined;var b=function(t,u){var r=t.$body.find("tr").not("[data-tt-parent-id]");for(var s=0;s<r.length;s++){if(s===u){return f(r[s]).attr("data-tt-id")}}return undefined};var m=function(s,t){var r={};f.each(t,function(u,v){if(!v.IsParent){for(var w in v){if(!isNaN(parseFloat(v[w]))){if(s.columns[f.fn.bootstrapTable.utils.getFieldIndex(s.columns,w)].groupBySumGroup){if(r[w]===undefined){r[w]=0}r[w]+=+v[w]}}}}});return r};var g=function(s,r){q.apply([s,r]);e[d.toString()]=r;if(!s.IsParent){e[j.toString()]=h===undefined?r:h}else{h=r;delete e[j.toString()]}return e};var a=function(){Object.keys=function(t){if(t!==Object(t)){throw new TypeError("Object.keys called on a non-object")}var r=[],s;for(s in t){if(Object.prototype.hasOwnProperty.call(t,s)){r.push(s)}}return r}};var n=function(u,t){var r=[];for(var s=0;s<u.options.groupByField.length;s++){r.push(t[u.options.groupByField[s]])}return r};var i=function(v,r,t){var s={};for(var u=0;u<v.options.groupByField.length;u++){s[v.options.groupByField[u].toString()]=r[t][0][v.options.groupByField[u]]}s.IsParent=true;return s};var p=function(t,s){var r={};f.each(t,function(u,w){var v=JSON.stringify(s(w));r[v]=r[v]||[];r[v].push(w)});return Object.keys(r).map(function(u){return r[u]})};var k=function(v,w){var u=[],s={};var r=p(w,function(x){return n(v,x)});for(var t=0;t<r.length;t++){r[t].unshift(i(v,r,t));if(v.options.groupBySumGroup){s=m(v,r[t]);if(!f.isEmptyObject(s)){r[t].push(s)}}}u=u.concat.apply(u,r);if(!v.options.loaded&&u.length>0){v.options.loaded=true;v.options.originalData=v.options.data;v.options.data=u}return u};f.extend(f.fn.bootstrapTable.defaults,{groupBy:false,groupByField:[],groupBySumGroup:false,groupByInitExpanded:undefined,loaded:false,originalData:undefined});f.fn.bootstrapTable.methods.push("collapseAll","expandAll","refreshGroupByField");f.extend(f.fn.bootstrapTable.COLUMN_DEFAULTS,{groupBySumGroup:false});var c=f.fn.bootstrapTable.Constructor,l=c.prototype.init,o=c.prototype.initData;c.prototype.init=function(){if(!this.options.sortName){if((this.options.groupBy)&&(this.options.groupByField.length>0)){var r=this;if(!Object.keys){a()}this.options.loaded=false;this.options.originalData=undefined;q=this.options.rowAttributes;this.options.rowAttributes=g;this.$el.on("post-body.bs.table",function(){r.$el.treetable({expandable:true,onNodeExpand:function(){if(r.options.height){r.resetHeader()}},onNodeCollapse:function(){if(r.options.height){r.resetHeader()}}},true);if(r.options.groupByInitExpanded!==undefined){if(typeof r.options.groupByInitExpanded==="number"){r.expandNode(r.options.groupByInitExpanded)}else{if(r.options.groupByInitExpanded.toLowerCase()==="all"){r.expandAll()}}}})}}l.apply(this,Array.prototype.slice.apply(arguments))};c.prototype.initData=function(s,r){if(!this.options.sortName){if((this.options.groupBy)&&(this.options.groupByField.length>0)){this.options.groupByField=typeof this.options.groupByField==="string"?this.options.groupByField.replace("[","").replace("]","").replace(/ /g,"").toLowerCase().split(","):this.options.groupByField;s=k(this,s?s:this.options.data)}}o.apply(this,[s,r])};c.prototype.expandAll=function(){this.$el.treetable("expandAll")};c.prototype.collapseAll=function(){this.$el.treetable("collapseAll")};c.prototype.expandNode=function(r){r=b(this,r);if(r!==undefined){this.$el.treetable("expandNode",r)}};c.prototype.refreshGroupByField=function(r){if(!f.fn.bootstrapTable.utils.compareObjects(this.options.groupByField,r)){this.options.groupByField=r;this.load(this.options.originalData)}}}(jQuery);